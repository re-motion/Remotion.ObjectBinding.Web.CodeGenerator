<?xml version="1.0" encoding="utf-8"?><doc><assembly>
        <name>Remotion.Web</name>
    </assembly><members><member name="T:Remotion.Web.IResourceUrl"><summary>
            Represents the absolute URL for a resource file (css-file, js-file, etc).
            <seealso cref="T:Remotion.Web.ResourceUrl" />
            <seealso cref="T:Remotion.Web.ThemedResourceUrl" />
            </summary></member><member name="T:Remotion.Web.IResourceUrlFactory"><summary>
            Defines methods for creating objects that implement <see cref="T:Remotion.Web.IResourceUrl" />.
            <seealso cref="T:Remotion.Web.Factories.ResourceUrlFactory" />
            </summary></member><member name="M:Remotion.Web.IResourceUrlFactory.CreateResourceUrl(System.Type,Remotion.Web.ResourceType,System.String)"><summary>
            Creates an <see cref="T:Remotion.Web.IResourceUrl" /> object that is independent of the selected <see cref="T:Remotion.Web.ResourceTheme" />.
            </summary></member><member name="M:Remotion.Web.IResourceUrlFactory.CreateThemedResourceUrl(System.Type,Remotion.Web.ResourceType,System.String)"><summary>
            Creates an <see cref="T:Remotion.Web.IResourceUrl" /> object that depends on the selected <see cref="T:Remotion.Web.ResourceTheme" />.
            </summary></member><member name="T:Remotion.Web.IResourceUrlResolver"><summary>
              Resolve the relative image URL into an absolute image url.
            </summary></member><member name="M:Remotion.Web.IResourceUrlResolver.GetResourceUrl(System.Web.UI.Control,System.Type,Remotion.Web.ResourceType,System.String)"><summary>
              Resolves a relative URL into an absolute URL.
            </summary><param name="control"> 
              The current <see cref="T:System.Web.UI.Control" />. Used to detect design time.
            </param><param name="fileName">
              The relative URL to be resolved into an absolute URL.
            </param><param name="definingType"> 
              The type that defines the resource. If the resource instance is not defined by a type, 
              this is <see langword="null" />. 
            </param><param name="resourceType">
              The type of resource to get. 
            </param></member><member name="T:Remotion.Web.ResourceUrl"><summary>
            Represents the absolute URL for a resource file that does not change with the <see cref="T:Remotion.Web.ResourceTheme" />.
            </summary></member><member name="T:Remotion.Web.ResourceUrlResolver"><summary> Utility methods for URL resolving. </summary></member><member name="M:Remotion.Web.ResourceUrlResolver.GetResourceUrl(Remotion.Web.UI.Controls.IControl,System.Web.HttpContextBase,System.Type,Remotion.Web.ResourceType,System.String)"><summary>
              Returns the physical URL of a resource item.
              <seealso cref="T:Remotion.Web.IResourceUrlResolver" />.
            </summary><param name="control"> 
              The current <see cref="T:System.Web.UI.Control" />. Currently, this parameter is only used to detect design time.
            </param><param name="context"> The current <see cref="T:System.Web.HttpContext" />. </param><param name="definingType"> The type that this resource item is associated with. </param><param name="resourceType"> The resource type (image, static html, etc.) </param><param name="relativeUrl"> The relative URL of the item. </param></member><member name="M:Remotion.Web.ResourceUrlResolver.GetResourceUrl(Remotion.Web.UI.Controls.IControl,System.Type,Remotion.Web.ResourceType,System.String)"><summary>
              Returns the physical URL of a resource item.
            </summary><param name="control"> 
              The current <see cref="T:System.Web.UI.Control" />. This parameter is only used to detect design time.
            </param><param name="definingType"> 
              The type that this resource item is associated with. Must not be <see langword="null" />.
            </param><param name="resourceType"> The resource type (image, static html, etc.) Must not be <see langword="null" />. </param><param name="relativeUrl"> The resource file name. Must not be <see langword="null" /> or empty.</param></member><member name="M:Remotion.Web.ResourceUrlResolver.GetResourceUrl(Remotion.Web.UI.Controls.IControl,System.Type,Remotion.Web.ResourceType,Remotion.Web.ResourceTheme,System.String)"><summary>
              Returns the physical URL of a resource item.
            </summary><param name="control"> 
              The current <see cref="T:System.Web.UI.Control" />. This parameter is only used to detect design time.
            </param><param name="definingType"> 
              The type that this resource item is associated with. Must not be <see langword="null" />.
            </param><param name="resourceType"> The resource type (image, static html, etc.) Must not be <see langword="null" />. </param><param name="theme">The <see cref="T:Remotion.Web.ResourceTheme" /> to which the resource belongs.</param><param name="relativeUrl"> The resource file name. Must not be <see langword="null" /> or empty.</param></member><member name="M:Remotion.Web.ResourceUrlResolver.GetAssemblyRoot(System.Boolean,System.Reflection.Assembly)"><summary> Returns the root folder for all resources belonging to the <paramref name="assembly" />. </summary><param name="isDesignMode"> <see langword="true" /> if the application is in design mode. </param><param name="assembly">The <paramref name="assembly" /> for which a ressource is being resolved.</param></member><member name="M:Remotion.Web.ResourceUrlResolver.GetRoot(System.Boolean)"><summary> Returns the root folder for all resources. </summary><param name="isDesignMode"> <see langword="true" /> if the application is in design mode. </param></member><member name="T:Remotion.Web.StaticResourceUrl"><summary>
            Represents the absolute URL for a resource file that is not constructed using the <see cref="T:Remotion.Web.ResourceUrlResolver" /> infrastrcuture.
            </summary></member><member name="T:Remotion.Web.ThemedResourceUrl"><summary>
            Represents the absolute URL for a resource file that changes with the <see cref="P:Remotion.Web.ThemedResourceUrl.ResourceTheme" />.
            </summary></member><member name="T:Remotion.Web.Configuration.ExecutionEngineConfiguration"><summary> Configuration section entry for configuring the <b>Remotion.Web.ExecutionEngine</b>. </summary></member><member name="P:Remotion.Web.Configuration.ExecutionEngineConfiguration.FunctionTimeout"><summary> Gets or sets the default timeout for individual functions within one session. </summary></member><member name="P:Remotion.Web.Configuration.ExecutionEngineConfiguration.EnableSessionManagement"><summary> Gets or sets a flag that determines whether session management is employed. </summary></member><member name="P:Remotion.Web.Configuration.ExecutionEngineConfiguration.RefreshInterval"><summary> Gets or sets the default refresh intervall for a function. </summary></member><member name="P:Remotion.Web.Configuration.ExecutionEngineConfiguration.UrlMappingFile"><summary> Gets or sets the path to the file holding the URL mapping configuration. </summary></member><member name="P:Remotion.Web.Configuration.ExecutionEngineConfiguration.MaximumUrlLength"><summary> Gets or sets the maximum length of URLs generated by the Execution Engine. </summary></member><member name="P:Remotion.Web.Configuration.ExecutionEngineConfiguration.DefaultWxeHandler"><summary> Gets or sets the path to the default <see cref="T:Remotion.Web.ExecutionEngine.WxeHandler" />. </summary></member><member name="T:Remotion.Web.Configuration.ResourceConfiguration"><summary> Configuration section entry for specifying the resources root. </summary></member><member name="P:Remotion.Web.Configuration.ResourceConfiguration.Root"><summary> Gets or sets the root folder for all resources. </summary></member><member name="T:Remotion.Web.Configuration.SmartNavigationConfiguration"><summary> Configuration section entry for configuring the <b>Remotion.Web.ExecutionEngine</b>. </summary></member><member name="P:Remotion.Web.Configuration.SmartNavigationConfiguration.EnableScrolling"><summary> Gets or sets a flag that determines whether to enable smart scrolling. </summary></member><member name="P:Remotion.Web.Configuration.SmartNavigationConfiguration.EnableFocusing"><summary> Gets or sets a flag that determines whether to enable smart focus. </summary></member><member name="T:Remotion.Web.Configuration.WaiConformanceLevel"><summary> Enumeration listing the possible WCAG conformance levels. </summary></member><member name="F:Remotion.Web.Configuration.WaiConformanceLevel.Undefined"><summary> The web application is not required to follow the WAI guidelines. </summary></member><member name="F:Remotion.Web.Configuration.WaiConformanceLevel.A"><summary> WAI conformance level A, all Priority 1 checkpoints are satisfied. </summary></member><member name="F:Remotion.Web.Configuration.WaiConformanceLevel.DoubleA"><summary> WAI conformance level Double-A, all Priority 1 and 2 checkpoints are satisfied. </summary></member><member name="F:Remotion.Web.Configuration.WaiConformanceLevel.TripleA"><summary> WAI conformance level Triple-A, all Priority 1, 2, and 3 checkpoints are satisfied. </summary></member><member name="T:Remotion.Web.Configuration.WcagDebugMode"><summary> Enumeration listing the possible modes for debugging WCG conformance. </summary></member><member name="T:Remotion.Web.Configuration.WcagConfiguration"><summary> Configuration section entry for specifying the application wide WAI level. </summary></member><member name="P:Remotion.Web.Configuration.WcagConfiguration.ConformanceLevel"><summary> Gets or sets the WCAG conformance level required in this web-application. </summary></member><member name="P:Remotion.Web.Configuration.WcagConfiguration.Debugging"><summary>
              Gets or sets a value specifying if and how the developer will be notified on WAI compliancy issues in the 
              controls' configuration.
            </summary></member><member name="T:Remotion.Web.Configuration.WebConfiguration"><summary> The configuration section for <b>Remotion.Web</b>. </summary></member><member name="F:Remotion.Web.Configuration.WebConfiguration.ElementName"><summary> The name of the configuration section in the configuration file. </summary></member><member name="F:Remotion.Web.Configuration.WebConfiguration.SchemaUri"><summary> The namespace of the configuration section schema. </summary></member><member name="M:Remotion.Web.Configuration.WebConfiguration.GetSchemaReader"><summary> Gets an <see cref="T:System.Xml.XmlReader" /> reader for the schema embedded in the assembly. </summary></member><member name="P:Remotion.Web.Configuration.WebConfiguration.Current"><summary> Gets the <see cref="T:Remotion.Web.Configuration.WebConfiguration" />. </summary></member><member name="P:Remotion.Web.Configuration.WebConfiguration.ExecutionEngine"><summary> Gets or sets the <see cref="T:Remotion.Web.Configuration.ExecutionEngineConfiguration" /> entry. </summary></member><member name="P:Remotion.Web.Configuration.WebConfiguration.Wcag"><summary> Gets or sets the <see cref="T:Remotion.Web.Configuration.WcagConfiguration" /> entry. </summary></member><member name="P:Remotion.Web.Configuration.WebConfiguration.Resources"><summary> Gets or sets the <see cref="T:Remotion.Web.Configuration.ResourceConfiguration" /> entry. </summary></member><member name="P:Remotion.Web.Configuration.WebConfiguration.SmartNavigation"><summary> Gets or sets the <see cref="T:Remotion.Web.Configuration.SmartNavigationConfiguration" /> entry. </summary></member><member name="T:Remotion.Web.Design.DesignTimeResourceUrl"><summary>
            Represents the design-time implementation of <see cref="T:Remotion.Web.ResourceUrl" />.
            </summary></member><member name="T:Remotion.Web.Design.DesignTimeThemedResourceUrl"><summary>
            Represents the design-time implementation of <see cref="T:Remotion.Web.ThemedResourceUrl" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.ExecutingSubFunctionWithoutPermaUrlState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.ExecutingSubFunctionWithoutPermaUrlState" /> is responsible for executing a sub-function.
            Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.PostProcessingSubFunctionState" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecutionStateBase`1"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecutionStateBase`1" /> type is an abstract base class implementing the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState" /> interface.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState" /> interface is defines the state-pattern for executing a sub-function within a <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState.ExecuteSubFunction(Remotion.Web.ExecutionEngine.WxeContext)"><summary>
            Executes the behavor of the current state and uses the <see cref="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState.ExecutionStateContext" /> to transistion the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />
            into the next state. 
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState.ExecutionStateContext"><summary> Gets the context of the execution. Use this member to transistion the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" /> into the next state. </summary></member><member name="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState.Parameters"><summary> Gets a set of parameters common for all execution states, such as the executing <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState.IsExecuting"><summary> Gets a flag that informs the observer whether the state is executing. This value is typically constant for a state implementation. </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.ExecutingSubFunctionWithPermaUrlState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.RedirectingToSubFunctionState" /> is responsible for executing a sub-function.
            Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.ReturningFromSubFunctionState" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.PostProcessingSubFunctionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.PostProcessingSubFunctionState" /> is responsible for setting the current <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />'s state after the sub-function
            has completed execution. Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the 
            <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.NullExecutionState" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.PreparingRedirectToSubFunctionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.PreparingRedirectToSubFunctionState" /> is responsible for evaluating the perma-URL information required for a sub-function.
            Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.RedirectingToSubFunctionState" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.PreProcessingSubFunctionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.PreProcessingSubFunctionState" /> is responsible for setting up the current <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" /> to execute the sub-function.
            Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.PreparingRedirectToSubFunctionState" /> if the
            sub-function has a perma-URL and into the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.ExecutingSubFunctionWithoutPermaUrlState" /> otherwise.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.RedirectingToSubFunctionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.RedirectingToSubFunctionState" /> is responsible for redirecting the user's client to a sub-function's Perma-URL.
            Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.ExecutingSubFunctionWithPermaUrlState" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.RedirectingToSubFunctionStateParameters"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.RedirectingToSubFunctionStateParameters" /> type provides all state required to redirect to and return from a sub-function URL.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecutionStateParameters"><summary> 
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecutionStateParameters" /> type groups a basic set of parameters passed between the individual implementations of the
            <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState" /> interface during the various state transistions. 
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateParameters"><summary> The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateParameters" /> defines a common set of parameters for <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState" /> implementations. </summary></member><member name="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateParameters.SubFunction"><summary> Gets the executing sub-function. </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.ReturningFromSubFunctionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.ReturningFromSubFunctionState" /> is responsible for redirecting the user's client back to main-function URL after the sub-function
            has completed execution and a perma-URL was used. Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the 
            <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.PostProcessingSubFunctionState" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.PostProcessingSubFunctionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.PostProcessingSubFunctionState" /> is responsible for setting the current <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />'s state after the sub-function
            has completed execution. Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the 
            <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.NullExecutionState" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.PreparingRedirectToSubFunctionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.PreparingRedirectToSubFunctionState" /> is responsible for evaluating the perma-URL information required for a sub-function.
            Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.RedirectingToSubFunctionState" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.PreProcessingSubFunctionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.PreProcessingSubFunctionState" /> is responsible for setting up the current <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" /> to execute the sub-function.
            Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.PreparingRedirectToSubFunctionState" /> .
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.RedirectingToSubFunctionState.#ctor(Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext,Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.RedirectingToSubFunctionStateParameters)"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.RedirectingToSubFunctionState" /> is responsible for redirecting the user's client to a sub-function's Perma-URL.
            Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.PostProcessingSubFunctionState" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.RedirectingToSubFunctionStateParameters"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.RedirectingToSubFunctionStateParameters" /> type provides all state required to redirect to a sub-function URL.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> interface exposes the context in which the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState" /> implementations operate.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext.SetExecutionState(Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState)"><summary> Transistions the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" /> into the next <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext.ExecutionState"><summary> Gets the current <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState" /> for the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext.CurrentFunction"><summary> Gets the function currently executing, i.e. usually the parent of the <see cref="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext.CurrentStep" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext.CurrentStep"><summary> Getst the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" /> that is executing the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.NullExecutionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.NullExecutionState" /> is the null-object implementation of the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState" /> interface. This state always
            returns <see langword="false" /> for the <see cref="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.NullExecutionState.IsExecuting" /> property.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.PreparingRedirectToSubFunctionStateParameters"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.PreparingRedirectToSubFunctionStateParameters" /> group the parameters necessary for setting up the the redirect to a sub-function URL.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.PreProcessingSubFunctionStateParameters"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.PreProcessingSubFunctionStateParameters" /> group the parameters necessary for setting up the execution of a sub-function.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.IWxeFunctionExecutionListener"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.IWxeFunctionExecutionListener" /> interface defines hooks for interacting with a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />'s execution,
            including it's re-entry model.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.IWxeFunctionExecutionListener.OnExecutionPlay(Remotion.Web.ExecutionEngine.WxeContext)"><summary>Play is invoked when the function's <see cref="M:Remotion.Web.ExecutionEngine.WxeFunction.Execute(Remotion.Web.ExecutionEngine.WxeContext)" /> method is invoked (first and subsequent calls).</summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.IWxeFunctionExecutionListener.OnExecutionStop(Remotion.Web.ExecutionEngine.WxeContext)"><summary>Stop is invoked when the function's <see cref="M:Remotion.Web.ExecutionEngine.WxeFunction.Execute(Remotion.Web.ExecutionEngine.WxeContext)" /> method is completed successfully.</summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.IWxeFunctionExecutionListener.OnExecutionPause(Remotion.Web.ExecutionEngine.WxeContext)"><summary>
            Play is invoked when the function's <see cref="M:Remotion.Web.ExecutionEngine.WxeFunction.Execute(Remotion.Web.ExecutionEngine.WxeContext)" /> method is exited by a <see cref="T:System.Threading.ThreadAbortException" />,
            i.e. the execution is paused.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.IWxeFunctionExecutionListener.OnExecutionFail(Remotion.Web.ExecutionEngine.WxeContext,System.Exception)"><summary>Play is invoked when the function's <see cref="M:Remotion.Web.ExecutionEngine.WxeFunction.Execute(Remotion.Web.ExecutionEngine.WxeContext)" /> method fails.</summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.NullExecutionListener"><summary>
            <see cref="T:Remotion.INullObject" /> implemention of the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.IWxeFunctionExecutionListener" /> interface.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.NumberedMemberFinder"><summary>
              Finds and orders type members using a prefix/number pattern.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.NumberedMemberFinder.FindMembers(System.Type,System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)"><summary>
              Returnes an orderd array of member infos.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.SecurityExecutionListener.OnExecutionPlay(Remotion.Web.ExecutionEngine.WxeContext)"><summary>Play is invoked when the function's <see cref="M:Remotion.Web.ExecutionEngine.WxeFunction.Execute(Remotion.Web.ExecutionEngine.WxeContext)" /> method is invoked (first and subsequent calls).</summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.SecurityExecutionListener.OnExecutionStop(Remotion.Web.ExecutionEngine.WxeContext)"><summary>Stop is invoked when the function's <see cref="M:Remotion.Web.ExecutionEngine.WxeFunction.Execute(Remotion.Web.ExecutionEngine.WxeContext)" /> method is completed successfully.</summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.SecurityExecutionListener.OnExecutionPause(Remotion.Web.ExecutionEngine.WxeContext)"><summary>
            Play is invoked when the function's <see cref="M:Remotion.Web.ExecutionEngine.WxeFunction.Execute(Remotion.Web.ExecutionEngine.WxeContext)" /> method is exited by a <see cref="T:System.Threading.ThreadAbortException" />,
            i.e. the execution is paused.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.SecurityExecutionListener.OnExecutionFail(Remotion.Web.ExecutionEngine.WxeContext,System.Exception)"><summary>Play is invoked when the function's <see cref="M:Remotion.Web.ExecutionEngine.WxeFunction.Execute(Remotion.Web.ExecutionEngine.WxeContext)" /> method fails.</summary></member><member name="P:Remotion.Web.ExecutionEngine.Infrastructure.SecurityExecutionListener.IsNull"><summary>
            Gets a value indicating whether the object is a "Null Object".
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxeExceptionHandler.SetCatchExceptionTypes(System.Type[])"><summary>
              Sets <see cref="P:Remotion.Web.ExecutionEngine.Infrastructure.WxeExceptionHandler.CatchExceptions" /> to <see langword="true" /> and limits the types of exceptions that are caught.
            </summary><param name="exceptionTypes"> Exceptions of these types or sub classes will be caught, all other
                exceptions will be rethrown. </param></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxeExceptionHandler.AppendCatchExceptionTypes(System.Type[])"><summary>
              Joins the passed exceptions types with those already assigned.
            </summary><param name="exceptionTypes"> 
              Exceptions of these types or sub classes will be caught, all other exceptions will be rethrown. 
            </param></member><member name="P:Remotion.Web.ExecutionEngine.Infrastructure.WxeExceptionHandler.CatchExceptions"><summary> 
              If this is <see langword="true" />, exceptions are caught and returned in the <see cref="P:Remotion.Web.ExecutionEngine.Infrastructure.WxeExceptionHandler.Exception" /> property.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxeVariablesContainer"><summary>
            Holds all variables available in a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxeVariablesContainer.ParseActualParameters(Remotion.Web.ExecutionEngine.WxeParameterDeclaration[],System.String,System.Globalization.CultureInfo)"><summary>
              Parses a string of comma separated actual parameters.
            </summary><param name="parameterDeclarations">
             The <see cref="T:Remotion.Web.ExecutionEngine.WxeParameterDeclaration" /> list used for parsing the <paramref name="actualParameters" />.
             Must not be <see langword="null" /> or contain items that are <see langword="null" />.
            </param><param name="actualParameters"> 
              The comma separated list of parameters. Must contain an entry for each required parameter.
              Must not be <see langword="null" />.
            </param><param name="culture"> The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxeVariablesContainer.SerializeParametersForQueryString(Remotion.Web.ExecutionEngine.WxeParameterDeclaration[],System.Object[])"><summary>
              Converts a list of parameter values into a <see cref="T:System.Collections.Specialized.NameValueCollection" />.
            </summary><param name="parameterDeclarations">
             The <see cref="T:Remotion.Web.ExecutionEngine.WxeParameterDeclaration" /> list used for serializing the <paramref name="parameterValues" />.
             Must not be <see langword="null" /> or contain items that are <see langword="null" />.
            </param><param name="parameterValues"> 
              The list parameter values. Must not be <see langword="null" />.
            </param></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxeVariablesContainer.InitializeParameters(System.Collections.Specialized.NameValueCollection)"><summary> Initalizes parameters by name. </summary><param name="parameters"> 
              The list of parameter. Must contain an entry for each required parameter. Must not be <see langword="null" />. 
            </param></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxeVariablesContainer.InitializeParameters(System.String,Remotion.Collections.NameObjectCollection)"><summary> Initializes the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> with the supplied parameters. </summary><param name="parameterString"> 
              The comma separated list of parameters. Must contain an entry for each required parameter.
              Must not be <see langword="null" />.
            </param><param name="additionalParameters"> 
              The parameters passed to the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> in addition to the executing function's variables.
              Use <see langword="null" /> or an empty collection if all parameters are supplied by the 
              <see cref="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.Parameters" /> string and the function stack.
            </param></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxeVariablesContainer.EnsureParametersInitialized(Remotion.Collections.NameObjectCollection)"><summary> Pass actualParameters to Variables. </summary></member><member name="T:Remotion.Web.ExecutionEngine.Obsolete.WxeIf"><summary>
            If-Then-Else block.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeStep"><summary> Performs a single operation in a web application as part of a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeStep.GetFunction(Remotion.Web.ExecutionEngine.WxeStep)"><summary> Gets the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> for the passed <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />. </summary><param name="step"> The <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" /> whose <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> to get. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeStep.GetStepByType``1(Remotion.Web.ExecutionEngine.WxeStep)"><summary>
            Gets the first step of the specified type <typeparamref name="T" />.
            </summary><param name="step">The step from which to start searching for the given step type <typeparamref name="T" />.</param></member><member name="M:Remotion.Web.ExecutionEngine.WxeStep.varref(System.String)"><summary> Used to pass a variable by reference to a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. </summary><param name="localVariable"> The name of a variable in the scope's <see cref="P:Remotion.Web.ExecutionEngine.WxeStep.Variables" /> collection. </param></member><member name="F:Remotion.Web.ExecutionEngine.WxeStep._isAborting"><summary> 
              <see langword="true" /> during the execution of <see cref="M:Remotion.Web.ExecutionEngine.WxeStep.Abort" />. Used to prevent circular aborting.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeStep.Execute"><summary> Executes the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeStep.Execute(Remotion.Web.ExecutionEngine.WxeContext)"><summary> Executes the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />. </summary><param name="context"> The <see cref="T:Remotion.Web.ExecutionEngine.WxeContext" /> containing the information about the execution. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeStep.SetParentStep(Remotion.Web.ExecutionEngine.WxeStep)"><summary> Sets the parent step of this <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />. </summary><param name="parentStep"> 
      The <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" /> to be set as this step's parent. Must not be <see langword="null" />.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeStep.Abort"><summary> Aborts the <b>WxeStep</b> by calling <see cref="M:Remotion.Web.ExecutionEngine.WxeStep.AbortRecursive" />. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeStep.AbortRecursive"><summary> Contains the aborting logic for the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeStep.Variables"><summary> Gets the scope's variables collection. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeStep.ParentStep"><summary> Gets the parent step of the the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeStep.ExecutingStep"><summary> Gets the step currently being executed. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeStep.RootFunction"><summary> Gets the root <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> of the execution hierarchy. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeStep.ParentFunction"><summary> Gets the parent <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> for this <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeStep.CurrentException"><summary> 
              Gets the <see cref="T:System.Exception" /> caught by the <see cref="T:Remotion.Web.ExecutionEngine.Obsolete.WxeTryCatch" /> block encapsulating this 
              <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeStep.IsAborted"><summary> Gets a flag describing whether the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" /> has been aborted. </summary></member><member name="T:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions"><summary>
            This class contains extension methods for the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunction(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction)"><summary> Executes the <paramref name="function" /> in the current window. </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunction(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Boolean,System.Boolean)"><summary> Executes the <paramref name="function" /> in the current window. </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the parent function's perma-URL. Defaults to <see langword="false" />.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunction(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)"><summary> Executes the <paramref name="function" /> in the current window. </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the parent function's perma-URL. Defaults to <see langword="false" />.
    </param><param name="permaUrlParameters">
      Provides the list of arguments for the perma-URL's query string. Defaults to <see langword="null" />, 
      which indicates that the <paramref name="function" />'s current parameters should be used for the query string.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionNoRepost(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Web.UI.Control)"><summary>Executes the <paramref name="function" /> in the current window without triggering the current post-back event on returning.</summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionNoRepost(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Web.UI.Control,System.Boolean)"><summary>Executes the <paramref name="function" /> in the current window without triggering the current post-back event on returning.</summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="usesEventTarget"> <see langword="true" /> to  use the <b>__EVENTTARGET</b> field. </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionNoRepost(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Web.UI.Control,System.Boolean,System.Boolean)"><summary>Executes the <paramref name="function" /> in the current window without triggering the current post-back event on returning.</summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the parent function's perma-URL. Defaults to <see langword="false" />.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionNoRepost(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Web.UI.Control,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)"><summary>Executes the <paramref name="function" /> in the current window without triggering the current post-back event on returning.</summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the parent function's perma-URL. Defaults to <see langword="false" />.
    </param><param name="permaUrlParameters">
      Provides the list of arguments for the perma-URL's query string. Defaults to <see langword="null" />, 
      which indicates that the <paramref name="function" />'s current parameters should be used for the query string.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionNoRepost(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Web.UI.Control,System.Boolean,System.Boolean,System.Boolean)"><summary>Executes the <paramref name="function" /> in the current window without triggering the current post-back event on returning.</summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="usesEventTarget"> <see langword="true" /> to  use the <b>__EVENTTARGET</b> field. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the parent function's perma-URL. Defaults to <see langword="false" />.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionNoRepost(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Web.UI.Control,System.Boolean,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)"><summary>Executes the <paramref name="function" /> in the current window without triggering the current post-back event on returning.</summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="usesEventTarget"> <see langword="true" /> to  use the <b>__EVENTTARGET</b> field. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the parent function's perma-URL. Defaults to <see langword="false" />.
    </param><param name="permaUrlParameters">
      Provides the list of arguments for the perma-URL's query string. Defaults to <see langword="null" />, 
      which indicates that the <paramref name="function" />'s current parameters should be used for the query string.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionExternal(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> outside the current function's context (i.e. asynchron) using the 
              current window or frame. The execution engine uses a redirect request to transfer the execution to the new function.
            </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the executing function's perma-URL. Defaults to <see langword="false" />.
    </param><param name="urlParameters">
      Provides the list of arguments for the URL's query string. Defaults to <see langword="null" />, 
      which indicates that the <paramref name="function" />'s current parameters should be used for the query string.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionExternal(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection,System.Boolean,System.Collections.Specialized.NameValueCollection)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> outside the current function's context (i.e. asynchron) using the 
              current window or frame. The execution engine uses a redirect request to transfer the execution to the new function.
            </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the executing function's perma-URL. Defaults to <see langword="false" />.
    </param><param name="urlParameters">
      Provides the list of arguments for the URL's query string. Defaults to <see langword="null" />, 
      which indicates that the <paramref name="function" />'s current parameters should be used for the query string.
    </param><param name="returnToCaller">
      <see langword="true" /> to return to the executing function.
      Defaults to <see langword="true" />.
    </param><param name="callerUrlParameters">
      Provides the list of arguments for the return URL's query string. Defaults to <see langword="null" />, 
      which indicates that the executing page's current parameters should be used for the query string.
      Provide an emtpy <see cref="T:System.Collections.Specialized.NameValueCollection" /> if your function does not support perma-urls.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionExternal(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.String,System.Web.UI.Control,System.Boolean)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> outside the current function's context (i.e. asynchron) using the 
              specified window or frame by through a javascript call.
            </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="target">
      The HTML frame/window name that will be used to execute the function. Must not be <see langword="null" /> or empty.
    </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="returningPostback"> <see langword="true" /> if the call should be returned to the current window. </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionExternal(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.String,System.String,System.Web.UI.Control,System.Boolean)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> outside the current function's context (i.e. asynchron) using the 
              specified window or frame through javascript window.open(...).
            </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="target">
      The HTML frame/window name that will be used to execute the function. Must not be <see langword="null" /> or empty.
    </param><param name="features"> The features argument that is passed to the javascript function <b>window.open()</b>. </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="returningPostback"> <see langword="true" /> if the call should be returned to the current window. </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionExternal(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.String,System.Web.UI.Control,System.Boolean,System.Boolean,System.Boolean)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> outside the current function's context (i.e. asynchron) using the 
              specified window or frame through javascript window.open(...).
            </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="target">
      The HTML frame/window name that will be used to execute the function. Must not be <see langword="null" /> or empty.
    </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="returningPostback"> <see langword="true" /> if the call should be returned to the current window. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the executing function's perma-URL. Defaults to <see langword="false" />.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionExternal(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.String,System.Web.UI.Control,System.Boolean,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> outside the current function's context (i.e. asynchron) using the 
              specified window or frame through javascript window.open(...).
            </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="target">
      The HTML frame/window name that will be used to execute the function. Must not be <see langword="null" /> or empty.
    </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="returningPostback"> <see langword="true" /> if the call should be returned to the current window. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the executing function's perma-URL. Defaults to <see langword="false" />.
    </param><param name="urlParameters">
      Provides the list of arguments for the URL's query string. Defaults to <see langword="null" />, 
      which indicates that the <paramref name="function" />'s current parameters should be used for the query string.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionExternal(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.String,System.String,System.Web.UI.Control,System.Boolean,System.Boolean,System.Boolean)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> outside the current function's context (i.e. asynchron) using the 
              specified window or frame through javascript window.open(...).
            </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="target">
      The HTML frame/window name that will be used to execute the function. Must not be <see langword="null" /> or empty.
    </param><param name="features"> The features argument that is passed to the javascript function <b>window.open()</b>. </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="returningPostback"> <see langword="true" /> if the call should be returned to the current window. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the executing function's perma-URL. Defaults to <see langword="false" />.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionExternal(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.String,System.String,System.Web.UI.Control,System.Boolean,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> outside the current function's context (i.e. asynchron) using the 
              specified window or frame through javascript window.open(...).
            </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="target">
      The HTML frame/window name that will be used to execute the function. Must not be <see langword="null" /> or empty.
    </param><param name="features"> The features argument that is passed to the javascript function <b>window.open()</b>. </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="returningPostback"> <see langword="true" /> if the call should be returned to the current window. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the executing function's perma-URL. Defaults to <see langword="false" />.
    </param><param name="urlParameters">
      Provides the list of arguments for the URL's query string. Defaults to <see langword="null" />, 
      which indicates that the <paramref name="function" />'s current parameters should be used for the query string.
    </param></member><member name="T:Remotion.Web.ExecutionEngine.Obsolete.WxeFunctionPageAttribute"><summary>
            Specifies that a WXE function should automatically be created by the WXE function generator (wxegen.exe).
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Obsolete.WxePageParameterAttribute"><summary>
            Specifies a WXE function parameter that should automatically be created by the WXE function generator (wxegen.exe). 
            Requires <see cref="T:Remotion.Web.ExecutionEngine.Obsolete.WxeFunctionPageAttribute" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Obsolete.WxeTryCatch"><summary>
              Try-Catch block.
            </summary></member><member name="F:Remotion.Web.ExecutionEngine.Obsolete.WxeTryCatch._executingCatchBlock"><summary>
            index of currently executing catch block, or -1 if the try block is executing, -2 if finally block is executing
            </summary></member><member name="F:Remotion.Web.ExecutionEngine.Obsolete.WxeTryCatch._catchBlocks"><summary> ArrayList&lt;WxeCatchBlock&gt; </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeStepList"><summary>
              Performs a sequence of steps in a web application.
            </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeStepList._steps"><summary> ArrayList&lt;WxeStep&gt; </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeStepList.Encapsulate(Remotion.Web.ExecutionEngine.WxeStepList)"><summary>
              Moves all steps to <paramref name="innerList" /> and makes <paramref name="innerList" /> the only step of 
              this step list.
            </summary><param name="innerList"> 
              This list will be the only step of the <see cref="T:Remotion.Web.ExecutionEngine.WxeStepList" /> and contain all of the 
              <see cref="T:Remotion.Web.ExecutionEngine.WxeStepList" />'s steps. Must be empty and not executing.
            </param></member><member name="T:Remotion.Web.ExecutionEngine.UrlMapping.ConfigurationBase"><summary> Represents the common information all configuration classes provide. </summary></member><member name="M:Remotion.Web.ExecutionEngine.UrlMapping.ConfigurationBase.#ctor(System.String)"><summary> Initializes a new instance of the <b>ConfigurationBase</b> type. </summary></member><member name="M:Remotion.Web.ExecutionEngine.UrlMapping.ConfigurationBase.#ctor"><summary> XML Deserialization contructor. </summary></member><member name="P:Remotion.Web.ExecutionEngine.UrlMapping.ConfigurationBase.ApplicationName"><summary> Gets the application name that is specified in the XML configuration file.  </summary></member><member name="T:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingConfiguration"><summary> Contains the configuration data for the URL mapping system of the execution engine. </summary></member><member name="F:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingConfiguration.ElementName"><summary> The name of the root element. </summary></member><member name="F:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingConfiguration.SchemaUri"><summary> The namespace of the mapping's schema. </summary></member><member name="M:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingConfiguration.SetCurrent(Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingConfiguration)"><summary> Sets the current <see cref="T:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingConfiguration" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingConfiguration.Current"><summary> Gets the current <see cref="T:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingConfiguration" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingEntry.ID"><summary> An optional ID for the <see cref="T:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingEntry" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingEntry.FunctionTypeName"><summary>
              The <see cref="T:System.Type" /> name of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> identified by the <see cref="P:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingEntry.Resource" />. 
              Must not be <see langword="null" /> or empty. 
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingEntry.FunctionType"><summary> 
              The <see cref="T:System.Type" /> of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> identified by the <see cref="P:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingEntry.Resource" />. 
              Must not be <see langword="null" />. 
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingEntry.Resource"><summary> 
              The path associated with the <see cref="P:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingEntry.FunctionType" />. Must not be <see langword="null" /> or empty. 
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingCollection.FindType(System.String)"><summary> Finds the mapping for the specified <paramref name="path" />. </summary><param name="path"> The path to look-up. </param></member><member name="M:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingCollection.FindResource(System.Type)"><summary> Finds the mapping for the specified <paramref name="type" />. </summary><param name="type"> The name of the <see cref="T:System.Type" /> to look-up. </param></member><member name="M:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingCollection.FindResource(System.String)"><summary> Finds the mapping for the specified <paramref name="typeName" />. </summary><param name="typeName"> The name of the <see cref="T:System.Type" /> to look-up. </param></member><member name="M:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingCollection.Find(System.String)"><summary> Finds the mapping for the specified <paramref name="path" />. </summary><param name="path"> The path to look-up. </param></member><member name="M:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingCollection.Find(System.Type)"><summary> Finds the mapping for the specified <paramref name="functionType" />. </summary><param name="functionType"> The <see cref="T:System.Type" /> to look-up. </param></member><member name="M:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingCollection.FindByID(System.String)"><summary> Finds the mapping for the specified <paramref name="id" />. </summary><param name="id"> The ID to look-up. Must not be <see langword="null" /> or empty. </param></member><member name="T:Remotion.Web.ExecutionEngine.IWxeCallArguments"><summary>
              The <see cref="T:Remotion.Web.ExecutionEngine.IWxeCallArguments" /> interface is used to to collect the parameters for executing a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.IWxePage"><summary> This interface represents a page that can be used in a <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />. </summary></member><member name="T:Remotion.Web.UI.ISmartPage"><summary>
              This interface represents a page that has a dirty-state and can prevent multiple postbacks.
            </summary></member><member name="T:Remotion.Web.UI.IPage"><summary>
              This interface contains all public members of System.Web.UI.Page. It is used to derive interfaces that will be
              implemented by deriving from System.Web.UI.Page.
            </summary></member><member name="T:Remotion.Web.UI.Controls.ITemplateControl"><summary>
              This interface contains all public members of <see cref="T:System.Web.UI.TemplateControl" />. It is used to 
              derive interfaces that will be implemented by deriving from <see cref="T:System.Web.UI.TemplateControl" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.IControl"><summary>
              This interface contains all public members of System.Web.UI.Control. It is used to derive interfaces that will be
              implemented by deriving from System.Web.UI.Control.
            </summary></member><member name="M:Remotion.Web.UI.Controls.IControl.ApplyStyleSheetSkin(System.Web.UI.Page)"><summary>
            Applies the style properties defined in the page style sheet to the control.
            </summary><param name="page">The <see cref="T:System.Web.UI.Page" /> containing the control.
            </param></member><member name="M:Remotion.Web.UI.Controls.IControl.DataBind"><summary>
            Binds a data source to the invoked server control and all its child controls.
            </summary></member><member name="M:Remotion.Web.UI.Controls.IControl.Focus"><summary>
            Sets input focus to a control.
            </summary></member><member name="M:Remotion.Web.UI.Controls.IControl.RenderControl(System.Web.UI.HtmlTextWriter)"><summary>
            Outputs server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter" /> object and stores tracing information about the control if tracing is enabled.
            </summary><param name="writer">The <see cref="T:System.Web.UI.HTmlTextWriter" /> object that receives the control content. 
            </param></member><member name="M:Remotion.Web.UI.Controls.IControl.ResolveUrl(System.String)"><summary>
            Converts a URL into one that is usable on the requesting client.
            </summary><param name="relativeUrl">The URL associated with the <see cref="P:System.Web.UI.Control.TemplateSourceDirectory" /> property. 
            </param></member><member name="M:Remotion.Web.UI.Controls.IControl.FindControl(System.String)"><summary>
            Searches the current naming container for a server control with the specified <paramref name="id" /> parameter.
            </summary><param name="id">The identifier for the control to be found. 
            </param></member><member name="M:Remotion.Web.UI.Controls.IControl.HasControls"><summary>
            Determines if the server control contains any child controls.
            </summary></member><member name="M:Remotion.Web.UI.Controls.IControl.SetRenderMethodDelegate(System.Web.UI.RenderMethod)"><summary>
            Assigns an event handler delegate to render the server control and its content into its parent control.
            </summary><param name="renderMethod">The information necessary to pass to the delegate so that it can render the server control. 
            </param></member><member name="P:Remotion.Web.UI.Controls.IControl.ClientID"><summary>
            Gets the server control identifier generated by ASP.NET.
            </summary></member><member name="P:Remotion.Web.UI.Controls.IControl.ID"><summary>
            Gets or sets the programmatic identifier assigned to the server control.
            </summary></member><member name="P:Remotion.Web.UI.Controls.IControl.EnableTheming"><summary>
            Gets or sets a value indicating whether themes apply to this control.
            </summary></member><member name="P:Remotion.Web.UI.Controls.IControl.SkinID"><summary>
            Gets or sets the skin to apply to the control.
            </summary></member><member name="P:Remotion.Web.UI.Controls.IControl.EnableViewState"><summary>
            Gets or sets a value indicating whether the server control persists its view state, and the view state of any child controls it contains, to the requesting client.
            </summary></member><member name="P:Remotion.Web.UI.Controls.IControl.NamingContainer"><summary>
            Gets a reference to the server control's naming container, which creates a unique namespace for differentiating between server controls with the same <see cref="P:System.Web.UI.Control.ID" /> property value.
            </summary></member><member name="P:Remotion.Web.UI.Controls.IControl.BindingContainer"><summary>
            Gets the control that contains this control's data binding.
            </summary></member><member name="P:Remotion.Web.UI.Controls.IControl.Page"><summary>
            Gets a reference to the <see cref="T:System.Web.UI.Page" /> instance that contains the server control.
            </summary></member><member name="P:Remotion.Web.UI.Controls.IControl.TemplateControl"><summary>
            Gets or sets a reference to the template that contains this control. 
            </summary></member><member name="P:Remotion.Web.UI.Controls.IControl.Parent"><summary>
            Gets a reference to the server control's parent control in the page control hierarchy.
            </summary></member><member name="P:Remotion.Web.UI.Controls.IControl.TemplateSourceDirectory"><summary>
            Gets the virtual directory of the <see cref="T:System.Web.UI.Page" /> or <see cref="T:System.Web.UI.UserControl" /> that contains the current server control.
            </summary></member><member name="P:Remotion.Web.UI.Controls.IControl.AppRelativeTemplateSourceDirectory"><summary>
            Gets or sets the application-relative virtual directory of the <see cref="T:System.Web.UI.Page" /> or <see cref="T:System.Web.UI.UserControl" /> object that contains this control.
            </summary></member><member name="P:Remotion.Web.UI.Controls.IControl.Visible"><summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary></member><member name="P:Remotion.Web.UI.Controls.IControl.UniqueID"><summary>
            Gets the unique, hierarchically qualified identifier for the server control.
            </summary></member><member name="P:Remotion.Web.UI.Controls.IControl.Controls"><summary>
            Gets a <see cref="T:System.Web.UI.ControlCollection" /> object that represents the child controls for a specified server control in the UI hierarchy.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ITemplateControl.LoadControl(System.String)"><summary>
            Loads a <see cref="T:System.Web.UI.Control" /> object from a file based on a specified virtual path.
            </summary><param name="virtualPath">The virtual path to a control file. 
            </param></member><member name="M:Remotion.Web.UI.Controls.ITemplateControl.LoadTemplate(System.String)"><summary>
            Obtains an instance of the <see cref="T:System.Web.UI.ITemplate" /> interface from an external file.
            </summary><param name="virtualPath">The virtual path to a user control file. 
            </param></member><member name="M:Remotion.Web.UI.Controls.ITemplateControl.ParseControl(System.String)"><summary>
            Parses an input string into a <see cref="T:System.Web.UI.Control" /> object on the Web Forms page or user control.
            </summary><param name="content">A string that contains a user control. 
            </param></member><member name="M:Remotion.Web.UI.IPage.ReadStringResource"><summary>
            Reads a string resource. The <see cref="M:System.Web.UI.TemplateControl.ReadStringResource" /> 
            method is not intended for use from within your code.
            </summary></member><member name="M:Remotion.Web.UI.IPage.TestDeviceFilter(System.String)"><summary>
            Returns a Boolean value indicating whether a device filter applies to the HTTP request.
            </summary><param name="filterName">The browser name to test. 
            </param></member><member name="M:Remotion.Web.UI.IPage.LoadControl(System.Type,System.Object[])"><summary>
            Loads a <see cref="T:System.Web.UI.Control" /> object based on a specified type and constructor parameters.
            </summary><param name="t">The type of the control.
            </param><param name="parameters">An array of arguments that match in number, order, and type the parameters of the constructor to invoke. 
            If <paramref name="parameters" /> is an empty array or null, the constructor that takes no parameters (the default constructor) is invoked.
            </param></member><member name="M:Remotion.Web.UI.IPage.ParseControl(System.String,System.Boolean)"><summary>
            Parses an input string into a <see cref="T:System.Web.UI.Control" /> object on the ASP.NET Web page or user control.
            </summary><param name="content">A string that contains a user control.
            </param><param name="ignoreParserFilter">A value that specifies whether to ignore the parser filter.
            </param></member><member name="M:Remotion.Web.UI.IPage.GetTypeHashCode"><summary>
            Retrieves a hash code that is generated by <see cref="T:System.Web.UI.Page" /> objects that are generated at run time. 
            This hash code is unique to the <see cref="T:System.Web.UI.Page" /> object's control hierarchy.
            </summary></member><member name="M:Remotion.Web.UI.IPage.DesignerInitialize"><summary>
            Performs any initialization of the instance of the <see cref="T:System.Web.UI.Page" /> class that is required by RAD designers. 
            This method is used only at design time.
            </summary></member><member name="M:Remotion.Web.UI.IPage.SetFocus(System.Web.UI.Control)"><summary>
            Sets the browser focus to the specified control. 
            </summary><param name="control">The control to receive focus.
            </param></member><member name="M:Remotion.Web.UI.IPage.SetFocus(System.String)"><summary>
            Sets the browser focus to the control with the specified identifier. 
            </summary><param name="clientID">The ID of the control to set focus to.
            </param></member><member name="M:Remotion.Web.UI.IPage.RegisterRequiresControlState(System.Web.UI.Control)"><summary>
            Registers a control as one whose control state must be persisted.
            </summary><param name="control">The control to register.
            </param></member><member name="M:Remotion.Web.UI.IPage.RequiresControlState(System.Web.UI.Control)"><summary>
            Determines whether the specified <see cref="T:System.Web.UI.Control" /> object is registered to participate in control state management.
            </summary><param name="control">The <see cref="T:System.Web.UI.Control" /> to check for a control state requirement.
            </param></member><member name="M:Remotion.Web.UI.IPage.UnregisterRequiresControlState(System.Web.UI.Control)"><summary>
            Stops persistence of control state for the specified control.
            </summary><param name="control">The <see cref="T:System.Web.UI.Control" /> for which to stop persistence of control state.
            </param></member><member name="M:Remotion.Web.UI.IPage.RegisterRequiresPostBack(System.Web.UI.Control)"><summary>
            Registers a control as one that requires postback handling when the page is posted back to the server. 
            </summary><param name="control">The control to be registered. 
            </param></member><member name="M:Remotion.Web.UI.IPage.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)"><summary>
            Registers an ASP.NET server control as one requiring an event to be raised when the control is processed on the 
            <see cref="T:System.Web.UI.Page" /> object.
            </summary><param name="control">The control to register. 
            </param></member><member name="M:Remotion.Web.UI.IPage.MapPath(System.String)"><summary>
            Retrieves the physical path that a virtual path, either absolute or relative, or an application-relative path maps to.
            </summary><param name="virtualPath">A <see cref="T:System.String" /> that represents the virtual path. 
            </param></member><member name="M:Remotion.Web.UI.IPage.RegisterRequiresViewStateEncryption"><summary>
            Registers a control with the page as one requiring view-state encryption. 
            </summary></member><member name="M:Remotion.Web.UI.IPage.RegisterViewStateHandler"><summary>
            Causes page view state to be persisted, if called.
            </summary></member><member name="M:Remotion.Web.UI.IPage.ExecuteRegisteredAsyncTasks"><summary>
            Starts the execution of an asynchronous task.
            </summary></member><member name="M:Remotion.Web.UI.IPage.RegisterAsyncTask(System.Web.UI.PageAsyncTask)"><summary>
            Registers a new asynchronous task with the page.
            </summary><param name="task">A <see cref="T:System.Web.UI.PageAsyncTask" /> that defines the asynchronous task.
            </param></member><member name="M:Remotion.Web.UI.IPage.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)"><summary>
            Registers beginning and ending event handler delegates that do not require state information for an asynchronous page.
            </summary><param name="beginHandler">The delegate for the <see cref="T:System.Web.BeginEventHandler" /> method.
            </param><param name="endHandler">The delegate for the <see cref="T:System.Web.EndEventHandler" /> method.
            </param></member><member name="M:Remotion.Web.UI.IPage.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)"><summary>
            Registers beginning and ending  event handler delegates for an asynchronous page.
            </summary><param name="beginHandler">The delegate for the <see cref="T:System.Web.BeginEventHandler" /> method.
            </param><param name="endHandler">The delegate for the <see cref="T:System.Web.EndEventHandler" /> method.
            </param><param name="state">An object containing state information for the event handlers.
            </param></member><member name="M:Remotion.Web.UI.IPage.Validate"><summary>
            Instructs any validation controls included on the page to validate their assigned information.
            </summary></member><member name="M:Remotion.Web.UI.IPage.Validate(System.String)"><summary>
            Instructs the validation controls in the specified validation group to validate their assigned information.
            </summary><param name="validationGroup">The validation group name of the controls to validate.
            </param></member><member name="M:Remotion.Web.UI.IPage.GetValidators(System.String)"><summary>
            Returns a collection of control validators for a specified validation group.
            </summary><param name="validationGroup">The validation group to return, or null to return the default validation group.
            </param></member><member name="M:Remotion.Web.UI.IPage.VerifyRenderingInServerForm(System.Web.UI.Control)"><summary>
            Confirms that an <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control is rendered for the specified ASP.NET server control at run time.
            </summary><param name="control">The ASP.NET server control that is required in the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control. 
            </param></member><member name="M:Remotion.Web.UI.IPage.GetDataItem"><summary>
            Gets the data item at the top of the data-binding context stack.
            </summary></member><member name="P:Remotion.Web.UI.IPage.WrappedInstance"><summary>
            Gets the concrete instance wrapped by this <see cref="T:Remotion.Web.UI.IPage" /> wrapper.
            </summary></member><member name="P:Remotion.Web.UI.IPage.AppRelativeVirtualPath"><summary>
            Gets or sets the application-relative, virtual directory path to the file from which the control is parsed and compiled. 
            </summary></member><member name="P:Remotion.Web.UI.IPage.Application"><summary>
            Gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current Web request.
            </summary></member><member name="P:Remotion.Web.UI.IPage.ClientScript"><summary>
            Gets a <see cref="T:Remotion.Web.Infrastructure.IClientScriptManager" /> object used to manage, register, and add script to the page.
            </summary></member><member name="P:Remotion.Web.UI.IPage.ClientTarget"><summary>
            Gets or sets a value that allows you to override automatic detection of browser capabilities 
            and to specify how a page is rendered for particular browser clients.
            </summary></member><member name="P:Remotion.Web.UI.IPage.ClientQueryString"><summary>
            Gets the query string portion of the requested URL.
            </summary></member><member name="P:Remotion.Web.UI.IPage.Context"><summary>
            Gets the <see cref="T:System.Web.HttpContext" /> object for the current Web request.
            </summary></member><member name="P:Remotion.Web.UI.IPage.ErrorPage"><summary>
            Gets or sets the error page to which the requesting browser is redirected in the event of an unhandled page exception.
            </summary></member><member name="P:Remotion.Web.UI.IPage.IsCallback"><summary>
            Gets a value indicating whether the page request is the result of a call back.
            </summary></member><member name="P:Remotion.Web.UI.IPage.AutoPostBackControl"><summary>
            Gets or sets the control of the page that is used to postback to the server.
            </summary></member><member name="P:Remotion.Web.UI.IPage.Header"><summary>
            Gets the document header for the page if the head element is defined with a runat=server in the page declaration.
            </summary></member><member name="P:Remotion.Web.UI.IPage.IdSeparator"><summary>
            Gets the character used to separate control identifiers when building a unique ID for a control on a page.
            </summary></member><member name="P:Remotion.Web.UI.IPage.MaintainScrollPositionOnPostBack"><summary>
            Gets or sets a value indicating whether to return the user to the same position in the client browser after postback. 
            </summary></member><member name="P:Remotion.Web.UI.IPage.Master"><summary>
            Gets the master page that determines the overall look of the page.
            </summary></member><member name="P:Remotion.Web.UI.IPage.MasterPageFile"><summary>
            Gets or sets the file name of the master page.
            </summary></member><member name="P:Remotion.Web.UI.IPage.MaxPageStateFieldLength"><summary>
            Gets or sets the maximum length for the page's state field.
            </summary></member><member name="P:Remotion.Web.UI.IPage.Trace"><summary>
            Gets the <see cref="T:System.Web.TraceContext" /> object for the current Web request.
            </summary></member><member name="P:Remotion.Web.UI.IPage.Request"><summary>
            Gets the <see cref="T:System.Web.HttpRequest" /> object for the requested page.
            </summary></member><member name="P:Remotion.Web.UI.IPage.Response"><summary>
            Gets the <see cref="T:System.Web.HttpResponse" /> object associated with the <see cref="T:System.Web.UI.Page" /> object. 
            This object allows you to send HTTP response data to a client and contains information about that response.
            </summary></member><member name="P:Remotion.Web.UI.IPage.Server"><summary>
            Gets the Server object, which is an instance of the <see cref="T:System.Web.HttpServerUtility" /> class wrapped in a class implementing <see cref="T:System.Web.HttpServerUtilityBase" />.
            </summary></member><member name="P:Remotion.Web.UI.IPage.Cache"><summary>
            Gets the <see cref="T:System.Web.Caching.Cache" /> object associated with the application in which the page resides.
            </summary></member><member name="P:Remotion.Web.UI.IPage.Session"><summary>
            Gets the current Session object provided by ASP.NET.
            </summary></member><member name="P:Remotion.Web.UI.IPage.Title"><summary>
            Gets or sets the title for the page.
            </summary></member><member name="P:Remotion.Web.UI.IPage.Theme"><summary>
            Gets or sets the name of the page theme.
            </summary></member><member name="P:Remotion.Web.UI.IPage.StyleSheetTheme"><summary>
            Gets or sets the name of the style sheet applied to this page.
            </summary></member><member name="P:Remotion.Web.UI.IPage.User"><summary>
            Gets information about the user making the page request.
            </summary></member><member name="P:Remotion.Web.UI.IPage.IsCrossPagePostBack"><summary>
            Gets a value indicating whether the page is involved in a cross-page postback.
            </summary></member><member name="P:Remotion.Web.UI.IPage.IsPostBack"><summary>
            Gets a value indicating whether the page is being loaded in response to a client postback, 
            or if it is being loaded and accessed for the first time.
            </summary></member><member name="P:Remotion.Web.UI.IPage.EnableEventValidation"><summary>
            Gets or sets a value indicating whether the page validates postback and callback events.
            </summary></member><member name="P:Remotion.Web.UI.IPage.ViewStateEncryptionMode"><summary>
            Gets or sets the encryption mode of the view state.
            </summary></member><member name="P:Remotion.Web.UI.IPage.ViewStateUserKey"><summary>
            Assigns an identifier to an individual user in the view-state variable associated with the current page.
            </summary></member><member name="P:Remotion.Web.UI.IPage.IsPostBackEventControlRegistered"><summary>
            Gets a value indicating whether the control of the page that submits a postback is registered.
            </summary></member><member name="P:Remotion.Web.UI.IPage.IsValid"><summary>
            Gets a value indicating whether page validation succeeded.
            </summary></member><member name="P:Remotion.Web.UI.IPage.Validators"><summary>
            Gets a collection of all validation controls contained on the requested page.
            </summary></member><member name="P:Remotion.Web.UI.IPage.PreviousPage"><summary>
            Gets the page that transferred control to the current page.
            </summary></member><member name="P:Remotion.Web.UI.IPage.Buffer"><summary>
            Sets a value indicating whether the page output is buffered.
            </summary></member><member name="P:Remotion.Web.UI.IPage.ContentType"><summary>
            Sets the HTTP MIME type for the <see cref="T:System.Web.HttpResponse" /> object associated with the page.
            </summary></member><member name="P:Remotion.Web.UI.IPage.CodePage"><summary>
            Sets the code page identifier for the current <see cref="T:System.Web.UI.Page" />.
            </summary></member><member name="P:Remotion.Web.UI.IPage.ResponseEncoding"><summary>
            Sets the encoding language for the current <see cref="T:System.Web.HttpResponse" /> object.
            </summary></member><member name="P:Remotion.Web.UI.IPage.Culture"><summary>
            Sets the culture ID for the <see cref="T:System.Threading.Thread" /> object associated with the page.
            </summary></member><member name="P:Remotion.Web.UI.IPage.LCID"><summary>
            Sets the locale identifier for the <see cref="T:System.Threading.Thread" /> object associated with the page.
            </summary></member><member name="P:Remotion.Web.UI.IPage.UICulture"><summary>
            Sets the user interface (UI) ID for the <see cref="T:System.Threading.Thread" /> object associated with the page.
            </summary></member><member name="P:Remotion.Web.UI.IPage.AsyncTimeout"><summary>
            Gets or sets a value indicating the time-out interval used when processing asynchronous tasks.
            </summary></member><member name="P:Remotion.Web.UI.IPage.TraceEnabled"><summary>
            Sets a value indicating whether tracing is enabled for the <see cref="T:System.Web.UI.Page" /> object.
            </summary></member><member name="P:Remotion.Web.UI.IPage.TraceModeValue"><summary>
            Sets the mode in which trace statements are displayed on the page.
            </summary></member><member name="P:Remotion.Web.UI.IPage.EnableViewStateMac"><summary>
            Gets or sets a value indicating whether ASP.NET should run a message authentication check (MAC) on the page's view state 
            when the page is posted back from the client.
            </summary></member><member name="P:Remotion.Web.UI.IPage.IsAsync"><summary>
            Gets a value indicating whether the page is processed asynchronously.
            </summary></member><member name="P:Remotion.Web.UI.IPage.Form"><summary>
            Gets the HTML form for the page.
            </summary></member><member name="P:Remotion.Web.UI.IPage.PageAdapter"><summary>
            Gets the adapter that renders the page for the specific requesting browser.
            </summary></member><member name="P:Remotion.Web.UI.IPage.Items"><summary>
            Gets a list of objects stored in the page context.
            </summary></member><member name="M:Remotion.Web.UI.ISmartPage.GetPostBackCollection"><summary> Gets the post back data for the page. </summary></member><member name="M:Remotion.Web.UI.ISmartPage.RegisterControlForDirtyStateTracking(Remotion.Web.UI.Controls.IEditableControl)"><summary>
              Registers a control implementing <see cref="T:Remotion.Web.UI.Controls.IEditableControl" /> for tracking of it's server- and client-side
              dirty state.
            </summary><param name="control"> A control implementing <see cref="T:Remotion.Web.UI.Controls.IEditableControl" /> that will be tracked. </param></member><member name="M:Remotion.Web.UI.ISmartPage.RegisterControlForClientSideDirtyStateTracking(System.String)"><summary>
              Resgisters a <see cref="P:System.Web.UI.Control.ClientID" /> for the tracking of the controls client-side dirty state.
            </summary><param name="clientID"> The ID of an HTML input/textarea/select element. </param></member><member name="M:Remotion.Web.UI.ISmartPage.EvaluateDirtyState"><summary> 
              Evaluates whether any control regsitered using <see cref="M:Remotion.Web.UI.ISmartPage.RegisterControlForDirtyStateTracking(Remotion.Web.UI.Controls.IEditableControl)" />
              has values that must be persisted before the user leaves the page. 
            </summary></member><member name="M:Remotion.Web.UI.ISmartPage.RegisterClientSidePageEventHandler(Remotion.Web.UI.SmartPageEvents,System.String,System.String)"><summary> 
              Registers Java Script functions to be executed when the respective <paramref name="pageEvent" /> is raised.
            </summary><param name="pageEvent"> The type of event to register for. </param><param name="key"> 
      Forms in combination with <paramref name="pageEvent" /> a unique key that identifies the function.
    </param><param name="function"> The name of the Java Script function to be called. </param></member><member name="M:Remotion.Web.UI.ISmartPage.SaveAllState"><summary> Saves the ControlState and the ViewState of the ASP.NET page. </summary></member><member name="P:Remotion.Web.UI.ISmartPage.IsDirtyStateTrackingEnabled"><summary>
              Gets a flag that determines whether the dirty state will be taken into account when displaying the abort 
              confirmation dialog.
            </summary></member><member name="P:Remotion.Web.UI.ISmartPage.IsAbortConfirmationEnabled"><summary>
              Gets or sets a flag that determines whether to display a confirmation dialog before leaving the page. 
             </summary></member><member name="P:Remotion.Web.UI.ISmartPage.AbortMessage"><summary> Gets the message displayed when the user attempts to abort the WXE Function. </summary></member><member name="P:Remotion.Web.UI.ISmartPage.StatusIsSubmittingMessage"><summary> Gets the message displayed when the user attempts to submit while the page is already submitting. </summary></member><member name="P:Remotion.Web.UI.ISmartPage.IsStatusIsSubmittingMessageEnabled"><summary> 
              Gets a flag whether the is submitting status messages will be displayed when the user tries to postback while 
              a request is being processed.
            </summary></member><member name="P:Remotion.Web.UI.ISmartPage.CheckFormStateFunction"><summary>
              Regisiters a Java Script function used to evaluate whether to continue with the submit.
              Signature: <c>bool Function (isAborting, hasSubmitted, hasUnloaded, isCached)</c>
            </summary></member><member name="P:Remotion.Web.UI.ISmartPage.HtmlForm"><summary> Gets or sets the <see cref="P:Remotion.Web.UI.ISmartPage.HtmlForm" /> of the ASP.NET page. </summary></member><member name="M:Remotion.Web.ExecutionEngine.IWxePage.ExecuteNextStep"><summary> End this page step and continue with the WXE function. </summary></member><member name="M:Remotion.Web.ExecutionEngine.IWxePage.ExecuteFunction(Remotion.Web.ExecutionEngine.WxeFunction,Remotion.Web.ExecutionEngine.IWxeCallArguments)"><summary>Executes the <paramref name="function" /> using the specified <paramref name="callArguments" />.</summary><param name="function">The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> to be executed.</param><param name="callArguments">The <see cref="T:Remotion.Web.ExecutionEngine.IWxeCallArguments" /> used to control the function invocation.</param></member><member name="M:Remotion.Web.ExecutionEngine.IWxePage.GetPermanentUrlParameters"><summary> Gets the permanent URL parameters the current page. </summary></member><member name="M:Remotion.Web.ExecutionEngine.IWxePage.GetPermanentUrl"><summary> Gets the permanent URL for the current page. </summary></member><member name="M:Remotion.Web.ExecutionEngine.IWxePage.GetPermanentUrl(System.Collections.Specialized.NameValueCollection)"><summary> Gets the permanent URL for the current page using the specified <paramref name="queryString" />. </summary><param name="queryString">
      The <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the query string arguments. Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.IWxePage.GetPermanentUrl(System.Type,System.Collections.Specialized.NameValueCollection)"><summary> 
              Gets the permanent URL for the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> of the specified <paramref name="functionType" /> 
              and using the <paramref name="queryString" />.
            </summary><param name="functionType"> 
      The type of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> for which to create the permanent URL. 
      Must be derived from <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. 
    </param><param name="queryString">
      The <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the query string arguments. Must not be <see langword="null" />. 
    </param></member><member name="P:Remotion.Web.ExecutionEngine.IWxePage.IsReturningPostBack"><summary> Gets a flag describing whether this post-back has been triggered by returning from a WXE function. </summary></member><member name="P:Remotion.Web.ExecutionEngine.IWxePage.ReturningFunction"><summary> Gets the WXE function that has been executed in the current page. </summary></member><member name="P:Remotion.Web.ExecutionEngine.IWxePage.IsAbortEnabled"><summary>
              Gets a flag that determines whether to abort the session upon closing the window. 
             </summary></member><member name="P:Remotion.Web.ExecutionEngine.IWxePage.AreOutOfSequencePostBacksEnabled"><summary>
              Gets a flag that determines whether to allow out-of-sequence postbacks (i.e. post-backs from an already 
              submitted page because of the cache). 
             </summary></member><member name="P:Remotion.Web.ExecutionEngine.IWxePage.IsOutOfSequencePostBack"><summary>
              Gets a flag that describes whether the current postback cycle was caused by resubmitting a page from the 
              client's cache.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.IWxePage.AreStatusMessagesEnabled"><summary> 
              Gets a flag whether the status messages (i.e. is submitting, is aborting) will be displayed when the user
              tries to e.g. postback while a request is being processed.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.IWxePage.StatusIsAbortingMessage"><summary> Gets the message displayed when the user attempts to submit while the page is already aborting. </summary></member><member name="P:Remotion.Web.ExecutionEngine.IWxePage.StatusIsCachedMessage"><summary> 
              Gets the message displayed when the user returnes to a cached page that has already been submited or aborted. 
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.IWxePage.WxeHandler"><summary> Gets or sets the <see cref="P:Remotion.Web.ExecutionEngine.IWxePage.WxeHandler" /> of the current request. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeCallArguments"><summary>
            Use an instance <see cref="T:Remotion.Web.ExecutionEngine.WxeCallArguments" /> type to control the execution of a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. This type always requires a 
            <b>sender</b>-object and can be parameterized with <see cref="T:Remotion.Web.ExecutionEngine.WxeCallOptions" /> to specify if the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> should execute
            within the same window, as a new root-function, with or without a perma-URL and so on.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeCallArgumentsBase"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.WxeCallArgumentsBase" /> type is the default implementation of <see cref="T:Remotion.Web.ExecutionEngine.IWxeCallArguments" /> and acts as the base type for
            the <see cref="T:Remotion.Web.ExecutionEngine.WxeCallArguments" /> and <see cref="T:Remotion.Web.ExecutionEngine.WxePermaUrlCallArguments" /> types.
            </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeCallArguments.Default"><summary>
            The default arguments. Use this instance to execute a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> as a sub-function within the same window.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeCallExternalException"><summary> 
              This exception is thrown to cancel the processing of an event handler that called a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeIgnorableException"><summary> 
              Exceptions derived from <see cref="T:Remotion.Web.ExecutionEngine.WxeIgnorableException" /> can safely be ignored in event handlers 
              that call other WxeFunctions.
              <see cref="T:Remotion.Web.ExecutionEngine.WxeUserCancelException" />.
              <see cref="T:Remotion.Web.ExecutionEngine.WxeCallExternalException" />
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeException"><summary> This exception is thrown by the web execution engine. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeCallOptions"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.WxeCallOptions" /> type represents the most generic of options for executing a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />, namely it only controls
            whether the useer should be presented with a perma-URL to the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />.
            Use the derived types if you require additional control over the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />'s execution.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeCallOptionsExternal"><summary>
            Use the <see cref="T:Remotion.Web.ExecutionEngine.WxeCallOptionsExternal" /> type if you whish to execute a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> as a new root function, 
            typically in a new window. The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> will be initialized on the server and then opened via a Javascript call.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeCallOptionsExternalByRedirect"><summary>
            Use the <see cref="T:Remotion.Web.ExecutionEngine.WxeCallOptionsExternalByRedirect" /> type if you whish to execute a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> as a new root function in the
            same window.The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> will be initialized on the server and then opened via a HTTP-redirect request.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeCallOptionsNoRepost"><summary>
            Use the <see cref="T:Remotion.Web.ExecutionEngine.WxeCallOptionsNoRepost" /> type if you whish to execute a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> as a sub function and suppressing 
            the re-post to the postback-handler after the execution has returned to the caller function.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeContext"><summary>
              The <b>WxeContext</b> contains information about the current WXE execution cycle.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetPermanentUrl(System.Web.HttpContextBase,System.Type,System.Collections.Specialized.NameValueCollection)"><summary> 
              Gets the permanent URL for the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> of the specified <paramref name="functionType" /> 
              and using the <paramref name="urlParameters" />.
            </summary><param name="httpContext"> 
      The <see cref="T:System.Web.HttpContextBase" /> used for resolving the path. Must not be <see langword="null" />. 
    </param><param name="functionType"> 
      The type of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> for which to create the permanent URL. 
      Must be derived from <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. Must not be <see langword="null" />. 
    </param><param name="urlParameters">
      The <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the url parameters used for the query string. 
      Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetPermanentUrl(System.Web.HttpContextBase,System.Type,System.Collections.Specialized.NameValueCollection,System.Boolean)"><summary> 
              Gets the permanent URL for the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> of the specified <paramref name="functionType" /> 
              and using the <paramref name="urlParameters" />.
            </summary><param name="httpContext"> 
      The <see cref="T:System.Web.HttpContextBase" /> used for resolving the path. Must not be <see langword="null" />. 
    </param><param name="functionType"> 
      The type of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> for which to create the permanent URL. 
      Must be derived from <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. Must not be <see langword="null" />. 
    </param><param name="urlParameters">
      The <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the url parameters used for the query string. 
      Must not be <see langword="null" />. 
    </param><param name="fallbackOnCurrentUrl"> 
      If <see langword="true" />, the method uses the <see cref="P:System.Uri.AbsolutePath" /> of the 
      <paramref name="httpContext" />'s <see cref="P:System.Web.HttpContext.Request" /> as a fallback if no mapping for the
      <paramref name="functionType" /> has been defined, and the 
      <see cref="P:Remotion.Web.Configuration.ExecutionEngineConfiguration.DefaultWxeHandler" /> is not set. 
      Otherwise, a <see cref="T:Remotion.Web.ExecutionEngine.WxeException" /> is thrown.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.ExecuteFunctionExternal(System.Web.UI.Page,Remotion.Web.ExecutionEngine.WxeFunction,System.Collections.Specialized.NameValueCollection,System.Boolean)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> in the current window from any <see cref="T:System.Web.UI.Page" /> by using a redirect.
            </summary><param name="page"> The <see cref="T:System.Web.UI.Page" />. </param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="urlParameters">
      Provides the list of arguments for the URL's query string. Defaults to <see langword="null" />, 
      which indicates that the only <paramref name="function" />'s current parameters should be used for the 
      query string.
    </param><param name="returnToCaller">
      <see langword="true" /> to return to the calling page (i.e. the <see cref="P:System.Web.UI.Page.Request" />'s 
      <see cref="P:System.Web.HttpRequest.RawUrl" /> after the <paramref name="function" /> has completed.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.ExecuteFunctionExternal(System.Web.UI.Page,Remotion.Web.ExecutionEngine.WxeFunction,System.Boolean,System.Collections.Specialized.NameValueCollection,System.Boolean)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> in the current window from any <see cref="T:System.Web.UI.Page" /> by using a redirect.
            </summary><param name="page"> The <see cref="T:System.Web.UI.Page" />. </param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="createPermaUrl">
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="urlParameters">
      Provides the list of arguments for the URL's query string. Defaults to <see langword="null" />, 
      which indicates that the only <paramref name="function" />'s current parameters should be used for the 
      query string.
    </param><param name="returnToCaller">
      <see langword="true" /> to return to the calling page (i.e. the <see cref="P:System.Web.UI.Page.Request" />'s 
      <see cref="P:System.Web.HttpRequest.RawUrl" /> after the <paramref name="function" /> has completed.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.ExecuteFunctionExternal(System.Web.UI.Page,Remotion.Web.ExecutionEngine.WxeFunction,System.String,System.String,System.Collections.Specialized.NameValueCollection)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> in the specified window or frame from any <see cref="T:System.Web.UI.Page" /> 
              by using java script.
            </summary><param name="page"> The <see cref="T:System.Web.UI.Page" />. </param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="target">
      The HTML frame/window name that will be used to execute the function. Must not be <see langword="null" /> or 
      empty.
    </param><param name="features"> 
      The features argument that is passed to the javascript function <b>window.open()</b>. 
    </param><param name="urlParameters">
      Provides the list of arguments for the URL's query string. Defaults to <see langword="null" />, 
      which indicates that the only <paramref name="function" />'s current parameters should be used for the 
      query string.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.ExecuteFunctionExternal(System.Web.UI.Page,Remotion.Web.ExecutionEngine.WxeFunction,System.String,System.String,System.Boolean,System.Collections.Specialized.NameValueCollection)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> in the specified window or frame from any <see cref="T:System.Web.UI.Page" />  
              by using java script.
            </summary><param name="page"> The <see cref="T:System.Web.UI.Page" />. </param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="target">
      The HTML frame/window name that will be used to execute the function. Must not be <see langword="null" /> or 
      empty.
    </param><param name="features"> 
      The features argument that is passed to the javascript function <b>window.open()</b>. 
    </param><param name="createPermaUrl">
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="urlParameters">
      Provides the list of arguments for the URL's query string. Defaults to <see langword="null" />, 
      which indicates that the only <paramref name="function" />'s current parameters should be used for the 
      query string.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetResumeUrl(System.Boolean)"><summary> Gets the URL that resumes the current function. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetPath(System.Collections.Specialized.NameValueCollection)"><summary> Gets the absolute path to the WXE handler used for the current function. </summary><param name="queryString"> An optional list of URL parameters to be appended to the path. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetPath(System.String,System.Collections.Specialized.NameValueCollection)"><summary> Gets the absolute path that resumes the function with specified token. </summary><param name="functionToken"> 
              The function token of the function to resume. Must not be <see langword="null" /> or emtpy.
            </param><param name="queryString"> An optional list of URL parameters to be appended to the path. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetPath(System.String,System.String,System.Collections.Specialized.NameValueCollection)"><summary> Gets the absolute path that resumes the function with specified token. </summary><param name="path"> The path to the <see cref="T:Remotion.Web.ExecutionEngine.WxeHandler" />. Must not be <see langword="null" /> or emtpy. </param><param name="functionToken"> 
              The function token of the function to resume. Must not be <see langword="null" /> or emtpy.
            </param><param name="queryString"> An optional list of URL parameters to be appended to the <paramref name="path" />. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetPermanentUrl(System.Type,System.Collections.Specialized.NameValueCollection)"><summary> 
              Gets the permanent URL for the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> of the specified <paramref name="functionType" /> 
              and using the <paramref name="urlParameters" />.
            </summary><param name="functionType"> 
      The type of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> for which to create the permanent URL. 
      Must be derived from <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. Must not be <see langword="null" />. 
    </param><param name="urlParameters">
      The <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the url parameters used for the query string. 
      Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetPermanentUrl(System.Type,System.Collections.Specialized.NameValueCollection,System.Boolean)"><summary> 
              Gets the permanent URL for the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> of the specified <paramref name="functionType" /> 
              and using the <paramref name="urlParameters" />.
            </summary><param name="functionType"> 
      The type of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> for which to create the permanent URL. 
      Must be derived from <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. Must not be <see langword="null" />. 
    </param><param name="urlParameters">
      The <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the url parameters used for the query string. 
      Must not be <see langword="null" />. 
    </param><param name="useParentPermanentUrl">
       <see langword="true" /> to add the executing function's perma-URL. Defaults to <see langword="false" />.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetDestinationUrlForExternalFunction(Remotion.Web.ExecutionEngine.WxeFunction,System.String,Remotion.Web.ExecutionEngine.WxePermaUrlOptions)"><summary> Gets the URL to be used for transfering to the external function. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetFunctionTokenForExternalFunction(Remotion.Web.ExecutionEngine.WxeFunction,System.Boolean)"><summary>Initalizes a new <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" /> with the passed <paramref name="function" /> and returns the associated function token.</summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeContext.Current"><summary> The current <see cref="T:Remotion.Web.ExecutionEngine.WxeContext" />. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeExecuteNextStepException"><summary> This exception is used by the execution engine to end the execution of a <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeExecutionControlExceptionBase"><summary> This exception is used by the execution engine to control the call stack. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeExecuteUserControlNextStepException"><summary> This exception is used by the execution engine to end the execution of a <see cref="T:Remotion.Web.ExecutionEngine.WxeUserControlStep" />. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeExecutor"><summary>
            Encapsulates execute logic for WXE functions.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeExecutor.System#IDisposable#Dispose"><summary>
            Invoke <see cref="M:System.IDisposable.Dispose" /> at the end of the page life cycle, i.e. in the <see cref="M:System.Web.UI.Control.Dispose" /> method.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeExecutor.GetClosingScriptForExternalFunction(System.String,System.Web.UI.Control,System.Boolean)"><summary> Gets the client script to be used as the return URL for the window of the external function. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeExecutor.FormatDoPostBackClientScript(System.String,System.String,System.String,System.String,System.String)"><summary> 
              Gets the client script used to execute <c>__dopostback</c> in the parent form before closing the window of the 
              external function.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeExecutor.FormatDoSubmitClientScript(System.String,System.String,System.String)"><summary> 
              Gets the client script used to submit the parent form before closing the window of the external function. 
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeExecutor.UsesEventTarget"><summary> 
              Gets a flag describing whether the post back was most likely caused by the ASP.NET post back mechanism.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeForm.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)"><summary> Calls the <see cref="M:Remotion.Web.ExecutionEngine.WxeForm.OnLoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> method. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeForm.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent"><summary> Calls the <see cref="M:Remotion.Web.ExecutionEngine.WxeForm.RaisePostDataChangedEvent" /> method. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeForm.OnLoadPostData(System.String,System.Collections.Specialized.NameValueCollection)"><summary> Fires the <see cref="E:Remotion.Web.ExecutionEngine.WxeForm.LoadPostData" /> event. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeForm.RaisePostDataChangedEvent"><summary> Called when the state of the control has changed between postbacks. </summary></member><member name="E:Remotion.Web.ExecutionEngine.WxeForm.LoadPostData"><summary> Occurs during the load post data phase. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeFunction"><summary>
            The new <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. Will replace the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> type once implemtation is completed.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeFunctionState"><summary>
              Stores the session state for a single function token.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeFunctionState.Abort"><summary> Aborts the <b>WxeFunctionState</b> by calling <see cref="M:Remotion.Web.ExecutionEngine.WxeFunctionState.AbortRecursive" />. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeFunctionState.AbortRecursive"><summary> Aborts the <b>WxeFunctionState</b>. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeFunctionState.IsCleanUpEnabled"><summary> 
              Gets a flag that determines whether to automatically clean-up (i.e. abort) the function state after 
              its function has executed.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeFunctionStateManager.CleanUpExpired"><summary> Cleans up expired <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" /> objects in the collection. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeFunctionStateManager.Add(Remotion.Web.ExecutionEngine.WxeFunctionState)"><summary> Adds the <paramref name="functionState" /> to the collection. </summary><param name="functionState"> 
              The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" /> to be added. Must not be <see langword="null" /> or aborted.
            </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeFunctionStateManager.GetItem(System.String)"><summary> Gets the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" /> for the specifed <paramref name="functionToken" />. </summary><param name="functionToken"> 
              The token to look-up the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" />. Must not be <see langword="null" /> or empty.
            </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeFunctionStateManager.Remove(System.String)"><summary> Removes the <paramref name="functionToken" /> from the collection. </summary><param name="functionToken"> 
              The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" /> to be removed. Must not be <see langword="null" /> or empty.
            </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeFunctionStateManager.Abort(Remotion.Web.ExecutionEngine.WxeFunctionState)"><summary> Removes and aborts the <paramref name="functionState" /> from the collection. </summary><param name="functionState"> 
              The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" /> to be removed. Must not be <see langword="null" />.
            </param></member><member name="T:Remotion.Web.ExecutionEngine.WxeHandler"><summary> 
              The <see cref="T:System.Web.IHttpHandler" /> implementation responsible for handling requests to the 
              <b>Web Execution Engine.</b>
            </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeHandler._currentFunctionState"><summary> The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" /> representing the <see cref="P:Remotion.Web.ExecutionEngine.WxeHandler.RootFunction" /> and its context. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.ProcessRequest(System.Web.HttpContext)"><summary> Processes the requests associated with the <see cref="T:Remotion.Web.ExecutionEngine.WxeHandler" />. </summary><param name="context"> The <see cref="T:System.Web.HttpContext" /> of the request. Must not be <see langword="null" />. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.CheckTimeoutConfiguration(System.Web.HttpContext)"><summary> Checks whether the timeout settings are valid. </summary><param name="context"> 
      The current <see cref="T:System.Web.HttpContext" />. Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.GetType(System.Web.HttpContext)"><summary> Gets the <see cref="T:System.Type" /> from the information provided by the <paramref name="context" />. </summary><param name="context"> 
      The <see cref="T:System.Web.HttpContext" /> of the request. Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.GetTypeByPath(System.String)"><summary> Gets the <see cref="T:System.Type" /> for the specified <paramref name="absolutePath" />. </summary><param name="absolutePath"> 
      The absolute path of the <see cref="T:System.Type" /> to get. Must start with a '/'.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.GetTypeByTypeName(System.String)"><summary> Gets the <see cref="T:System.Type" /> for the specified <paramref name="typeName" />. </summary><param name="typeName">
      The name of the <see cref="T:System.Type" /> to get. Must not be <see langword="null" /> or emtpy. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.CreateNewFunctionState(System.Web.HttpContext,System.Type)"><summary> Initializes a new <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />, encapsulated in a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" /> object. </summary><param name="context">
      The current <see cref="T:System.Web.HttpContext" />. Must not be <see langword="null" />. 
    </param><param name="type">
      The type of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> to create. Must not be <see langword="null" />.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.ResumeExistingFunctionState(System.Web.HttpContext,System.String)"><summary> Resumes an existing <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. </summary><param name="context"> 
      The current <see cref="T:System.Web.HttpContext" />. Must not be <see langword="null" />. 
    </param><param name="functionToken"> 
      The unique identifier of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> instance to resume. 
      Must not be <see langword="null" /> or emtpy.  
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.ProcessFunctionState(System.Web.HttpContext,Remotion.Web.ExecutionEngine.WxeFunctionState,System.Boolean)"><summary> Redirects the <see cref="P:System.Web.HttpContext.Response" /> to an optional <see cref="P:Remotion.Web.ExecutionEngine.WxeFunction.ReturnUrl" />. </summary><param name="context"> 
      The current <see cref="T:System.Web.HttpContext" />. Must not be <see langword="null" />. 
    </param><param name="functionState"> 
      The current <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" />. Must not be <see langword="null" />. 
    </param><param name="isNewFunction">
      <see langword="true" /> if the <paramref name="functionState" />'s <see cref="P:Remotion.Web.ExecutionEngine.WxeFunctionState.Function" /> is
      a new function, i.e. the request contained a <see cref="F:Remotion.Web.ExecutionEngine.WxeHandler.Parameters.WxeFunctionType" /> parameter.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.ExecuteFunctionState(System.Web.HttpContext,Remotion.Web.ExecutionEngine.WxeFunctionState,System.Boolean)"><summary> 
              Sets the current <see cref="T:Remotion.Web.ExecutionEngine.WxeContext" /> and invokes <see cref="M:Remotion.Web.ExecutionEngine.WxeHandler.ExecuteFunction(Remotion.Web.ExecutionEngine.WxeFunction,Remotion.Web.ExecutionEngine.WxeContext,System.Boolean)" /> on the
              <paramref name="functionState" />'s <see cref="P:Remotion.Web.ExecutionEngine.WxeFunctionState.Function" />.
            </summary><param name="context"> 
      The current <see cref="T:System.Web.HttpContext" />. Must not be <see langword="null" />. 
    </param><param name="functionState"> 
      The current <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" />. Must not be <see langword="null" /> or aborted. 
    </param><param name="isNewFunction">
      <see langword="true" /> if the <paramref name="functionState" />'s <see cref="P:Remotion.Web.ExecutionEngine.WxeFunctionState.Function" /> is
      a new function, i.e. the request contained a <see cref="F:Remotion.Web.ExecutionEngine.WxeHandler.Parameters.WxeFunctionType" /> parameter.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.ExecuteFunction(Remotion.Web.ExecutionEngine.WxeFunction,Remotion.Web.ExecutionEngine.WxeContext,System.Boolean)"><summary>  Invokes <see cref="M:Remotion.Web.ExecutionEngine.WxeFunction.Execute(Remotion.Web.ExecutionEngine.WxeContext)" /> on the <paramref name="function" />. </summary><param name="function"> 
      The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> to be executed. Must not be <see langword="null" /> or aborted. 
    </param><param name="context"> 
      The <see cref="T:Remotion.Web.ExecutionEngine.WxeContext" /> to be passed to the function. Must not be <see langword="null" />. 
    </param><param name="isNew">
      <para>
        <see langword="true" /> if the <paramref name="function" /> is a new function, 
        i.e. the request contained a <see cref="F:Remotion.Web.ExecutionEngine.WxeHandler.Parameters.WxeFunctionType" /> parameter.
      </para><para>
        This parameter is not evaluated by the default implementation.
      </para>
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.CleanUpFunctionState(Remotion.Web.ExecutionEngine.WxeFunctionState)"><summary> Aborts the <paramref name="functionState" /> after its function has executed. </summary><param name="functionState"> 
      The current <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" />. Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.ProcessReturnUrl(System.Web.HttpContext,System.String)"><summary> Redirects the <see cref="P:System.Web.HttpContext.Response" /> to an optional <see cref="P:Remotion.Web.ExecutionEngine.WxeFunction.ReturnUrl" />. </summary><param name="context"> 
      The current <see cref="T:System.Web.HttpContext" />. Must not be <see langword="null" />. 
    </param><param name="returnUrl"> 
      The return URL. Must not be <see langword="null" /> or empty. 
    </param></member><member name="P:Remotion.Web.ExecutionEngine.WxeHandler.IsSessionManagementEnabled"><summary> Gets a flag indication whether session management is enabled for the application. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeHandler.IsSessionRefreshEnabled"><summary> Gets a flag indication whether session refreshing is enabled for the application. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeHandler.RefreshInterval"><summary> Gets session refresh interval for the application. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeHandler.RootFunction"><summary> The root function executed by the <b>WxeHanlder</b>. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeHandler.Parameters"><summary> Contains a list of parameters supported by the <see cref="T:Remotion.Web.ExecutionEngine.WxeHandler" />. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeHandler.Parameters.WxeFunctionType"><summary> Denotes the type of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> to initialize. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeHandler.Parameters.WxeFunctionToken"><summary> Denotes the <b>ID</b> of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> to be resumed. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeHandler.Parameters.ReturnUrl"><summary> Denotes the <b>URL</b> to return to after the function has completed. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeHandler.Parameters.WxeAction"><summary> Denotes a special action to be executed. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeHandler.Parameters.WxeReturnToSelf"><summary> Denotes whether to the function should restart after it has completed. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeHandler.Actions"><summary> Denotes the arguments supported for the <see cref="F:Remotion.Web.ExecutionEngine.WxeHandler.Parameters.WxeAction" /> parameter. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeHandler.Actions.Refresh"><summary> Denotes a session refresh. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeHandler.Actions.Abort"><summary> Denotes a session abort. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeHandler.Actions.Cancel"><summary> Denotes a session abort. (Obsolete) </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeLauncher"><summary> Redirects the request to the <b>WxeHandler.ashx</b> HTTP handler. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeLauncher.GetQueryString(System.Collections.Specialized.NameValueCollection)"><summary> Gets the query string to be passed to the <see cref="P:Remotion.Web.ExecutionEngine.WxeLauncher.WxeHandler" />. </summary><param name="queryString"> The original query string. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeLauncher.ProcessRequest(System.Web.HttpContext)"><summary> 
              Redirects the request to the <see cref="P:Remotion.Web.ExecutionEngine.WxeLauncher.WxeHandler" />, passing the query string generated by 
              <see cref="M:Remotion.Web.ExecutionEngine.WxeLauncher.GetQueryString(System.Collections.Specialized.NameValueCollection)" />.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeLauncher.WxeHandler"><summary> Gets the name of the wxe handler. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeMethod"><summary> This delegate represents a parameterless method called. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeMethodWithContext"><summary> This delegate represents a method accepting a <see cref="T:Remotion.Web.ExecutionEngine.WxeContext" /> as a parameter. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeMethodStep"><summary> Performs a step implemented by an instance method of a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeMethodStep._target"><summary> The <see cref="T:Remotion.Web.ExecutionEngine.WxeStepList" /> containing the <b>Method</b> executed by this <b>WxeMethodStep</b>. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeMethodStep._methodName"><summary> The name of the method executed by this <b>WxeMethodStep</b>. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeMethodStep._hasContext"><summary> <see langword="true" /> if the method has a parameter of type <see cref="T:Remotion.Web.ExecutionEngine.WxeContext" />. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeMethodStep._method"><summary> The cached <see cref="T:Remotion.Web.ExecutionEngine.WxeMethod" /> delegate used during execution of this <b>WxeMethodStep</b>. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeMethodStep._methodWithContext"><summary> The cached <see cref="T:Remotion.Web.ExecutionEngine.WxeMethodWithContext" /> delegate used during execution of this <b>WxeMethodStep</b>. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeMethodStep.#ctor(Remotion.Web.ExecutionEngine.WxeStepList,System.Reflection.MethodInfo)"><summary> Initalizes a new instance of the <b>WxeMethodStep</b> type. </summary><param name="target">
      The <see cref="T:Remotion.Web.ExecutionEngine.WxeStepList" /> containing the <b>Method</b> executed by this <b>WxeMethodStep</b>. 
      Must not be <see langword="null" />.
    </param><param name="method"> 
      The <see cref="T:System.Reflection.MethodInfo" /> of the <b>Method</b> executed by this <b>MethodStep</b>. 
      Must not be <see langword="null" />. The specified method must be an instance method of the 
      <paramref name="target" />'s type. Its signature must match either the <see cref="T:Remotion.Web.ExecutionEngine.WxeMethod" /> or 
      <see cref="T:Remotion.Web.ExecutionEngine.WxeMethodWithContext" /> delegate.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeMethodStep.Execute(Remotion.Web.ExecutionEngine.WxeContext)"><summary> Executes the method provided during the initizalion of this <see cref="T:Remotion.Web.ExecutionEngine.WxeMethodStep" />. </summary><param name="context"> The <see cref="T:Remotion.Web.ExecutionEngine.WxeContext" /> containing the information about the execution. </param></member><member name="T:Remotion.Web.ExecutionEngine.WxeOutParameterNotSupportedException"><summary>
            This exception occurs when a WxeFunction constructor with one or more <c>out</c> parameters is called.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxePage"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="T:Remotion.Web.UI.SmartPage"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="T:Remotion.Web.UI.ISmartNavigablePage"><summary>
              This interface declares methods and properties used to control and enhance the client side user experience
              for navigating the page and to simplify application development towards this goal.
            </summary></member><member name="M:Remotion.Web.UI.ISmartNavigablePage.DiscardSmartNavigationData"><summary> Clears scrolling and focus information on the page. </summary></member><member name="M:Remotion.Web.UI.ISmartNavigablePage.SetFocus(Remotion.Web.UI.Controls.IFocusableControl)"><summary> Sets the focus to the passed control. </summary><param name="control"> 
              The <see cref="T:Remotion.Web.UI.Controls.IFocusableControl" /> to assign the focus to.
            </param></member><member name="M:Remotion.Web.UI.ISmartNavigablePage.RegisterNavigationControl(Remotion.Web.UI.Controls.INavigationControl)"><summary> Registers a <see cref="T:Remotion.Web.UI.Controls.INavigationControl" /> with the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" />. </summary><param name="control"> The <see cref="T:Remotion.Web.UI.Controls.INavigationControl" /> to register. </param></member><member name="M:Remotion.Web.UI.ISmartNavigablePage.AppendNavigationUrlParameters(System.String)"><summary> 
              Appends the URL parameters returned by <see cref="M:Remotion.Web.UI.ISmartNavigablePage.GetNavigationUrlParameters" /> to the <paramref name="url" />.
            </summary><param name="url"> A URL or a query string. </param></member><member name="M:Remotion.Web.UI.ISmartNavigablePage.GetNavigationUrlParameters"><summary> 
              Evaluates the <see cref="M:Remotion.Web.UI.Controls.INavigationControl.GetNavigationUrlParameters" /> methods of all controls registered
              using <see cref="M:Remotion.Web.UI.ISmartNavigablePage.RegisterNavigationControl(Remotion.Web.UI.Controls.INavigationControl)" />.
            </summary></member><member name="P:Remotion.Web.UI.ISmartNavigablePage.IsSmartScrollingEnabled"><summary> Gets or sets the flag that determines whether smart scrolling is enabled on this page.  </summary></member><member name="P:Remotion.Web.UI.ISmartNavigablePage.IsSmartFocusingEnabled"><summary> Gets or sets the flag that determines whether smart naviagtion is enabled on this page.  </summary></member><member name="M:Remotion.Web.UI.SmartPage.RegisterClientSidePageEventHandler(Remotion.Web.UI.SmartPageEvents,System.String,System.String)"><summary> 
              Registers Java Script functions to be executed when the respective <paramref name="pageEvent" /> is raised.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.RegisterControlForDirtyStateTracking(Remotion.Web.UI.Controls.IEditableControl)"><summary>
              Registers a control implementing <see cref="T:Remotion.Web.UI.Controls.IEditableControl" /> for tracking of it's server- and client-side
              dirty state.
            </summary><param name="control"> A control implementing <see cref="T:Remotion.Web.UI.Controls.IEditableControl" /> that will be tracked.  </param></member><member name="M:Remotion.Web.UI.SmartPage.RegisterControlForClientSideDirtyStateTracking(System.String)"><summary>
              Resiters a <see cref="P:System.Web.UI.Control.ClientID" /> for the tracking of the controls client-side dirty state.
            </summary><param name="clientID"> The ID of an HTML input/textarea/select element. </param></member><member name="M:Remotion.Web.UI.SmartPage.DiscardSmartNavigationData"><summary> Clears scrolling and focus information on the page. </summary></member><member name="M:Remotion.Web.UI.SmartPage.SetFocus(Remotion.Web.UI.Controls.IFocusableControl)"><summary> Sets the focus to the passed control. </summary><param name="control"> 
              The <see cref="T:Remotion.Web.UI.Controls.IFocusableControl" /> to assign the focus to. Must no be <see langword="null" />.
            </param></member><member name="M:Remotion.Web.UI.SmartPage.SetFocus(System.String)"><summary> Sets the focus to the passed control ID. </summary><param name="id"> 
              The client side ID of the control to assign the focus to. Must no be <see langword="null" /> or empty. 
            </param></member><member name="M:Remotion.Web.UI.SmartPage.RegisterNavigationControl(Remotion.Web.UI.Controls.INavigationControl)"><summary> Registers a <see cref="T:Remotion.Web.UI.Controls.INavigationControl" /> with the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" />. </summary><param name="control"> The <see cref="T:Remotion.Web.UI.Controls.INavigationControl" /> to register. Must not be <see langword="null" />. </param></member><member name="M:Remotion.Web.UI.SmartPage.AppendNavigationUrlParameters(System.String)"><summary> 
              Appends the URL parameters returned by <see cref="M:Remotion.Web.UI.SmartPage.GetNavigationUrlParameters" /> to the <paramref name="url" />.
            </summary><param name="url"> A URL or a query string. Must not be <see langword="null" />. </param></member><member name="M:Remotion.Web.UI.SmartPage.GetNavigationUrlParameters"><summary> 
              Evaluates the <see cref="M:Remotion.Web.UI.Controls.INavigationControl.GetNavigationUrlParameters" /> methods of all controls registered
              using <see cref="M:Remotion.Web.UI.SmartPage.RegisterNavigationControl(Remotion.Web.UI.Controls.INavigationControl)" />.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#ISmartPage#GetPostBackCollection"><summary> Gets the post back data for the page. </summary></member><member name="M:Remotion.Web.UI.SmartPage.GetPostBackCollection"><summary> Gets the post-back data for the page. </summary></member><member name="M:Remotion.Web.UI.SmartPage.PrepareValidation"><summary>
              Call this method before validating when using <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> 
              and <see cref="M:Remotion.ObjectBinding.Web.UI.Controls.IBusinessObjectDataSourceControl.Validate()" />.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.EnsurePostLoadInvoked"><summary> Ensures that PostLoad is called on all controls that support <see cref="T:Remotion.Web.UI.Controls.ISupportsPostLoadControl" />. </summary></member><member name="M:Remotion.Web.UI.SmartPage.EnsureValidatableControlsInitialized"><summary> Ensures that all validators are registered with their <see cref="T:Remotion.Web.UI.Controls.IValidatableControl" /> controls. </summary></member><member name="M:Remotion.Web.UI.SmartPage.EvaluateDirtyState"><summary> 
              Evaluates whether any control regsitered using <see cref="M:Remotion.Web.UI.SmartPage.RegisterControlForDirtyStateTracking(Remotion.Web.UI.Controls.IEditableControl)" />
              has values that must be persisted before the user leaves the page. 
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_AppRelativeVirtualPath"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_AppRelativeVirtualPath(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_ClientTarget"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_ClientTarget(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_ClientQueryString"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_ErrorPage"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_ErrorPage(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_IsCallback"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_AutoPostBackControl"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_AutoPostBackControl(System.Web.UI.Control)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_Header"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_MaintainScrollPositionOnPostBack"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_MaintainScrollPositionOnPostBack(System.Boolean)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_Master"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_MaxPageStateFieldLength"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_MaxPageStateFieldLength(System.Int32)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_Trace"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_Cache"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_Title"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_Title(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_User"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_IsCrossPagePostBack"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_IsPostBack"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_ViewStateEncryptionMode"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_ViewStateEncryptionMode(System.Web.UI.ViewStateEncryptionMode)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_ViewStateUserKey"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_ViewStateUserKey(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_IsPostBackEventControlRegistered"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_IsValid"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_Validators"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_PreviousPage"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_Buffer"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_Buffer(System.Boolean)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_ContentType"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_ContentType(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_CodePage"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_CodePage(System.Int32)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_ResponseEncoding"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_ResponseEncoding(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_Culture"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_Culture(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_LCID"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_LCID(System.Int32)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_UICulture"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_UICulture(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_AsyncTimeout"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_AsyncTimeout(System.TimeSpan)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_TraceEnabled"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_TraceEnabled(System.Boolean)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_TraceModeValue"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_TraceModeValue(System.Web.TraceMode)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_EnableViewStateMac"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_EnableViewStateMac(System.Boolean)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_IsAsync"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_Form"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_PageAdapter"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_Items"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#ReadStringResource"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#LoadControl(System.Type,System.Object[])"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#ParseControl(System.String,System.Boolean)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#DesignerInitialize"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#SetFocus(System.Web.UI.Control)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#RegisterRequiresControlState(System.Web.UI.Control)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#RequiresControlState(System.Web.UI.Control)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#UnregisterRequiresControlState(System.Web.UI.Control)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#RegisterRequiresPostBack(System.Web.UI.Control)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#MapPath(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#RegisterRequiresViewStateEncryption"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#RegisterViewStateHandler"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#ExecuteRegisteredAsyncTasks"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#RegisterAsyncTask(System.Web.UI.PageAsyncTask)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#GetValidators(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#GetDataItem"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#add_LoadComplete(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#remove_LoadComplete(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#add_PreInit(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#remove_PreInit(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#add_PreLoad(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#remove_PreLoad(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#add_PreRenderComplete(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#remove_PreRenderComplete(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#add_InitComplete(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#remove_InitComplete(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#add_SaveStateComplete(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#remove_SaveStateComplete(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#ITemplateControl#add_AbortTransaction(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#ITemplateControl#remove_AbortTransaction(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#ITemplateControl#add_CommitTransaction(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#ITemplateControl#remove_CommitTransaction(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#ITemplateControl#add_Error(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#ITemplateControl#remove_Error(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#ITemplateControl#LoadControl(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#ITemplateControl#LoadTemplate(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#ITemplateControl#ParseControl(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#ResolveUrl(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#get_BindingContainer"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#get_TemplateControl"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#set_TemplateControl(System.Web.UI.TemplateControl)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#get_AppRelativeTemplateSourceDirectory"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#set_AppRelativeTemplateSourceDirectory(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="P:Remotion.Web.UI.SmartPage.AbortMessage"><summary> Gets or sets the message displayed when the user attempts to leave the page. </summary></member><member name="P:Remotion.Web.UI.SmartPage.StatusIsSubmittingMessage"><summary> 
              Gets or sets the message displayed when the user attempts to submit while the page is already submitting. 
            </summary></member><member name="P:Remotion.Web.UI.SmartPage.Remotion#Web#UI#ISmartPage#HtmlForm"><summary> Gets or sets the <b>HtmlForm</b> of this page. </summary></member><member name="P:Remotion.Web.UI.SmartPage.HtmlForm"><summary> Gets or sets the <b>HtmlForm</b> of this page. </summary></member><member name="P:Remotion.Web.UI.SmartPage.IsDirty"><summary> Gets or sets a flag describing whether the page is dirty. </summary></member><member name="P:Remotion.Web.UI.SmartPage.IsDirtyStateTrackingEnabled"><summary> Gets a flag whether to only show the abort confirmation if the page is dirty. </summary></member><member name="P:Remotion.Web.UI.SmartPage.Remotion#Web#UI#ISmartPage#IsDirtyStateTrackingEnabled"><summary> Gets the value returned by <see cref="P:Remotion.Web.UI.SmartPage.IsDirtyStateTrackingEnabled" />. </summary></member><member name="P:Remotion.Web.UI.SmartPage.ShowAbortConfirmation"><summary> 
              Gets or sets a value that determines whether to display a confirmation dialog before leaving the page. 
            </summary></member><member name="P:Remotion.Web.UI.SmartPage.IsAbortConfirmationEnabled"><summary> Gets the evaluated value for the <see cref="P:Remotion.Web.UI.SmartPage.ShowAbortConfirmation" /> property. </summary></member><member name="P:Remotion.Web.UI.SmartPage.Remotion#Web#UI#ISmartPage#IsAbortConfirmationEnabled"><summary> Gets the value returned by <see cref="P:Remotion.Web.UI.SmartPage.IsAbortConfirmationEnabled" />. </summary></member><member name="P:Remotion.Web.UI.SmartPage.EnableStatusIsSubmittingMessage"><summary> 
              Gets or sets the flag that determines whether to display a message when the user tries to start a second
              request.
            </summary></member><member name="P:Remotion.Web.UI.SmartPage.IsStatusIsSubmittingMessageEnabled"><summary> 
              Gets a flag whether a status message  will be displayed when the user tries to postback while a request is 
              being processed.
            </summary></member><member name="P:Remotion.Web.UI.SmartPage.Remotion#Web#UI#ISmartPage#IsStatusIsSubmittingMessageEnabled"><summary> Gets the value returned by <see cref="P:Remotion.Web.UI.SmartPage.IsStatusIsSubmittingMessageEnabled" />. </summary></member><member name="P:Remotion.Web.UI.SmartPage.EnableSmartScrolling"><summary> Gets or sets the flag that determines whether to use smart scrolling. </summary></member><member name="P:Remotion.Web.UI.SmartPage.IsSmartScrollingEnabled"><summary> Gets the evaluated value for the <see cref="P:Remotion.Web.UI.SmartPage.EnableSmartScrolling" /> property. </summary></member><member name="P:Remotion.Web.UI.SmartPage.Remotion#Web#UI#ISmartNavigablePage#IsSmartScrollingEnabled"><summary> Gets the value returned by <see cref="P:Remotion.Web.UI.SmartPage.IsSmartScrollingEnabled" />. </summary></member><member name="P:Remotion.Web.UI.SmartPage.EnableSmartFocusing"><summary> Gets or sets the flag that determines whether to use smart navigation. </summary></member><member name="P:Remotion.Web.UI.SmartPage.IsSmartFocusingEnabled"><summary> Gets the evaluated value for the <see cref="P:Remotion.Web.UI.SmartPage.EnableSmartFocusing" /> property. </summary></member><member name="P:Remotion.Web.UI.SmartPage.Remotion#Web#UI#ISmartNavigablePage#IsSmartFocusingEnabled"><summary> Gets the value returned by <see cref="P:Remotion.Web.UI.SmartPage.IsSmartFocusingEnabled" />. </summary></member><member name="T:Remotion.Web.UI.IWindowStateManager"><summary>
            Defines methods to get and set state between pages.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.ExecuteNextStep"><summary> End this page step and continue with the WXE function. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.ExecuteFunction(Remotion.Web.ExecutionEngine.WxeFunction,Remotion.Web.ExecutionEngine.IWxeCallArguments)"><summary>Executes the <paramref name="function" /> using the specified <paramref name="callArguments" />.</summary><param name="function">The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> to be executed. Must not be <see langword="null" />.</param><param name="callArguments">The <see cref="T:Remotion.Web.ExecutionEngine.IWxeCallArguments" /> used to control the function invocation. Must not be <see langword="null" />.</param></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.GetPermanentUrlParameters"><summary> Gets the permanent URL parameters the current page. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.GetPermanentUrl"><summary> Gets the permanent URL for the current page. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.GetPermanentUrl(System.Collections.Specialized.NameValueCollection)"><summary> Gets the permanent URL for the current page using the specified <paramref name="queryString" />. </summary><param name="queryString">
      The <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the query string arguments. Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.GetPermanentUrl(System.Type,System.Collections.Specialized.NameValueCollection)"><summary> 
              Gets the permanent URL for the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> of the specified <paramref name="functionType" /> 
              and using the <paramref name="queryString" />.
            </summary><param name="functionType"> 
      The type of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> for which to create the permanent URL. 
      Must be derived from <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. 
    </param><param name="queryString">
      The <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the query string arguments. Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.DeterminePostBackMode"><summary> Overrides <see cref="M:System.Web.UI.Page.DeterminePostBackMode" />. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.GetPostBackCollection"><summary> Gets the post-back data for the page. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.SavePageStateToPersistenceMedium(System.Object)"></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.LoadPageStateFromPersistenceMedium"></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.OnPreRenderComplete(System.EventArgs)"></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Dispose"><summary> Disposes the page. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Dispose(System.Boolean)"><summary> Disposes the page. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_AppRelativeVirtualPath"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_AppRelativeVirtualPath(System.String)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_ClientTarget"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_ClientTarget(System.String)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_ClientQueryString"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_ErrorPage"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_ErrorPage(System.String)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_IsCallback"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_AutoPostBackControl"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_AutoPostBackControl(System.Web.UI.Control)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_Header"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_MaintainScrollPositionOnPostBack"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_MaintainScrollPositionOnPostBack(System.Boolean)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_Master"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_MaxPageStateFieldLength"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_MaxPageStateFieldLength(System.Int32)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_Trace"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_Cache"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_Title"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_Title(System.String)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_User"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_IsCrossPagePostBack"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_IsPostBack"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_ViewStateEncryptionMode"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_ViewStateEncryptionMode(System.Web.UI.ViewStateEncryptionMode)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_ViewStateUserKey"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_ViewStateUserKey(System.String)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_IsPostBackEventControlRegistered"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_IsValid"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_Validators"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_PreviousPage"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_Buffer"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_Buffer(System.Boolean)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_ContentType"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_ContentType(System.String)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_CodePage"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_CodePage(System.Int32)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_ResponseEncoding"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_ResponseEncoding(System.String)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_Culture"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_Culture(System.String)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_LCID"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_LCID(System.Int32)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_UICulture"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_UICulture(System.String)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_AsyncTimeout"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_AsyncTimeout(System.TimeSpan)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_TraceEnabled"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_TraceEnabled(System.Boolean)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_TraceModeValue"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_TraceModeValue(System.Web.TraceMode)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_EnableViewStateMac"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_EnableViewStateMac(System.Boolean)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_IsAsync"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_Form"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_PageAdapter"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_Items"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#add_LoadComplete(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#remove_LoadComplete(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#add_PreInit(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#remove_PreInit(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#add_PreLoad(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#remove_PreLoad(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#add_PreRenderComplete(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#remove_PreRenderComplete(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#add_InitComplete(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#remove_InitComplete(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#add_SaveStateComplete(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#remove_SaveStateComplete(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#ITemplateControl#add_AbortTransaction(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#ITemplateControl#remove_AbortTransaction(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#ITemplateControl#add_CommitTransaction(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#ITemplateControl#remove_CommitTransaction(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#ITemplateControl#add_Error(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#ITemplateControl#remove_Error(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#get_BindingContainer"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#get_TemplateControl"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#set_TemplateControl(System.Web.UI.TemplateControl)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#get_AppRelativeTemplateSourceDirectory"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#set_AppRelativeTemplateSourceDirectory(System.String)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.IsReturningPostBack"><summary> Gets a flag describing whether this post-back has been triggered by returning from a WXE function. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.ReturningFunction"><summary> Gets the WXE function that has been executed in the current page. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.StatusIsAbortingMessage"><summary> 
              Gets or sets the message displayed when the user attempts to submit while the page is already aborting. 
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.StatusIsCachedMessage"><summary> 
              Gets or sets the message displayed when the user returnes to a cached page that has already been submitted 
              or aborted. 
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#ExecutionEngine#IWxePage#WxeHandler"><summary> Gets or sets the <see cref="T:Remotion.Web.ExecutionEngine.WxeHandler" /> of the current request. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.CurrentPageStep"><summary> Gets the <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" /> that called this <see cref="T:Remotion.Web.ExecutionEngine.WxePage" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.CurrentFunction"><summary> Gets the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> of which the <see cref="P:Remotion.Web.ExecutionEngine.WxePage.CurrentPageStep" /> is a part. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.Variables"><summary> Gets the <see cref="P:Remotion.Web.ExecutionEngine.WxeStep.Variables" /> collection of the <see cref="P:Remotion.Web.ExecutionEngine.WxePage.CurrentPageStep" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.WxeForm"><summary> Gets the <see cref="P:Remotion.Web.ExecutionEngine.WxePage.WxeForm" /> of this page. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.EnableAbort"><summary> Gets or sets the flag that determines whether to abort the session upon closing the window. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.IsAbortEnabled"><summary> Gets the evaluated value for the <see cref="P:Remotion.Web.ExecutionEngine.WxePage.EnableAbort" /> property. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#ExecutionEngine#IWxePage#IsAbortEnabled"><summary> Gets the value returned by <see cref="P:Remotion.Web.ExecutionEngine.WxePage.IsAbortEnabled" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.EnableOutOfSequencePostBacks"><summary>
              Gets a flag that determines whether to allow out-of-sequence postbacks (i.e. post-backs from an already 
              submitted page because of the cache). 
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.AreOutOfSequencePostBacksEnabled"><summary> Gets the evaluated value for the <see cref="P:Remotion.Web.ExecutionEngine.WxePage.EnableOutOfSequencePostBacks" /> property. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#ExecutionEngine#IWxePage#AreOutOfSequencePostBacksEnabled"><summary> Gets the value returned by <see cref="P:Remotion.Web.ExecutionEngine.WxePage.AreOutOfSequencePostBacksEnabled" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.IsOutOfSequencePostBack"><summary>
              Gets a flag that describes whether the current postback cycle was caused by resubmitting a page from the client's cache.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.IsAbortConfirmationEnabled"><summary> Gets the evaluated value for the <see cref="T:Remotion.Web.UI.ShowAbortConfirmation" /> property. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.IsDirtyStateTrackingEnabled"><summary> 
              Gets the value of the base class's <see cref="P:Remotion.Web.UI.SmartPage.IsDirtyStateTrackingEnabled" /> property ANDed with <see cref="P:Remotion.Web.ExecutionEngine.WxePage.IsAbortEnabled" />.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.EnableStatusMessages"><summary> 
              Gets or sets the flag that determines whether to display a message when the user tries to start a second
              request or returns to a page that has already been submittet (i.e. a cached page).
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.AreStatusMessagesEnabled"><summary> 
              Gets a flag whether the status messages (i.e. is submitting, is aborting) will be displayed when the user
              tries to e.g. postback while a request is being processed.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#ExecutionEngine#IWxePage#AreStatusMessagesEnabled"><summary> Gets the value returned by <see cref="P:Remotion.Web.ExecutionEngine.WxePage.AreStatusMessagesEnabled" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.EnableStatusIsSubmittingMessage"></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.IsStatusIsSubmittingMessageEnabled"><summary> Overridden to return the value of <see cref="P:Remotion.Web.ExecutionEngine.WxePage.AreStatusMessagesEnabled" />. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeTemplateControlInfo._cachedResourceManager"><summary> Caches the <see cref="T:Remotion.Globalization.ResourceManagerSet" /> for this control. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeTemplateControlInfo.GetResourceManager(System.Type)"><summary> Find the <see cref="T:Remotion.Globalization.IResourceManager" /> for this control info. </summary><param name="localResourcesType"> 
              A type with the <see cref="T:Remotion.Globalization.MultiLingualResourcesAttribute" /> applied to it.
              Typically an <b>enum</b> or the derived class itself.
            </param></member><member name="F:Remotion.Web.ExecutionEngine.WxePageInfo._returningFunctionState"><summary> The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" /> designated by <b>WxeForm.ReturningToken</b>. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo.#ctor(Remotion.Web.ExecutionEngine.IWxePage)"><summary> Initializes a new instance of the <b>WxePageInfo</b> type. </summary><param name="page"> 
              The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> containing this <b>WxePageInfo</b> object. 
              The page must be derived from <see cref="T:System.Web.UI.Page">System.Web.UI.Page</see>.
            </param></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo.FindControl(System.String,System.Boolean@)"><summary>
            Finds the control if it is the page's form. Otherwise, call the find method of the page's base class.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo.HandleLoadPostData(System.Collections.Specialized.NameValueCollection)"></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo.ExecuteNextStep"><summary> Implements <see cref="M:Remotion.Web.ExecutionEngine.IWxePage.ExecuteNextStep">IWxePage.ExecuteNextStep</see>. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo.GetPermanentUrlParameters"><summary>
              Implements <see cref="M:Remotion.Web.ExecutionEngine.IWxePage.GetPermanentUrlParameters">IWxePage.GetPermanentUrlParameters()</see>.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo.GetPermanentUrl"><summary>
              Implements <see cref="M:Remotion.Web.ExecutionEngine.IWxePage.GetPermanentUrl">IWxePage.GetPermanentUrl()</see>.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo.GetPermanentUrl(System.Collections.Specialized.NameValueCollection)"><summary>
              Implements <see cref="M:Remotion.Web.ExecutionEngine.IWxePage.GetPermanentUrl(System.Collections.Specialized.NameValueCollection)">IWxePage.GetPermanentUrl(NameValueCollection)</see>.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo.GetPermanentUrl(System.Type,System.Collections.Specialized.NameValueCollection)"><summary>
              Implements <see cref="M:Remotion.Web.ExecutionEngine.IWxePage.GetPermanentUrl(System.Type,System.Collections.Specialized.NameValueCollection)">IWxePage.GetPermanentUrl(Type,NameValueCollection)</see>.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo.SavePageStateToPersistenceMedium(System.Object)"><summary> Saves the viewstate into the executing <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />. </summary><param name="state"> An <b>ASP.NET</b> viewstate object. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo.LoadPageStateFromPersistenceMedium"><summary> Returns the viewstate previously saved into the executing <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo.Dispose"><summary> 
              If <see cref="M:Remotion.Web.ExecutionEngine.WxePageInfo.ExecuteNextStep" /> has been called prior to disposing the page, <b>Dispose</b> will
              break execution of this page life cycle and allow the Execution Engine to continue with the next step.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo.GetResourceManager"><summary> Find the <see cref="T:Remotion.Globalization.IResourceManager" /> for this WxePageInfo. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo.GetData(System.String)"><summary>
              Implements <see cref="M:Remotion.Web.UI.IWindowStateManager.GetData(System.String)">Remotion.Web.UI.IWindowStateManager.GetData</see>.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo.SetData(System.String,System.Object)"><summary>
              Implements <see cref="M:Remotion.Web.UI.IWindowStateManager.SetData(System.String,System.Object)">Remotion.Web.UI.IWindowStateManager.SetData</see>.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageInfo.StatusIsCachedMessage"><summary> Implements <see cref="P:Remotion.Web.ExecutionEngine.IWxePage.StatusIsCachedMessage">IWxePage.StatusIsCachedMessage</see>. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageInfo.StatusIsAbortingMessage"><summary> Implements <see cref="P:Remotion.Web.ExecutionEngine.IWxePage.StatusIsAbortingMessage">IWxePage.StatusIsAbortingMessage</see>. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageInfo.IsOutOfSequencePostBack"><summary> Implements <see cref="P:Remotion.Web.ExecutionEngine.IWxePage.IsOutOfSequencePostBack">IWxePage.IsOutOfSequencePostBack</see>. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageInfo.IsReturningPostBack"><summary> Implements <see cref="P:Remotion.Web.ExecutionEngine.IWxePage.IsReturningPostBack">IWxePage.IsReturningPostBack</see>. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageInfo.ReturningFunction"><summary> Implements <see cref="P:Remotion.Web.ExecutionEngine.IWxePage.ReturningFunction">IWxePage.ReturningFunction</see>. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxePageInfo.ResourceIdentifier"><summary> A list of resources. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxePageInfo.ResourceIdentifier.StatusIsAbortingMessage"><summary> Displayed when the user attempts to submit while the page is already aborting. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxePageInfo.ResourceIdentifier.StatusIsCachedMessage"><summary> Displayed when the user returnes to a cached page that has already been submitted or aborted. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxePageStep"><summary> This step interrupts the server side execution to display a page to the user. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageStep.#ctor(System.String)"><summary> Initializes a new instance of the <b>WxePageStep</b> type. </summary><param name="page">
      The URL of the page to be displayed, relative to the application root. Must not be <see langword="null" />
      or emtpy.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxePageStep.#ctor(Remotion.Web.ExecutionEngine.WxeVariableReference)"><summary> Initializes a new instance of the <b>WxePageStep</b> type. </summary><param name="pageref"> 
      A <see cref="T:Remotion.Web.ExecutionEngine.WxeVariableReference" /> pointing to the URL of the page to be displayed. The URL is relative 
      to the application root. Must not be <see langword="null" />.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxePageStep.Execute(Remotion.Web.ExecutionEngine.WxeContext)"><summary> 
              Displays the <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />'s page or the sub-function that has been invoked by the 
              <see cref="M:Remotion.Web.ExecutionEngine.WxePageStep.ExecuteFunction(Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.PreProcessingSubFunctionStateParameters,Remotion.Web.ExecutionEngine.WxeRepostOptions)" /> method.
            </summary><param name="context"> 
      The <see cref="T:Remotion.Web.ExecutionEngine.WxeContext" /> containing the information about the execution. Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxePageStep.SavePageStateToPersistenceMedium(System.Object)"><summary> Saves the passed <paramref name="state" /> object into the <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />. </summary><param name="state"> An <b>ASP.NET</b> viewstate object. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxePageStep.LoadPageStateFromPersistenceMedium"><summary> 
              Returns the viewstate previsously saved through the <see cref="M:Remotion.Web.ExecutionEngine.WxePageStep.SavePageStateToPersistenceMedium(System.Object)" /> method. 
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageStep.AbortRecursive"><summary> 
              Aborts the <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />. Aborting will cascade to any <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> executed
              in the scope of this step if they are part of the same hierarchy, i.e. share a common <see cref="P:Remotion.Web.ExecutionEngine.WxeStep.RootFunction" />.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageStep.Page"><summary> The URL of the page to be displayed by this <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageStep.ExecutingStep"><summary> Gets the currently executing <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageStep.PageToken"><summary> Gets the token for this page step. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageStep.IsPostBack"><summary>
              Gets a flag that corresponds to the <see cref="P:System.Web.UI.Page.IsPostBack">Page.IsPostBack</see> flag, but is 
              available from the beginning of the execution cycle, i.e. even before <b>OnInit</b>.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageStep.IsOutOfSequencePostBack"><summary>
              Gets a flag that describes whether the current postback cycle was caused by resubmitting a page from the 
              client's cache.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageStep.IsReturningPostBack"><summary>
              During the execution of a page, specifies whether the current postback cycle was caused by returning from a 
              <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageStep.PostBackCollection"><summary> Gets or sets the postback data for the page if it has executed a sub-function. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterAttribute.#ctor(System.Int32,System.Boolean,Remotion.Web.ExecutionEngine.WxeParameterDirection)"><summary>
            Declares a property as WXE function parameter.
            </summary><param name="index"> Index of the parameter within the function's parameter list. </param><param name="required"> Speficies whether this parameter must be specified (an not 
                be <see langword="null" />). Default is <see langword="true" /> for value types
                and <see langword="false" /> for reference types. </param><param name="direction"> Declares the parameter as input or output parameter, or both. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterConverter.ConvertToString(System.Object,Remotion.Collections.NameObjectCollection)"><summary> Converts a parameter's value to its string representation. </summary><param name="value"> The value to be converted. Must be of assignable to the <see cref="T:System.Type" />. </param><param name="callerVariables"> 
              The optional list of caller variables. Used to dereference a <see cref="T:Remotion.Web.ExecutionEngine.WxeVariableReference" />.
            </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterConverter.ConvertVarRefToString(Remotion.Web.ExecutionEngine.WxeVariableReference,Remotion.Collections.NameObjectCollection)"><summary> Converts a <see cref="T:Remotion.Web.ExecutionEngine.WxeVariableReference" />'s value to its string representation. </summary><param name="varRef"> 
              The <see cref="T:Remotion.Web.ExecutionEngine.WxeVariableReference" /> to be converted. The referenced value must be of assignable to the 
              <see cref="T:Remotion.Web.ExecutionEngine.WxeParameterDeclaration" />'s <see cref="T:System.Type" />. Must not be <see langword="null" />.
            </param><param name="callerVariables">
              The optional list of caller variables. Used to dereference a <see cref="T:Remotion.Web.ExecutionEngine.WxeVariableReference" />.
            </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterConverter.ConvertObjectToString(System.Object)"><summary> Converts a parameter's value to its string representation. </summary><param name="value"> The value to be converted. Must be of assignable to the <see cref="T:System.Type" />. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterConverter.TryConvertObjectToString(System.Object)"><summary> Tries to convert a parameter's value to its string representation. </summary><param name="value"> The value to be converted. </param></member><member name="T:Remotion.Web.ExecutionEngine.WxeParameterDirection"><summary> Specifies in which direction a parameter is passed. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeParameterDirection.In"><summary> The parameter is passed from the caller to the callee. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeParameterDirection.Out"><summary> The parameter is returned from the callee to the caller. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeParameterDirection.InOut"><summary> The parameter is passed from the caller to the callee and returned back to the caller. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeParameterDeclaration"><summary> Declares a WXE parameter. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterDeclaration.CopyToCallee(System.String,Remotion.Collections.NameObjectCollection,Remotion.Collections.NameObjectCollection)"><summary> Copy a single caller variable to a callee parameter. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterDeclaration.CopyToCallee(System.Object,Remotion.Collections.NameObjectCollection)"><summary> Copy a value to a callee parameter. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterDeclaration.CopyToCaller(System.String,Remotion.Collections.NameObjectCollection,Remotion.Collections.NameObjectCollection)"><summary> Copy a single callee parameter back to a caller variable. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterDeclaration.CopyParameter(System.String,Remotion.Collections.NameObjectCollection,System.String,Remotion.Collections.NameObjectCollection,System.Boolean)"><summary> Copy fromVariables[fromName] to toVariables[toName]. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterDeclaration.SetParameter(System.String,System.Object,Remotion.Collections.NameObjectCollection)"><summary> Set the parameter variables[parameterName] to the specified value. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterDeclaration.GetValue(Remotion.Collections.NameObjectCollection)"><summary>
            Gets the value of the parameter described by this declaration from a function's variable list.
            </summary><param name="variables">The variable list to get the parameter value from.</param></member><member name="T:Remotion.Web.ExecutionEngine.WxePermanentUrlTooLongException"><summary>
              This exception occurs when a permanent URL would exceed the maximum URL length.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxePermaUrlCallArguments"><summary>
            Use an instance of the <see cref="T:Remotion.Web.ExecutionEngine.WxePermaUrlCallArguments" /> to execute a sub-function within the same window while providing a perma-URL
            in the browser's location bar.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxePermaUrlOptions"><summary>
            Use the <see cref="T:Remotion.Web.ExecutionEngine.WxePermaUrlOptions" /> to specify that the user should be provided with a perma-URL to the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> in the 
            browser's location bar. Use the <see cref="F:Remotion.Web.ExecutionEngine.WxePermaUrlOptions.Null" /> value of the <see cref="T:Remotion.Web.ExecutionEngine.WxePermaUrlOptions" /> if you do not wish to create a perma-URL for
            the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxePostbackOutOfSequenceException"><summary> This exception indicates an attempt to resubmit a page cached in the browser's history. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeRepostOptions"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.WxeRepostOptions" /> determine if and how the calling page is notified after a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> executed with the 
            <see cref="T:Remotion.Web.ExecutionEngine.IWxeExecutor" />.<see cref="M:Remotion.Web.ExecutionEngine.IWxeExecutor.ExecuteFunction(Remotion.Web.ExecutionEngine.WxeFunction,Remotion.Web.ExecutionEngine.WxePermaUrlOptions)" /> or <see cref="T:Remotion.Web.ExecutionEngine.IWxeExecutor" />.<see cref="M:Remotion.Web.ExecutionEngine.IWxeExecutor.ExecuteFunctionNoRepost(Remotion.Web.ExecutionEngine.WxeFunction,System.Web.UI.Control,Remotion.Web.ExecutionEngine.WxeCallOptionsNoRepost)" /> 
            methods has returned to the caller.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeResourcePageStep"><summary>
              Calls pages that are stored in the resource directory.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourcePageStep.#ctor(System.String)"><summary>
              Calls the page using the calling assemby's resource directory.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourcePageStep.#ctor(Remotion.Web.ExecutionEngine.WxeVariableReference)"><summary>
              Calls the page using the calling assemby's resource directory.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourcePageStep.#ctor(System.Type,System.String)"><summary>
              Calls the page using the resource directory of the assembly's type.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourcePageStep.#ctor(System.Type,Remotion.Web.ExecutionEngine.WxeVariableReference)"><summary>
              Calls the page using the resource directory of the assembly's type.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourcePageStep.#ctor(System.Reflection.Assembly,System.String)"><summary>
              Calls the page using the assemby's resource directory.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourcePageStep.#ctor(System.Reflection.Assembly,Remotion.Web.ExecutionEngine.WxeVariableReference)"><summary>
              Calls the page using the assemby's resource directory.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeResourceUserControlStep"><summary>
              Calls user controls that are stored in the resource directory.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourceUserControlStep.#ctor(System.String)"><summary>
              Calls the user controls using the calling assemby's resource directory.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourceUserControlStep.#ctor(Remotion.Web.ExecutionEngine.WxeVariableReference)"><summary>
              Calls the user controls using the calling assemby's resource directory.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourceUserControlStep.#ctor(System.Type,System.String)"><summary>
              Calls the user controls using the resource directory of the assembly's type.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourceUserControlStep.#ctor(System.Type,Remotion.Web.ExecutionEngine.WxeVariableReference)"><summary>
              Calls the user controls using the resource directory of the assembly's type.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourceUserControlStep.#ctor(System.Reflection.Assembly,System.String)"><summary>
              Calls the user controls using the assemby's resource directory.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourceUserControlStep.#ctor(System.Reflection.Assembly,Remotion.Web.ExecutionEngine.WxeVariableReference)"><summary>
              Calls the user controls using the assemby's resource directory.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeReturnOptions"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.WxeReturnOptions" /> determine whether a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> executed with the 
            <see cref="T:Remotion.Web.ExecutionEngine.IWxeExecutor" />.<see cref="M:Remotion.Web.ExecutionEngine.IWxeExecutor.ExecuteFunctionExternalByRedirect(Remotion.Web.ExecutionEngine.WxeFunction,Remotion.Web.ExecutionEngine.WxeCallOptionsExternalByRedirect)" /> method will return to its calling 
            <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. Use the <see cref="F:Remotion.Web.ExecutionEngine.WxeReturnOptions.Null" /> value if you do not wish to return to the caller.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeTransactionMode`1"><summary>
            Defines commonly used transaction modes that can be specified when a new <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> is created.
            </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeTransactionMode`1.None"><summary>
            Indicates that a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> will not create any transactions when executed; instead, it will use the transaction of the
            <see cref="P:Remotion.Web.ExecutionEngine.WxeStep.ParentFunction" />, or no transaction if no parent exists.
            </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeTransactionMode`1.CreateRoot"><summary>
            Indicates that a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> will create a new root transaction when executed. The transaction must be explicitly committed,
            otherwise all changes made in its scope will be discarded.
            </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeTransactionMode`1.CreateRootWithAutoCommit"><summary>
            Indicates that a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> will create a new root transaction when executed. The transaction can be explicitly committed, and
            it will be committed automatically when the function successfuly finishes execution. When the function finishes with an exception, the
            transaction will not be committed automatically.
            </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeTransactionMode`1.CreateChildIfParent"><summary>
            Indicates that a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> will create a new transaction when executed. If a <see cref="P:Remotion.Web.ExecutionEngine.WxeStep.ParentFunction" /> exists which 
            has an associated transaction, the new transaction will be created as a child of that transaction. If no parent transaction exists, a root
            transaction will be created. The new transaction must be explicitly committed, otherwise all changes made in its scope will be discarded.
            </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeTransactionMode`1.CreateChildIfParentWithAutoCommit"></member><member name="T:Remotion.Web.ExecutionEngine.WxeUnhandledException"><summary>
              Encapsulates an exception when it is re-thrown by a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeUserCancelException"><summary> 
              Throw this exception to cancel the execution of a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> while executing a 
              <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />. 
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeUserControl.OnInit(System.EventArgs)"><summary>
            In order for the control-replacing to work, the initialization logic of the <see cref="T:System.Web.UI.UserControl" /> 
            has to be placed into the <see cref="M:Remotion.Web.ExecutionEngine.WxeUserControl.OnInitComplete(System.EventArgs)" /> method.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeUserControl.ExecuteNextStep"><summary> Implements <see cref="M:Remotion.Web.ExecutionEngine.IWxePage.ExecuteNextStep">IWxePage.ExecuteNextStep</see>. </summary></member><member name="T:Remotion.Web.Factories.ResourceUrlFactory"><summary>
            Responsible for creating objects that implement <see cref="T:Remotion.Web.IResourceUrl" />.
            <seealso cref="T:Remotion.Web.ResourceUrl" />
            <seealso cref="T:Remotion.Web.ThemedResourceUrl" />
            </summary></member><member name="T:Remotion.Web.Infrastructure.Factories.ThemedResourceUrlResolverFactory"><summary>
            Responsible for creating <see cref="T:Remotion.Web.Infrastructure.ThemedResourceUrlResolver" /> for the themed resources provided by the <b>Remotion.Web</b> assembly.
            </summary></member><member name="T:Remotion.Web.Infrastructure.IThemedResourceUrlResolverFactory"><summary>
            Defines a factory method for creating an object of type <see cref="T:Remotion.Web.Infrastructure.IThemedResourceUrlResolver" />.
            </summary></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)"><summary>
            Registers an event reference for validation with <see cref="T:System.Web.UI.PostBackOptions" />.
            </summary><param name="options">A <see cref="T:System.Web.UI.PostBackOptions" /> object that specifies how client JavaScript is generated to initiate a postback event.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterForEventValidation(System.String)"><summary>
            Registers an event reference for validation with a unique control ID representing the client control generating the event.
            </summary><param name="uniqueId">A unique ID representing the client control generating the event.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterForEventValidation(System.String,System.String)"><summary>
            Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.
            </summary><param name="uniqueId">A unique ID representing the client control generating the event.
            </param><param name="argument">Event arguments passed with the client event.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.ValidateEvent(System.String)"><summary>
            Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> method.
            </summary><param name="uniqueId">A unique ID representing the client control generating the event.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.ValidateEvent(System.String,System.String)"><summary>
            Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> method.
            </summary><param name="uniqueId">A unique ID representing the client control generating the event.
            </param><param name="argument">Event arguments passed with the client event.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.GetCallbackEventReference(Remotion.Web.UI.Controls.IControl,System.String,System.String,System.String)"><summary>
            Obtains a reference to a client function that, when invoked, initiates a client call back to a server event. The client function for this overloaded method includes a specified control, argument, client script, and context.
            </summary><param name="control">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback. The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method. 
            </param><param name="argument">An argument passed from the client script to the server 
            <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />  method. 
            </param><param name="clientCallback">The name of the client event handler that receives the result of the successful server event. 
            </param><param name="context">Client script that is evaluated on the client prior to initiating the callback. The result of the script is passed back to the client event handler. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.GetCallbackEventReference(Remotion.Web.UI.Controls.IControl,System.String,System.String,System.String,System.Boolean)"><summary>
            Obtains a reference to a client function that, when invoked, initiates a client call back to server events. The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.
            </summary><param name="control">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback. The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method. 
            </param><param name="argument">An argument passed from the client script to the server 
            <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />  method. 
            </param><param name="clientCallback">The name of the client event handler that receives the result of the successful server event. 
            </param><param name="context">Client script that is evaluated on the client prior to initiating the callback. The result of the script is passed back to the client event handler. 
            </param><param name="useAsync">true to perform the callback asynchronously; false to perform the callback synchronously.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.GetCallbackEventReference(Remotion.Web.UI.Controls.IControl,System.String,System.String,System.String,System.String,System.Boolean)"><summary>
            Obtains a reference to a client function that, when invoked, initiates a client call back to server events. The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.
            </summary><param name="control">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback. The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method. 
            </param><param name="argument">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />  method. 
            </param><param name="clientCallback">The name of the client event handler that receives the result of the successful server event. 
            </param><param name="context">Client script that is evaluated on the client prior to initiating the callback. The result of the script is passed back to the client event handler. 
            </param><param name="clientErrorCallback">The name of the client event handler that receives the result when an error occurs in the server event handler. 
            </param><param name="useAsync">true to perform the callback asynchronously; false to perform the callback synchronously. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)"><summary>
            Obtains a reference to a client function that, when invoked, initiates a client call back to server events. The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.
            </summary><param name="target">The name of a server <see cref="T:System.Web.UI.Control" /> that handles the client callback. The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.
            </param><param name="argument">An argument passed from the client script to the server 
            <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />  method. 
            </param><param name="clientCallback">The name of the client event handler that receives the result of the successful server event. 
            </param><param name="context">Client script that is evaluated on the client prior to initiating the callback. The result of the script is passed back to the client event handler.
            </param><param name="clientErrorCallback">The name of the client event handler that receives the result when an error occurs in the server event handler. 
            </param><param name="useAsync">true to perform the callback asynchronously; false to perform the callback synchronously.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.GetPostBackClientHyperlink(Remotion.Web.UI.Controls.IControl,System.String)"><summary>
            Gets a reference, with javascript: appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.
            </summary><param name="control">The server control to process the postback .
            </param><param name="argument">The parameter passed to the server control. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.GetPostBackClientHyperlink(Remotion.Web.UI.Controls.IControl,System.String,System.Boolean)"><summary>
            Gets a reference, with javascript: appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.
            </summary><param name="control">The server control to process the postback
            </param><param name="argument">The parameter passed to the server control.
            </param><param name="registerForEventValidation">true to register the post back event for validation; false to not register the post back event for validation.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.GetPostBackEventReference(Remotion.Web.UI.Controls.IControl,System.String)"><summary>
            Returns a string that can be used in a client event to cause postback to the server. The reference string is defined by the specified control that handles the postback and a string argument of additional event information.
            </summary><param name="control">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.
            </param><param name="argument">A string of optional arguments to pass to the control that processes the postback.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.GetPostBackEventReference(Remotion.Web.UI.Controls.IControl,System.String,System.Boolean)"><summary>
            Returns a string to use in a client event to cause postback to the server. The reference string is defined by the specified control that handles the postback and a string argument of additional event information. Optionally, registers the event reference for validation.
            </summary><param name="control">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.
            </param><param name="argument">A string of optional arguments to pass to <paramref name="control" />.
            </param><param name="registerForEventValidation">true to register the event reference for validation; otherwise, false.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)"><summary>
            Returns a string that can be used in a client event to cause postback to the server. The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> instance.
            </summary><param name="options">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)"><summary>
            Returns a string that can be used in a client event to cause postback to the server. The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> object. Optionally, registers the event reference for validation.
            </summary><param name="options">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.
            </param><param name="registerForEventValidation">true to register the event reference for validation; otherwise, false.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.GetWebResourceUrl(System.Type,System.String)"><summary>
            Gets a URL reference to a resource in an assembly.
            </summary><param name="type">The type of the resource. 
            </param><param name="resourceName">The fully qualified name of the resource in the assembly. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.IsClientScriptBlockRegistered(System.String)"><summary>
            Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key. 
            </summary><param name="key">The key of the client script block to search for.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)"><summary>
            Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.
            </summary><param name="type">The type of the client script block to search for.  
            </param><param name="key">The key of the client script block to search for. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.IsClientScriptIncludeRegistered(System.String)"><summary>
            Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key. 
            </summary><param name="key">The key of the client script include to search for. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)"><summary>
            Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.
            </summary><param name="type">The type of the client script include to search for. 
            </param><param name="key">The key of the client script include to search for. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.IsStartupScriptRegistered(System.String)"><summary>
            Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.
            </summary><param name="key">The key of the startup script to search for.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)"><summary>
            Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.
            </summary><param name="type">The type of the startup script to search for. 
            </param><param name="key">The key of the startup script to search for.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.IsOnSubmitStatementRegistered(System.String)"><summary>
            Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key. 
            </summary><param name="key">The key of the OnSubmit statement to search for.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)"><summary>
            Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.
            </summary><param name="type">The type of the OnSubmit statement to search for. 
            </param><param name="key">The key of the OnSubmit statement to search for. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterArrayDeclaration(System.String,System.String)"><summary>
            Registers a JavaScript array declaration with the <see cref="T:System.Web.UI.Page" /> object using an array name and array value.
            </summary><param name="arrayName">The array name to register.
            </param><param name="arrayValue">The array value or values to register.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)"><summary>
            Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.
            </summary><param name="controlId">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute. 
            </param><param name="attributeName">The name of the custom attribute to register. 
            </param><param name="attributeValue">The value of the custom attribute. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)"><summary>
            Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.
            </summary><param name="controlId">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.
            </param><param name="attributeName">The name of the custom attribute to register.
            </param><param name="attributeValue">The value of the custom attribute.
            </param><param name="encode">A Boolean value indicating whether to encode the custom attribute to register.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterExpandoAttribute(Remotion.Web.UI.Controls.IControl,System.String,System.String,System.String,System.Boolean)"><summary>
            Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.
            </summary><param name="registratorControl">The control registering the attribute.</param><param name="controlId">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.
            </param><param name="attributeName">The name of the custom attribute to register.
            </param><param name="attributeValue">The value of the custom attribute.
            </param><param name="encode">A Boolean value indicating whether to encode the custom attribute to register.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterHiddenField(System.String,System.String)"><summary>
            Registers a hidden value with the <see cref="T:System.Web.UI.Page" /> object.
            </summary><param name="hiddenFieldName">The name of the hidden field to register.
            </param><param name="hiddenFieldInitialValue">The initial value of the field to register.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterHiddenField(Remotion.Web.UI.Controls.IControl,System.String,System.String)"><summary>
            Registers a hidden field with the <see cref="T:System.Web.UI.ScriptManager" /> control for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control.
            </summary><param name="control">The control that is registering the hidden field.</param><param name="hiddenFieldName">The name of the hidden field to register.
            </param><param name="hiddenFieldInitialValue">The initial value of the field to register.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)"><summary>
            Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, and script literal.
            </summary><param name="type">The type of the client script to register. 
            </param><param name="key">The key of the client script to register. 
            </param><param name="script">The client script literal to register. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)"><summary>
            Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, script literal, and Boolean value indicating whether to add script tags.
            </summary><param name="type">The type of the client script to register. 
            </param><param name="key">The key of the client script to register. 
            </param><param name="script">The client script literal to register.  
            </param><param name="addScriptTags">A Boolean value indicating whether to add script tags.
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterClientScriptBlock(Remotion.Web.UI.Controls.IControl,System.Type,System.String,System.String)"><summary>
              Used to register a client script script to be rendered  at the beginning of the HTML page.
              The script is automatically surrounded by &lt;script&gt; tags.
            </summary><param name="control"> 
              The <see cref="T:System.Web.UI.Control" /> which the script file will be registered. Must not be <see langword="null" />.
            </param><param name="type">
              The type of the client script block. This parameter is usually specified by using the typeof operator (C#) or the 
              GetType operator (Visual Basic) to retrieve the type of the control that is registering the script. 
            </param><param name="key"> 
              The key identifying the registered script file. Must not be <see langword="null" /> or empty.
            </param><param name="script"> 
              The client script that will be registered. Must not be <see langword="null" /> or empty. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterClientScriptInclude(System.String,System.String)"><summary>
            Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a key and a URL.
            </summary><param name="key">The key of the client script include to register. 
            </param><param name="url">The URL of the client script include to register. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)"><summary>
            Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a URL.
            </summary><param name="type">The type of the client script include to register. 
            </param><param name="key">The key of the client script include to register. 
            </param><param name="url">The URL of the client script include to register. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterClientScriptInclude(Remotion.Web.UI.Controls.IControl,System.Type,System.String,System.String)"><summary>
            Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a URL.
            </summary><param name="control">The control that is registering the client script block.</param><param name="type">The type of the client script include to register.</param><param name="key">The key of the client script include to register.</param><param name="url">The URL of the client script include to register.</param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterClientScriptResource(System.Type,System.String)"><summary>
            Registers the client script resource with the <see cref="T:System.Web.UI.Page" /> object using a type and a resource name.
            </summary><param name="type">The type of the client script resource to register. 
            </param><param name="resourceName">The name of the client script resource to register. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterClientScriptResource(Remotion.Web.UI.Controls.IControl,System.Type,System.String)"><summary>
            Registers the client script resource with the <see cref="T:System.Web.UI.Page" /> object using a type and a resource name.
            </summary><param name="control">The control that is registering the client script block.</param><param name="type">The type of the client script resource to register.</param><param name="resourceName">The name of the client script resource to register.</param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)"><summary>
            Registers an OnSubmit statement with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal. The statement executes when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is submitted.
            </summary><param name="type">The type of the OnSubmit statement to register. 
            </param><param name="key">The key of the OnSubmit statement to register. 
            </param><param name="script">The script literal of the OnSubmit statement to register. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterOnSubmitStatement(Remotion.Web.UI.Controls.IControl,System.Type,System.String,System.String)"><summary>
            Registers an OnSubmit statement with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal. The statement executes when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is submitted.
            </summary><param name="control">The control that is registering the client script block.</param><param name="type">The type of the OnSubmit statement to register.</param><param name="key">The key of the OnSubmit statement to register.</param><param name="script">The script literal of the OnSubmit statement to register.</param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)"><summary>
            Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.
            </summary><param name="type">The type of the startup script to register. 
            </param><param name="key">The key of the startup script to register. 
            </param><param name="script">The startup script literal to register. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)"><summary>
            Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.
            </summary><param name="type">The type of the startup script to register. 
            </param><param name="key">The key of the startup script to register. 
            </param><param name="script">The startup script literal to register. 
            </param><param name="addScriptTags">A Boolean value indicating whether to add script tags. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IClientScriptManager.RegisterStartupScriptBlock(Remotion.Web.UI.Controls.IControl,System.Type,System.String,System.String)"><summary>
            Registers a startup script block for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> by using the <see cref="T:System.Web.UI.ScriptManager" /> control, 
            and adds the script block to the page. 
            </summary><param name="control">The control that is registering the client script block.</param><param name="type">The type of the client script block. This parameter is usually specified by using the typeof operator (C#) 
            or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script. </param><param name="key">The key of the startup script to register.</param><param name="script">The startup script literal to register.</param></member><member name="P:Remotion.Web.Infrastructure.IClientScriptManager.WrappedInstance"><summary>
            Gets the concrete instance wrapped by this <see cref="T:System.Web.UI.ClientScriptManager" /> wrapper.
            </summary></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.RegisterForEventValidation(System.Web.UI.PostBackOptions)"><summary>
            Registers an event reference for validation with <see cref="T:System.Web.UI.PostBackOptions" />.
            </summary><param name="options">A <see cref="T:System.Web.UI.PostBackOptions" /> object that specifies how client JavaScript is generated to initiate a postback event.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.RegisterForEventValidation(System.String)"><summary>
            Registers an event reference for validation with a unique control ID representing the client control generating the event.
            </summary><param name="uniqueId">A unique ID representing the client control generating the event.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.RegisterForEventValidation(System.String,System.String)"><summary>
            Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.
            </summary><param name="uniqueId">A unique ID representing the client control generating the event.
            </param><param name="argument">Event arguments passed with the client event.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.ValidateEvent(System.String)"><summary>
            Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> method.
            </summary><param name="uniqueId">A unique ID representing the client control generating the event.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.ValidateEvent(System.String,System.String)"><summary>
            Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> method.
            </summary><param name="uniqueId">A unique ID representing the client control generating the event.
            </param><param name="argument">Event arguments passed with the client event.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.GetCallbackEventReference(Remotion.Web.UI.Controls.IControl,System.String,System.String,System.String)"><summary>
            Obtains a reference to a client function that, when invoked, initiates a client call back to a server event. The client function for this overloaded method includes a specified control, argument, client script, and context.
            </summary><param name="control">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback. The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method. 
            </param><param name="argument">An argument passed from the client script to the server 
            <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />  method. 
            </param><param name="clientCallback">The name of the client event handler that receives the result of the successful server event. 
            </param><param name="context">Client script that is evaluated on the client prior to initiating the callback. The result of the script is passed back to the client event handler. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.GetCallbackEventReference(Remotion.Web.UI.Controls.IControl,System.String,System.String,System.String,System.Boolean)"><summary>
            Obtains a reference to a client function that, when invoked, initiates a client call back to server events. The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.
            </summary><param name="control">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback. The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method. 
            </param><param name="argument">An argument passed from the client script to the server 
            <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />  method. 
            </param><param name="clientCallback">The name of the client event handler that receives the result of the successful server event. 
            </param><param name="context">Client script that is evaluated on the client prior to initiating the callback. The result of the script is passed back to the client event handler. 
            </param><param name="useAsync">true to perform the callback asynchronously; false to perform the callback synchronously.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.GetCallbackEventReference(Remotion.Web.UI.Controls.IControl,System.String,System.String,System.String,System.String,System.Boolean)"><summary>
            Obtains a reference to a client function that, when invoked, initiates a client call back to server events. The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.
            </summary><param name="control">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback. The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method. 
            </param><param name="argument">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />  method. 
            </param><param name="clientCallback">The name of the client event handler that receives the result of the successful server event. 
            </param><param name="context">Client script that is evaluated on the client prior to initiating the callback. The result of the script is passed back to the client event handler. 
            </param><param name="clientErrorCallback">The name of the client event handler that receives the result when an error occurs in the server event handler. 
            </param><param name="useAsync">true to perform the callback asynchronously; false to perform the callback synchronously. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)"><summary>
            Obtains a reference to a client function that, when invoked, initiates a client call back to server events. The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.
            </summary><param name="target">The name of a server <see cref="T:System.Web.UI.Control" /> that handles the client callback. The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.
            </param><param name="argument">An argument passed from the client script to the server 
            <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />  method. 
            </param><param name="clientCallback">The name of the client event handler that receives the result of the successful server event. 
            </param><param name="context">Client script that is evaluated on the client prior to initiating the callback. The result of the script is passed back to the client event handler.
            </param><param name="clientErrorCallback">The name of the client event handler that receives the result when an error occurs in the server event handler. 
            </param><param name="useAsync">true to perform the callback asynchronously; false to perform the callback synchronously.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.GetPostBackClientHyperlink(Remotion.Web.UI.Controls.IControl,System.String)"><summary>
            Gets a reference, with javascript: appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.
            </summary><param name="control">The server control to process the postback .
            </param><param name="argument">The parameter passed to the server control. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.GetPostBackClientHyperlink(Remotion.Web.UI.Controls.IControl,System.String,System.Boolean)"><summary>
            Gets a reference, with javascript: appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.
            </summary><param name="control">The server control to process the postback
            </param><param name="argument">The parameter passed to the server control.
            </param><param name="registerForEventValidation">true to register the post back event for validation; false to not register the post back event for validation.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.GetPostBackEventReference(Remotion.Web.UI.Controls.IControl,System.String)"><summary>
            Returns a string that can be used in a client event to cause postback to the server. The reference string is defined by the specified control that handles the postback and a string argument of additional event information.
            </summary><param name="control">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.
            </param><param name="argument">A string of optional arguments to pass to the control that processes the postback.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.GetPostBackEventReference(Remotion.Web.UI.Controls.IControl,System.String,System.Boolean)"><summary>
            Returns a string to use in a client event to cause postback to the server. The reference string is defined by the specified control that handles the postback and a string argument of additional event information. Optionally, registers the event reference for validation.
            </summary><param name="control">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.
            </param><param name="argument">A string of optional arguments to pass to <paramref name="control" />.
            </param><param name="registerForEventValidation">true to register the event reference for validation; otherwise, false.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.GetPostBackEventReference(System.Web.UI.PostBackOptions)"><summary>
            Returns a string that can be used in a client event to cause postback to the server. The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> instance.
            </summary><param name="options">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)"><summary>
            Returns a string that can be used in a client event to cause postback to the server. The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> object. Optionally, registers the event reference for validation.
            </summary><param name="options">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.
            </param><param name="registerForEventValidation">true to register the event reference for validation; otherwise, false.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.GetWebResourceUrl(System.Type,System.String)"><summary>
            Gets a URL reference to a resource in an assembly.
            </summary><param name="type">The type of the resource. 
            </param><param name="resourceName">The fully qualified name of the resource in the assembly. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.IsClientScriptBlockRegistered(System.String)"><summary>
            Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key. 
            </summary><param name="key">The key of the client script block to search for.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.IsClientScriptBlockRegistered(System.Type,System.String)"><summary>
            Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.
            </summary><param name="type">The type of the client script block to search for.  
            </param><param name="key">The key of the client script block to search for. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.IsClientScriptIncludeRegistered(System.String)"><summary>
            Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key. 
            </summary><param name="key">The key of the client script include to search for. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.IsClientScriptIncludeRegistered(System.Type,System.String)"><summary>
            Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.
            </summary><param name="type">The type of the client script include to search for. 
            </param><param name="key">The key of the client script include to search for. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.IsStartupScriptRegistered(System.String)"><summary>
            Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.
            </summary><param name="key">The key of the startup script to search for.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.IsStartupScriptRegistered(System.Type,System.String)"><summary>
            Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.
            </summary><param name="type">The type of the startup script to search for. 
            </param><param name="key">The key of the startup script to search for.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.IsOnSubmitStatementRegistered(System.String)"><summary>
            Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key. 
            </summary><param name="key">The key of the OnSubmit statement to search for.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.IsOnSubmitStatementRegistered(System.Type,System.String)"><summary>
            Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.
            </summary><param name="type">The type of the OnSubmit statement to search for. 
            </param><param name="key">The key of the OnSubmit statement to search for. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.RegisterArrayDeclaration(System.String,System.String)"><summary>
            Registers a JavaScript array declaration with the <see cref="T:System.Web.UI.Page" /> object using an array name and array value.
            </summary><param name="arrayName">The array name to register.
            </param><param name="arrayValue">The array value or values to register.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.RegisterExpandoAttribute(System.String,System.String,System.String)"><summary>
            Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.
            </summary><param name="controlId">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute. 
            </param><param name="attributeName">The name of the custom attribute to register. 
            </param><param name="attributeValue">The value of the custom attribute. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)"><summary>
            Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.
            </summary><param name="controlId">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.
            </param><param name="attributeName">The name of the custom attribute to register.
            </param><param name="attributeValue">The value of the custom attribute.
            </param><param name="encode">A Boolean value indicating whether to encode the custom attribute to register.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.RegisterExpandoAttribute(Remotion.Web.UI.Controls.IControl,System.String,System.String,System.String,System.Boolean)"><summary>
            Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.
            </summary><param name="registratorControl">The control registering the attribute.</param><param name="controlId">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.
            </param><param name="attributeName">The name of the custom attribute to register.
            </param><param name="attributeValue">The value of the custom attribute.
            </param><param name="encode">A Boolean value indicating whether to encode the custom attribute to register.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.RegisterHiddenField(System.String,System.String)"><summary>
            Registers a hidden value with the <see cref="T:System.Web.UI.Page" /> object.
            </summary><param name="hiddenFieldName">The name of the hidden field to register.
            </param><param name="hiddenFieldInitialValue">The initial value of the field to register.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.RegisterHiddenField(Remotion.Web.UI.Controls.IControl,System.String,System.String)"><summary>
            Registers a hidden field with the <see cref="T:System.Web.UI.ScriptManager" /> control for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control.
            </summary><param name="control">The control that is registering the hidden field.</param><param name="hiddenFieldName">The name of the hidden field to register.
            </param><param name="hiddenFieldInitialValue">The initial value of the field to register.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.RegisterClientScriptBlock(System.Type,System.String,System.String)"><summary>
            Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, and script literal.
            </summary><param name="type">The type of the client script to register. 
            </param><param name="key">The key of the client script to register. 
            </param><param name="script">The client script literal to register. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)"><summary>
            Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, script literal, and Boolean value indicating whether to add script tags.
            </summary><param name="type">The type of the client script to register. 
            </param><param name="key">The key of the client script to register. 
            </param><param name="script">The client script literal to register.  
            </param><param name="addScriptTags">A Boolean value indicating whether to add script tags.
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.RegisterClientScriptBlock(Remotion.Web.UI.Controls.IControl,System.Type,System.String,System.String)"><summary>
              Used to register a client script script to be rendered  at the beginning of the HTML page.
              The script is automatically surrounded by &lt;script&gt; tags.
            </summary><param name="control"> 
              The <see cref="T:System.Web.UI.Control" /> which the script file will be registered. Must not be <see langword="null" />.
            </param><param name="type">
              The type of the client script block. This parameter is usually specified by using the typeof operator (C#) or the 
              GetType operator (Visual Basic) to retrieve the type of the control that is registering the script. 
            </param><param name="key"> 
              The key identifying the registered script file. Must not be <see langword="null" /> or empty.
            </param><param name="script"> 
              The client script that will be registered. Must not be <see langword="null" /> or empty. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.RegisterClientScriptInclude(System.String,System.String)"><summary>
            Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a key and a URL.
            </summary><param name="key">The key of the client script include to register. 
            </param><param name="url">The URL of the client script include to register. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.RegisterClientScriptInclude(System.Type,System.String,System.String)"><summary>
            Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a URL.
            </summary><param name="type">The type of the client script include to register. 
            </param><param name="key">The key of the client script include to register. 
            </param><param name="url">The URL of the client script include to register. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.RegisterClientScriptResource(System.Type,System.String)"><summary>
            Registers the client script resource with the <see cref="T:System.Web.UI.Page" /> object using a type and a resource name.
            </summary><param name="type">The type of the client script resource to register. 
            </param><param name="resourceName">The name of the client script resource to register. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.RegisterOnSubmitStatement(System.Type,System.String,System.String)"><summary>
            Registers an OnSubmit statement with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal. The statement executes when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is submitted.
            </summary><param name="type">The type of the OnSubmit statement to register. 
            </param><param name="key">The key of the OnSubmit statement to register. 
            </param><param name="script">The script literal of the OnSubmit statement to register. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.RegisterStartupScript(System.Type,System.String,System.String)"><summary>
            Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.
            </summary><param name="type">The type of the startup script to register. 
            </param><param name="key">The key of the startup script to register. 
            </param><param name="script">The startup script literal to register. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)"><summary>
            Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.
            </summary><param name="type">The type of the startup script to register. 
            </param><param name="key">The key of the startup script to register. 
            </param><param name="script">The startup script literal to register. 
            </param><param name="addScriptTags">A Boolean value indicating whether to add script tags. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.RegisterStartupScriptBlock(Remotion.Web.UI.Controls.IControl,System.Type,System.String,System.String)"><summary>
            Registers a startup script block for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> by using the <see cref="T:System.Web.UI.ScriptManager" /> control, 
            and adds the script block to the page. 
            </summary><param name="control">The control that is registering the client script block.</param><param name="type">The type of the client script block. This parameter is usually specified by using the typeof operator (C#) 
            or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script. </param><param name="key">The key of the startup script to register.</param><param name="script">The startup script literal to register.</param></member><member name="P:Remotion.Web.Infrastructure.ClientScriptManagerWrapper.WrappedInstance"><summary>
            Gets the concrete instance wrapped by this <see cref="T:System.Web.UI.ClientScriptManager" /> wrapper.
            </summary></member><member name="T:Remotion.Web.Infrastructure.ControlWrapper"><summary>
            The <see cref="T:Remotion.Web.Infrastructure.ControlWrapper" /> type is the default implementation of the <see cref="T:Remotion.Web.UI.Controls.IControl" /> interface.
            </summary></member><member name="M:Remotion.Web.Infrastructure.ControlWrapper.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)"><summary>
            When implemented by an ASP.NET server control, notifies the server control that an element, either XML or HTML, was parsed.
            </summary><param name="obj">The <see cref="T:System.Object" /> that was parsed. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ControlWrapper.System#Web#UI#IControlDesignerAccessor#GetDesignModeState"><summary>
            When implemented, gets the state from the control during use on the design surface.
            </summary></member><member name="M:Remotion.Web.Infrastructure.ControlWrapper.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)"><summary>
            When implemented, sets control state before rendering it on the design surface.
            </summary><param name="data">The <see cref="T:System.Collections.IDictionary" /> containing the control state.
            </param></member><member name="M:Remotion.Web.Infrastructure.ControlWrapper.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)"><summary>
            When implemented, specifies the control that acts as the owner to the control implementing this method.
            </summary><param name="owner">The control to act as owner.
            </param></member><member name="M:Remotion.Web.Infrastructure.ControlWrapper.ApplyStyleSheetSkin(System.Web.UI.Page)"><summary>
            Applies the style properties defined in the page style sheet to the control.
            </summary><param name="page">The <see cref="T:System.Web.UI.Page" /> containing the control.
            </param></member><member name="M:Remotion.Web.Infrastructure.ControlWrapper.DataBind"><summary>
            Binds a data source to the invoked server control and all its child controls.
            </summary></member><member name="M:Remotion.Web.Infrastructure.ControlWrapper.Focus"><summary>
            Sets input focus to a control.
            </summary></member><member name="M:Remotion.Web.Infrastructure.ControlWrapper.RenderControl(System.Web.UI.HtmlTextWriter)"><summary>
            Outputs server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter" /> object and stores tracing information about the control if tracing is enabled.
            </summary><param name="writer">The <see cref="T:System.Web.UI.HTmlTextWriter" /> object that receives the control content. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ControlWrapper.Dispose"><summary>
            Enables a server control to perform final clean up before it is released from memory.
            </summary></member><member name="M:Remotion.Web.Infrastructure.ControlWrapper.ResolveUrl(System.String)"><summary>
            Converts a URL into one that is usable on the requesting client.
            </summary><param name="relativeUrl">The URL associated with the <see cref="P:System.Web.UI.Control.TemplateSourceDirectory" /> property. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ControlWrapper.ResolveClientUrl(System.String)"><summary>
            Gets a URL that can be used by the browser.
            </summary><param name="relativeUrl">A URL relative to the current page.
            </param></member><member name="M:Remotion.Web.Infrastructure.ControlWrapper.FindControl(System.String)"><summary>
            Searches the current naming container for a server control with the specified <paramref name="id" /> parameter.
            </summary><param name="id">The identifier for the control to be found. 
            </param></member><member name="M:Remotion.Web.Infrastructure.ControlWrapper.HasControls"><summary>
            Determines if the server control contains any child controls.
            </summary></member><member name="M:Remotion.Web.Infrastructure.ControlWrapper.SetRenderMethodDelegate(System.Web.UI.RenderMethod)"><summary>
            Assigns an event handler delegate to render the server control and its content into its parent control.
            </summary><param name="renderMethod">The information necessary to pass to the delegate so that it can render the server control. 
            </param></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.WrappedInstance"><summary>
            Gets the concrete instance wrapped by this <see cref="T:Remotion.Web.UI.Controls.IControl" /> wrapper.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.System#Web#UI#IDataBindingsAccessor#DataBindings"><summary>
            Gets a collection of all data bindings on the control. This property is read-only.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.System#Web#UI#IDataBindingsAccessor#HasDataBindings"><summary>
            Gets a value indicating whether the control contains any data-binding logic.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.System#Web#UI#IControlBuilderAccessor#ControlBuilder"><summary>
            Gets the control builder for this control.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.System#Web#UI#IControlDesignerAccessor#UserData"><summary>
            When implemented, gets a collection of information that can be accessed by a control designer.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.System#Web#UI#IExpressionsAccessor#HasExpressions"><summary>
            Gets a value indicating whether the instance of the class that implements this interface has any properties bound by an expression.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.System#Web#UI#IExpressionsAccessor#Expressions"><summary>
            Gets a collection of <see cref="T:System.Web.UI.ExpressionBinding" /> objects.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.ClientID"><summary>
            Gets the server control identifier generated by ASP.NET.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.ID"><summary>
            Gets or sets the programmatic identifier assigned to the server control.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.EnableTheming"><summary>
            Gets or sets a value indicating whether themes apply to this control.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.SkinID"><summary>
            Gets or sets the skin to apply to the control.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.EnableViewState"><summary>
            Gets or sets a value indicating whether the server control persists its view state, and the view state of any child controls it contains, to the requesting client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.NamingContainer"><summary>
            Gets a reference to the server control's naming container, which creates a unique namespace for differentiating between server controls with the same <see cref="P:System.Web.UI.Control.ID" /> property value.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.BindingContainer"><summary>
            Gets the control that contains this control's data binding.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.Page"><summary>
            Gets a reference to the <see cref="T:System.Web.UI.Page" /> instance that contains the server control.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.TemplateControl"><summary>
            Gets or sets a reference to the template that contains this control. 
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.Parent"><summary>
            Gets a reference to the server control's parent control in the page control hierarchy.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.TemplateSourceDirectory"><summary>
            Gets the virtual directory of the <see cref="T:System.Web.UI.Page" /> or <see cref="T:System.Web.UI.UserControl" /> that contains the current server control.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.AppRelativeTemplateSourceDirectory"><summary>
            Gets or sets the application-relative virtual directory of the <see cref="T:System.Web.UI.Page" /> or <see cref="T:System.Web.UI.UserControl" /> object that contains this control.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.Site"><summary>
            Gets information about the container that hosts the current control when rendered on a design surface.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.Visible"><summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.UniqueID"><summary>
            Gets the unique, hierarchically qualified identifier for the server control.
            </summary></member><member name="P:Remotion.Web.Infrastructure.ControlWrapper.Controls"><summary>
            Gets a <see cref="T:System.Web.UI.ControlCollection" /> object that represents the child controls for a specified server control in the UI hierarchy.
            </summary></member><member name="T:Remotion.Web.Infrastructure.IThemedResourceUrlResolver"><summary>
            Defines a method for resolving resource urls for the current <see cref="T:Remotion.Web.ResourceTheme" />.
            The <see cref="T:Remotion.Web.Infrastructure.IThemedResourceUrlResolver" /> is only intended for use with controls located <b>Remotion.Web</b> that do not have their own renderers.
            </summary></member><member name="T:Remotion.Web.Infrastructure.PageWrapper"><summary>
            The <see cref="T:Remotion.Web.Infrastructure.PageWrapper" /> type is the default implementation of the <see cref="T:Remotion.Web.UI.IPage" /> interface.
            </summary></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.AddParsedSubObject(System.Object)"><summary>
            When implemented by an ASP.NET server control, notifies the server control that an element, either XML or HTML, was parsed.
            </summary><param name="obj">The <see cref="T:System.Object" /> that was parsed. 
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.GetDesignModeState"><summary>
            When implemented, gets the state from the control during use on the design surface.
            </summary></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.SetDesignModeState(System.Collections.IDictionary)"><summary>
            When implemented, sets control state before rendering it on the design surface.
            </summary><param name="data">The <see cref="T:System.Collections.IDictionary" /> containing the control state.
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.SetOwnerControl(System.Web.UI.Control)"><summary>
            When implemented, specifies the control that acts as the owner to the control implementing this method.
            </summary><param name="owner">The control to act as owner.
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)"><summary>
            Returns a value indicating whether the specified filter is a type of the current filter object.
            </summary><param name="filterName">The name of a device filter.
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)"><summary>
            Returns a value indicating whether a parent-child relationship exists between two specified device filters. 
            </summary><param name="filter1">A device filter name.
            </param><param name="filter2">A device filter name
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.ReadStringResource"><summary>
            Reads a string resource. The <see cref="M:System.Web.UI.TemplateControl.ReadStringResource" /> 
            method is not intended for use from within your code.
            </summary></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.TestDeviceFilter(System.String)"><summary>
            Returns a Boolean value indicating whether a device filter applies to the HTTP request.
            </summary><param name="filterName">The browser name to test. 
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.LoadControl(System.String)"><summary>
            Loads a <see cref="T:System.Web.UI.Control" /> object from a file based on a specified virtual path.
            </summary><param name="virtualPath">The virtual path to a control file. 
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.LoadControl(System.Type,System.Object[])"><summary>
            Loads a <see cref="T:System.Web.UI.Control" /> object based on a specified type and constructor parameters.
            </summary><param name="t">The type of the control.
            </param><param name="parameters">An array of arguments that match in number, order, and type the parameters of the constructor to invoke. 
            If <paramref name="parameters" /> is an empty array or null, the constructor that takes no parameters (the default constructor) is invoked.
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.LoadTemplate(System.String)"><summary>
            Obtains an instance of the <see cref="T:System.Web.UI.ITemplate" /> interface from an external file.
            </summary><param name="virtualPath">The virtual path to a user control file. 
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.ParseControl(System.String)"><summary>
            Parses an input string into a <see cref="T:System.Web.UI.Control" /> object on the Web Forms page or user control.
            </summary><param name="content">A string that contains a user control. 
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.ParseControl(System.String,System.Boolean)"><summary>
            Parses an input string into a <see cref="T:System.Web.UI.Control" /> object on the ASP.NET Web page or user control.
            </summary><param name="content">A string that contains a user control.
            </param><param name="ignoreParserFilter">A value that specifies whether to ignore the parser filter.
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.GetTypeHashCode"><summary>
            Retrieves a hash code that is generated by <see cref="T:System.Web.UI.Page" /> objects that are generated at run time. 
            This hash code is unique to the <see cref="T:System.Web.UI.Page" /> object's control hierarchy.
            </summary></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.DesignerInitialize"><summary>
            Performs any initialization of the instance of the <see cref="T:System.Web.UI.Page" /> class that is required by RAD designers. 
            This method is used only at design time.
            </summary></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.SetFocus(System.Web.UI.Control)"><summary>
            Sets the browser focus to the specified control. 
            </summary><param name="control">The control to receive focus.
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.SetFocus(System.String)"><summary>
            Sets the browser focus to the control with the specified identifier. 
            </summary><param name="clientID">The ID of the control to set focus to.
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.RegisterRequiresControlState(System.Web.UI.Control)"><summary>
            Registers a control as one whose control state must be persisted.
            </summary><param name="control">The control to register.
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.RequiresControlState(System.Web.UI.Control)"><summary>
            Determines whether the specified <see cref="T:System.Web.UI.Control" /> object is registered to participate in control state management.
            </summary><param name="control">The <see cref="T:System.Web.UI.Control" /> to check for a control state requirement.
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.UnregisterRequiresControlState(System.Web.UI.Control)"><summary>
            Stops persistence of control state for the specified control.
            </summary><param name="control">The <see cref="T:System.Web.UI.Control" /> for which to stop persistence of control state.
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.RegisterRequiresPostBack(System.Web.UI.Control)"><summary>
            Registers a control as one that requires postback handling when the page is posted back to the server. 
            </summary><param name="control">The control to be registered. 
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)"><summary>
            Registers an ASP.NET server control as one requiring an event to be raised when the control is processed on the 
            <see cref="T:System.Web.UI.Page" /> object.
            </summary><param name="control">The control to register. 
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.MapPath(System.String)"><summary>
            Retrieves the physical path that a virtual path, either absolute or relative, or an application-relative path maps to.
            </summary><param name="virtualPath">A <see cref="T:System.String" /> that represents the virtual path. 
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.RegisterRequiresViewStateEncryption"><summary>
            Registers a control with the page as one requiring view-state encryption. 
            </summary></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.ProcessRequest(System.Web.HttpContext)"><summary>
            Sets the intrinsics of the <see cref="T:System.Web.UI.Page" />, such as the <see cref="P:System.Web.UI.Page.Context" />, 
            <see cref="P:System.Web.UI.Page.Request" />, <see cref="P:System.Web.UI.Page.Response" />, 
            and <see cref="P:System.Web.UI.Page.Application" /> properties.
            </summary><param name="context">An <see cref="T:System.Web.HttpContext" /> object that provides references to the intrinsic server objects 
            (for example, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, 
            and <see cref="P:System.Web.HttpContext.Session" />) used to service HTTP requests. 
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.RegisterViewStateHandler"><summary>
            Causes page view state to be persisted, if called.
            </summary></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.ExecuteRegisteredAsyncTasks"><summary>
            Starts the execution of an asynchronous task.
            </summary></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.RegisterAsyncTask(System.Web.UI.PageAsyncTask)"><summary>
            Registers a new asynchronous task with the page.
            </summary><param name="task">A <see cref="T:System.Web.UI.PageAsyncTask" /> that defines the asynchronous task.
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)"><summary>
            Registers beginning and ending event handler delegates that do not require state information for an asynchronous page.
            </summary><param name="beginHandler">The delegate for the <see cref="T:System.Web.BeginEventHandler" /> method.
            </param><param name="endHandler">The delegate for the <see cref="T:System.Web.EndEventHandler" /> method.
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)"><summary>
            Registers beginning and ending  event handler delegates for an asynchronous page.
            </summary><param name="beginHandler">The delegate for the <see cref="T:System.Web.BeginEventHandler" /> method.
            </param><param name="endHandler">The delegate for the <see cref="T:System.Web.EndEventHandler" /> method.
            </param><param name="state">An object containing state information for the event handlers.
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.Validate"><summary>
            Instructs any validation controls included on the page to validate their assigned information.
            </summary></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.Validate(System.String)"><summary>
            Instructs the validation controls in the specified validation group to validate their assigned information.
            </summary><param name="validationGroup">The validation group name of the controls to validate.
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.GetValidators(System.String)"><summary>
            Returns a collection of control validators for a specified validation group.
            </summary><param name="validationGroup">The validation group to return, or null to return the default validation group.
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.VerifyRenderingInServerForm(System.Web.UI.Control)"><summary>
            Confirms that an <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control is rendered for the specified ASP.NET server control at run time.
            </summary><param name="control">The ASP.NET server control that is required in the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control. 
            </param></member><member name="M:Remotion.Web.Infrastructure.PageWrapper.GetDataItem"><summary>
            Gets the data item at the top of the data-binding context stack.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.WrappedInstance"><summary>
            Gets the concrete instance wrapped by this <see cref="T:System.Web.UI.IControl" /> wrapper.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.HasDataBindings"><summary>
            Gets a value indicating whether the control contains any data-binding logic.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.ControlBuilder"><summary>
            Gets the control builder for this control.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.UserData"><summary>
            When implemented, gets a collection of information that can be accessed by a control designer.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.HasExpressions"><summary>
            Gets a value indicating whether the instance of the class that implements this interface has any properties bound by an expression.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.Expressions"><summary>
            Gets a collection of <see cref="T:System.Web.UI.ExpressionBinding" /> objects.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.Page"><summary>
            Gets a reference to the <see cref="T:System.Web.UI.Page" /> instance that contains the server control.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.AppRelativeVirtualPath"><summary>
            Gets or sets the application-relative, virtual directory path to the file from which the control is parsed and compiled. 
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.Application"><summary>
            Gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current Web request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.ClientScript"><summary>
            Gets a <see cref="T:Remotion.Web.Infrastructure.IClientScriptManager" /> object used to manage, register, and add script to the page.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.ClientTarget"><summary>
            Gets or sets a value that allows you to override automatic detection of browser capabilities 
            and to specify how a page is rendered for particular browser clients.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.ClientQueryString"><summary>
            Gets the query string portion of the requested URL.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.Context"><summary>
            Gets the <see cref="T:System.Web.HttpContext" /> object for the current Web request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.ErrorPage"><summary>
            Gets or sets the error page to which the requesting browser is redirected in the event of an unhandled page exception.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.IsCallback"><summary>
            Gets a value indicating whether the page request is the result of a call back.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.IsReusable"><summary>
            Gets a value indicating whether the <see cref="T:System.Web.UI.Page" /> object can be reused.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.AutoPostBackControl"><summary>
            Gets or sets the control of the page that is used to postback to the server.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.Header"><summary>
            Gets the document header for the page if the head element is defined with a runat=server in the page declaration.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.IdSeparator"><summary>
            Gets the character used to separate control identifiers when building a unique ID for a control on a page.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.MaintainScrollPositionOnPostBack"><summary>
            Gets or sets a value indicating whether to return the user to the same position in the client browser after postback. 
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.Master"><summary>
            Gets the master page that determines the overall look of the page.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.MasterPageFile"><summary>
            Gets or sets the file name of the master page.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.MaxPageStateFieldLength"><summary>
            Gets or sets the maximum length for the page's state field.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.Trace"><summary>
            Gets the <see cref="T:System.Web.TraceContext" /> object for the current Web request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.Request"><summary>
            Gets the <see cref="T:System.Web.HttpRequest" /> object for the requested page.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.Response"><summary>
            Gets the <see cref="T:System.Web.HttpResponse" /> object associated with the <see cref="T:System.Web.UI.Page" /> object. 
            This object allows you to send HTTP response data to a client and contains information about that response.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.Server"><summary>
            Gets the Server object, which is an instance of the <see cref="T:System.Web.HttpServerUtility" /> class.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.Cache"><summary>
            Gets the <see cref="T:System.Web.Caching.Cache" /> object associated with the application in which the page resides.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.Session"><summary>
            Gets the current Session object provided by ASP.NET.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.Title"><summary>
            Gets or sets the title for the page.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.Theme"><summary>
            Gets or sets the name of the page theme.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.StyleSheetTheme"><summary>
            Gets or sets the name of the style sheet applied to this page.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.User"><summary>
            Gets information about the user making the page request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.IsCrossPagePostBack"><summary>
            Gets a value indicating whether the page is involved in a cross-page postback.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.IsPostBack"><summary>
            Gets a value indicating whether the page is being loaded in response to a client postback, 
            or if it is being loaded and accessed for the first time.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.EnableEventValidation"><summary>
            Gets or sets a value indicating whether the page validates postback and callback events.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.ViewStateEncryptionMode"><summary>
            Gets or sets the encryption mode of the view state.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.ViewStateUserKey"><summary>
            Assigns an identifier to an individual user in the view-state variable associated with the current page.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.IsPostBackEventControlRegistered"><summary>
            Gets a value indicating whether the control of the page that submits a postback is registered.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.IsValid"><summary>
            Gets a value indicating whether page validation succeeded.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.Validators"><summary>
            Gets a collection of all validation controls contained on the requested page.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.PreviousPage"><summary>
            Gets the page that transferred control to the current page.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.Buffer"><summary>
            Sets a value indicating whether the page output is buffered.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.ContentType"><summary>
            Sets the HTTP MIME type for the <see cref="T:System.Web.HttpResponse" /> object associated with the page.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.CodePage"><summary>
            Sets the code page identifier for the current <see cref="T:System.Web.UI.Page" />.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.ResponseEncoding"><summary>
            Sets the encoding language for the current <see cref="T:System.Web.HttpResponse" /> object.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.Culture"><summary>
            Sets the culture ID for the <see cref="T:System.Threading.Thread" /> object associated with the page.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.LCID"><summary>
            Sets the locale identifier for the <see cref="T:System.Threading.Thread" /> object associated with the page.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.UICulture"><summary>
            Sets the user interface (UI) ID for the <see cref="T:System.Threading.Thread" /> object associated with the page.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.AsyncTimeout"><summary>
            Gets or sets a value indicating the time-out interval used when processing asynchronous tasks.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.TraceEnabled"><summary>
            Sets a value indicating whether tracing is enabled for the <see cref="T:System.Web.UI.Page" /> object.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.TraceModeValue"><summary>
            Sets the mode in which trace statements are displayed on the page.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.EnableViewStateMac"><summary>
            Gets or sets a value indicating whether ASP.NET should run a message authentication check (MAC) on the page's view state 
            when the page is posted back from the client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.IsAsync"><summary>
            Gets a value indicating whether the page is processed asynchronously.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.Form"><summary>
            Gets the HTML form for the page.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.PageAdapter"><summary>
            Gets the adapter that renders the page for the specific requesting browser.
            </summary></member><member name="P:Remotion.Web.Infrastructure.PageWrapper.Items"><summary>
            Gets a list of objects stored in the page context.
            </summary></member><member name="T:Remotion.Web.Infrastructure.ThemedResourceUrlResolver"><summary>
            Responsible for resolving resource urls for the current <see cref="T:Remotion.Web.ResourceTheme" />.
            The <see cref="T:Remotion.Web.Infrastructure.ThemedResourceUrlResolver" /> is only intended for use with controls located <b>Remotion.Web</b> that do not have their own renderers.
            </summary></member><member name="T:Remotion.Web.UI.Controls.ControlReplacing.StateClearingStrategy"><summary>
            The <see cref="T:Remotion.Web.UI.Controls.ControlReplacing.StateClearingStrategy" /> type is used when the state of a <see cref="T:Remotion.Web.UI.Controls.ControlReplacing.ControlReplacer" />'s control tree should be reset.
            </summary></member><member name="T:Remotion.Web.UI.Controls.ControlReplacing.StateLoadingStrategy"><summary>
            The <see cref="T:Remotion.Web.UI.Controls.ControlReplacing.StateLoadingStrategy" /> type is used when the state of a <see cref="T:Remotion.Web.UI.Controls.ControlReplacing.ControlReplacer" />'s control tree should be 
            loaded during a regular page-lifecycle, i.e. when the view state is to be loaded without modification
            </summary></member><member name="T:Remotion.Web.UI.Controls.ControlReplacing.StateReplacingStrategy"><summary>
            The <see cref="T:Remotion.Web.UI.Controls.ControlReplacing.StateReplacingStrategy" /> type is used when the state of a <see cref="T:Remotion.Web.UI.Controls.ControlReplacing.ControlReplacer" />'s control tree should be 
            restored to reflect a previously used state.
            </summary></member><member name="T:Remotion.Web.UI.Controls.DatePickerButtonImplementation.Rendering.DatePickerButtonRenderer"><summary>
            Responsible for rendering a <see cref="T:Remotion.Web.UI.Controls.DatePickerButton" /> control in standard mode.
            <seealso cref="T:Remotion.Web.UI.Controls.DatePickerButtonImplementation.IDatePickerButton" />
            </summary></member><member name="T:Remotion.Web.UI.Controls.RendererBase`1"><summary>
            Base class for all renderers. Contains the essential properties used in rendering.
            </summary></member><member name="M:Remotion.Web.UI.Controls.RendererBase`1.#ctor(Remotion.Web.IResourceUrlFactory)"><summary>
            Initializes the <see cref="N:Remotion.Web.Context" /> and the <see cref="T:System.Web.UI.Control" /> properties from the arguments.
            </summary></member><member name="P:Remotion.Web.UI.Controls.RendererBase`1.ResourceUrlFactory"><summary>
            Gets the <see cref="T:Remotion.Web.IResourceUrlFactory" /> that can be used for resolving resource urls.
            </summary></member><member name="T:Remotion.Web.UI.Controls.DatePickerButtonImplementation.Rendering.IDatePickerButtonRenderer"><summary>
            Defines the API for rendering a <see cref="T:Remotion.Web.UI.Controls.DatePickerButton" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.DatePickerButtonImplementation.Rendering.DatePickerButtonRenderer.Render(Remotion.Web.UI.Controls.DatePickerButtonImplementation.Rendering.DatePickerButtonRenderingContext)"><summary>
            Renders a click-enabled image that shows a <see cref="T:Remotion.Web.UI.Controls.DatePickerPage" /> on click, which puts the selected value
            into the control specified by <see cref="P:Control.TargetControlID" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.DatePickerButtonImplementation.Rendering.DatePickerButtonRenderingContext"><summary>
            Groups all arguments required for rendering a <see cref="T:Remotion.Web.UI.Controls.DatePickerButton" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.RenderingContext`1"><summary>
            Groups all arguments required for rendering a <see cref="T:Remotion.Web.UI.Controls.IStyledControl" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.DatePickerButtonImplementation.Rendering.IDatePickerPageRenderer"><summary>
            Defines the API for rendering a <see cref="T:Remotion.Web.UI.Controls.DatePickerPage" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.DatePickerButtonImplementation.IDatePickerButton"><summary>
            Exposes <see cref="T:Remotion.Web.UI.Controls.DatePickerButton" /> properties relevant to rendering.
            </summary></member><member name="T:Remotion.Web.UI.Controls.IStyledControl"><summary>
            Exposes WebControl properties for <see cref="T:Remotion.Web.UI.Controls.RendererBase`1" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.IStyledControl.CssClass"><summary>
            Interface exposure of <see cref="P:System.Web.UI.WebControls.WebControl.CssClass" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.IStyledControl.ControlStyle"><summary>
            Interface exposure of <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.IStyledControl.Attributes"><summary>
            Interface exposure of <see cref="P:System.Web.UI.WebControls.WebControl.Attributes" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.DropDownMenuImplementation.Rendering.DropDownMenuRenderer"><summary>
            Responsible for rendering <see cref="T:Remotion.Web.UI.Controls.DropDownMenu" /> controls in standard mode.
            <seealso cref="T:Remotion.Web.UI.Controls.DropDownMenuImplementation.IDropDownMenu" />
            </summary></member><member name="T:Remotion.Web.UI.Controls.DropDownMenuImplementation.Rendering.IDropDownMenuRenderer"><summary>
            Defines the API for rendering a <see cref="T:Remotion.Web.UI.Controls.DropDownMenuImplementation.Rendering.DropDownMenuRenderer" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.DropDownMenuImplementation.Rendering.DropDownMenuRenderingContext"><summary>
            Groups all arguments required for rendering a <see cref="T:Remotion.Web.UI.Controls.DropDownMenu" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.DropDownMenuImplementation.IDropDownMenu"><summary>
            Exposes <see cref="T:Remotion.Web.UI.Controls.DropDownMenu" /> properties relevant to rendering.
            </summary></member><member name="T:Remotion.Web.UI.Controls.ListMenuImplementation.Rendering.IListMenuRenderer"><summary>
            Defines the API for rendering a <see cref="T:Remotion.Web.UI.Controls.ListMenuImplementation.Rendering.ListMenuRenderer" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.ListMenuImplementation.Rendering.ListMenuRenderer"><summary>
            Responsible for rendering a <see cref="T:Remotion.Web.UI.Controls.ListMenu" /> control in standard mode.
            <seealso cref="T:Remotion.Web.UI.Controls.ListMenuImplementation.IListMenu" />
            </summary></member><member name="T:Remotion.Web.UI.Controls.ListMenuImplementation.Rendering.ListMenuRenderingContext"><summary>
            Groups all arguments required for rendering a <see cref="T:Remotion.Web.UI.Controls.ListMenu" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.ListMenuImplementation.IListMenu"><summary>
            Exposes <see cref="T:Remotion.Web.UI.Controls.ListMenu" /> properties relevant to rendering.
            </summary></member><member name="T:Remotion.Web.UI.Controls.SingleViewImplementation.Rendering.ISingleViewRenderer"><summary>
            Defines the API for rendering a <see cref="T:Remotion.Web.UI.Controls.SingleViewImplementation.Rendering.SingleViewRenderer" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.SingleViewImplementation.Rendering.SingleViewRenderer"><summary>
            Implements <see cref="T:Remotion.Web.UI.Controls.SingleViewImplementation.Rendering.ISingleViewRenderer" /> for standard mode rendering of <see cref="T:Remotion.Web.UI.Controls.SingleView" /> controls.
            <seealso cref="T:Remotion.Web.UI.Controls.SingleViewImplementation.ISingleView" />
            </summary></member><member name="P:Remotion.Web.UI.Controls.SingleViewImplementation.Rendering.SingleViewRenderer.CssClassBase"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.SingleView" />. </summary></member><member name="P:Remotion.Web.UI.Controls.SingleViewImplementation.Rendering.SingleViewRenderer.CssClassView"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.SingleView" />'s active view. </summary></member><member name="P:Remotion.Web.UI.Controls.SingleViewImplementation.Rendering.SingleViewRenderer.CssClassTopControls"><summary> Gets the CSS-Class applied to the top section. </summary></member><member name="P:Remotion.Web.UI.Controls.SingleViewImplementation.Rendering.SingleViewRenderer.CssClassBottomControls"><summary> Gets the CSS-Class applied to the bottom section. </summary></member><member name="P:Remotion.Web.UI.Controls.SingleViewImplementation.Rendering.SingleViewRenderer.CssClassViewBody"><summary> Gets the CSS-Class applied to a <c>div</c> wrapping the content and the border elements. </summary></member><member name="P:Remotion.Web.UI.Controls.SingleViewImplementation.Rendering.SingleViewRenderer.CssClassContent"><summary> Gets the CSS-Class applied to a <c>div</c> intended for formatting the content. </summary></member><member name="P:Remotion.Web.UI.Controls.SingleViewImplementation.Rendering.SingleViewRenderer.CssClassEmpty"><summary> Gets the CSS-Class applied when the section is empty. </summary></member><member name="T:Remotion.Web.UI.Controls.SingleViewImplementation.Rendering.SingleViewRenderingContext"><summary>
            Groups all arguments required for rendering a <see cref="T:Remotion.Web.UI.Controls.SingleView" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.SingleViewImplementation.ISingleView"><summary>
            Exposes <see cref="T:Remotion.Web.UI.Controls.SingleView" /> properties that are relevant to rendering.
            </summary></member><member name="T:Remotion.Web.UI.Controls.TabbedMenuImplementation.Rendering.IMenuTabRenderer"><summary>
            Defines the API for rendering a <see cref="T:Remotion.Web.UI.Controls.MenuTab" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.TabbedMenuImplementation.Rendering.ITabbedMenuRenderer"><summary>
            Defines the API for rendering a <see cref="T:Remotion.Web.UI.Controls.TabbedMenu" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.TabbedMenuImplementation.Rendering.MenuTabRenderer"><summary>
            Responsible for rendering a <see cref="T:Remotion.Web.UI.Controls.MenuTab" /> in quirks mode.
            <seealso cref="T:Remotion.Web.UI.Controls.TabbedMenuImplementation.IMenuTab" />
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabRenderer"><summary>
            Responsible for rendering <see cref="T:Remotion.Web.UI.Controls.WebTab" /> controls in standard mode.
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.IWebTabRenderer"><summary>
            Defines the API for rendering a <see cref="T:Remotion.Web.UI.Controls.WebTab" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabRenderer.CssClassTabAnchorBody"><summary> Gets the CSS-Class applied to a <c>span</c> intended for formatting the inside of the anchor element. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabRenderer.CssClassTab"><summary> Gets the CSS-Class applied to a <see cref="T:Remotion.Web.UI.Controls.WebTab" />. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabRenderer.CssClassTabSelected"><summary> Gets the CSS-Class applied to a <see cref="T:Remotion.Web.UI.Controls.WebTab" /> if it is selected. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabRenderer.CssClassSeparator"><summary> Gets the CSS-Class applied to a separator. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabRenderer.CssClassTabLast"><summary> Gets the CSS-Class applied to a <c>span</c> intended for clearing the space after the last tab. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabRenderer.CssClassDisabled"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTab" /> when it is displayed disabled. </summary></member><member name="T:Remotion.Web.UI.Controls.TabbedMenuImplementation.Rendering.TabbedMenuRenderer"><summary>
            Implements <see cref="T:Remotion.Web.UI.Controls.TabbedMenuImplementation.Rendering.ITabbedMenuRenderer" /> for standard mode rendering of <see cref="T:Remotion.Web.UI.Controls.TabbedMenu" /> controls.
            <seealso cref="T:Remotion.Web.UI.Controls.TabbedMenuImplementation.ITabbedMenu" />
            </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenuImplementation.Rendering.TabbedMenuRenderer.CssClassBase"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTabStrip" /> itself. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenuImplementation.Rendering.TabbedMenuRenderer.CssClassMainMenu"><summary> Gets the CSS-Class applied to the main menu's tab strip. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenuImplementation.Rendering.TabbedMenuRenderer.CssClassSubMenu"><summary> Gets the CSS-Class applied to the sub menu's tab strip. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenuImplementation.Rendering.TabbedMenuRenderer.CssClassMainMenuCell"><summary> Gets the CSS-Class applied to the main menu cell. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenuImplementation.Rendering.TabbedMenuRenderer.CssClassSubMenuCell"><summary> Gets the CSS-Class applied to the sub menu cell. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenuImplementation.Rendering.TabbedMenuRenderer.CssClassStatusCell"><summary> Gets the CSS-Class applied to the status cell. </summary></member><member name="T:Remotion.Web.UI.Controls.TabbedMenuImplementation.Rendering.TabbedMenuRenderingContext"><summary>
            Groups all arguments required for rendering a <see cref="T:Remotion.Web.UI.Controls.TabbedMenu" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.TabbedMenuImplementation.IMenuTab"><summary>
            Exposes <see cref="T:Remotion.Web.UI.Controls.MenuTab" /> properties relevant to rendering.
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebTabStripImplementation.IWebTab"><summary>
            Exposes <see cref="T:Remotion.Web.UI.Controls.WebTab" /> properties relevant to rendering.
            </summary></member><member name="T:Remotion.Web.UI.Controls.IControlItem"><summary>
              Provides <see cref="T:System.ComponentModel.IComponent" />-like functionality for non-UI items of controls.
            </summary></member><member name="T:Remotion.Web.UI.Controls.TabbedMenuImplementation.ITabbedMenu"><summary>
            Exposes <see cref="T:Remotion.Web.UI.Controls.TabbedMenu" /> properties relevant to rendering.
            </summary></member><member name="T:Remotion.Web.UI.Controls.TabbedMultiViewImplementation.Rendering.ITabbedMultiViewRenderer"><summary>
            Defines the API for rendering a <see cref="T:Remotion.Web.UI.Controls.TabbedMultiView" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.TabbedMultiViewImplementation.Rendering.TabbedMultiViewRenderer"><summary>
            Implements <see cref="T:Remotion.Web.UI.Controls.TabbedMultiViewImplementation.Rendering.ITabbedMultiViewRenderer" /> for standard mode rendering of <see cref="T:Remotion.Web.UI.Controls.TabbedMultiView" /> controls.
            <seealso cref="T:Remotion.Web.UI.Controls.TabbedMultiViewImplementation.ITabbedMultiView" />
            </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMultiViewImplementation.Rendering.TabbedMultiViewRenderer.CssClassBase"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.TabbedMultiView" />. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMultiViewImplementation.Rendering.TabbedMultiViewRenderer.CssClassTabStrip"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.TabbedMultiView" />'s tab strip. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMultiViewImplementation.Rendering.TabbedMultiViewRenderer.CssClassActiveView"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.TabbedMultiView" />'s active view. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMultiViewImplementation.Rendering.TabbedMultiViewRenderer.CssClassTopControls"><summary> Gets the CSS-Class applied to the top section. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMultiViewImplementation.Rendering.TabbedMultiViewRenderer.CssClassBottomControls"><summary> Gets the CSS-Class applied to the bottom section. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMultiViewImplementation.Rendering.TabbedMultiViewRenderer.CssClassViewBody"><summary> Gets the CSS-Class applied to a <c>div</c> wrapping the content and the border elements. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMultiViewImplementation.Rendering.TabbedMultiViewRenderer.CssClassContent"><summary> Gets the CSS-Class applied to a <c>div</c> intended for formatting the content. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMultiViewImplementation.Rendering.TabbedMultiViewRenderer.CssClassEmpty"><summary> Gets the CSS-Class applied when the section is empty. </summary></member><member name="T:Remotion.Web.UI.Controls.TabbedMultiViewImplementation.Rendering.TabbedMultiViewRenderingContext"><summary>
            Groups all arguments required for rendering a <see cref="T:Remotion.Web.UI.Controls.TabbedMultiView" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.TabbedMultiViewImplementation.ITabbedMultiView"><summary>
            Exposes <see cref="T:Remotion.Web.UI.Controls.TabbedMultiView" /> properties relevant to rendering.
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebButtonImplementation.Rendering.IWebButtonRenderer"><summary>
            Defines the API for rendering a <see cref="T:Remotion.Web.UI.Controls.WebButton" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebButtonImplementation.Rendering.WebButtonRenderer"><summary>
            Implements <see cref="T:Remotion.Web.UI.Controls.WebButtonImplementation.Rendering.IWebButtonRenderer" /> for standard mode rendering of <see cref="T:Remotion.Web.UI.Controls.WebButton" /> controls.
            <seealso cref="T:Remotion.Web.UI.Controls.WebButtonImplementation.IWebButton" />
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebButtonImplementation.Rendering.WebButtonRenderingContext"><summary>
            Groups all arguments required for rendering a <see cref="T:Remotion.Web.UI.Controls.WebButton" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.IWebTabStripRenderer"><summary>
            Defines the API for rendering a <see cref="T:Remotion.Web.UI.Controls.WebTabStrip" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabRendererAdapter"><summary>
            <see cref="T:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabRendererAdapter" /> holds a <see cref="T:Remotion.Web.UI.Controls.WebTabStripImplementation.IWebTab" /> and it's corresponding <see cref="T:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.IWebTabRenderer" />. It exposes a render 
            method which delegates to the <see cref="T:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.IWebTabRenderer" /> to render a <see cref="T:Remotion.Web.UI.Controls.WebTabStripImplementation.IWebTabStrip" /> tab. 
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabRendererAdapterArrayBuilder"><summary>
            <see cref="T:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabRendererAdapterArrayBuilder" /> is responsible to create a collection of <see cref="T:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabRendererAdapter" />s for the given
            <see cref="T:Remotion.Web.UI.Controls.WebTabStripImplementation.IWebTab" />s.
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabStripRenderer"><summary>
            Implements <see cref="T:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.IWebTabStripRenderer" /> for standard mode rendering of <see cref="T:Remotion.Web.UI.Controls.WebTabStrip" /> controls.
            <seealso cref="T:Remotion.Web.UI.Controls.WebTabStripImplementation.IWebTabStrip" />
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabStripRenderer.CssClassBase"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTabStrip" /> itself. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabStripRenderer.CssClassTabsPane"><summary> Gets the CSS-Class applied to the pane of <see cref="T:Remotion.Web.UI.Controls.WebTab" /> items. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabStripRenderer.CssClassTabWrapper"><summary> Gets the CSS-Class applied to the wrapper around each <see cref="T:Remotion.Web.UI.Controls.WebTab" /> item. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabStripRenderer.CssClassTabsPaneEmpty"><summary> Gets the CSS-Class applied to a pane of <see cref="T:Remotion.Web.UI.Controls.WebTab" /> items if no items are present. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabStripRenderer.CssClassTab"><summary> Gets the CSS-Class applied to a <see cref="T:Remotion.Web.UI.Controls.WebTab" />. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabStripRenderer.CssClassTabSelected"><summary> Gets the CSS-Class applied to a <see cref="T:Remotion.Web.UI.Controls.WebTab" /> if it is selected. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabStripRenderer.CssClassTabAnchorBody"><summary> Gets the CSS-Class applied to a <c>span</c> intended for formatting the inside of the anchor element. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabStripRenderer.CssClassTabLast"><summary> Gets the CSS-Class applied to a <c>span</c> intended for clearing the space after the last tab. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabStripRenderer.CssClassSeparator"><summary> Gets the CSS-Class applied to a separator. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabStripRenderer.CssClassDisabled"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTab" /> when it is displayed disabled. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabStripRenderer.CssClassClearingPane"><summary> Gets the CSS-Class applied to the div used to clear the flow-layout at the end of the tab-strip. </summary></member><member name="T:Remotion.Web.UI.Controls.WebTabStripImplementation.Rendering.WebTabStripRenderingContext"><summary>
            Groups all arguments required for rendering a <see cref="T:Remotion.Web.UI.Controls.WebTabStrip" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebTabStripImplementation.IWebTabStrip"><summary>
            Exposes <see cref="T:Remotion.Web.UI.Controls.WebTabStrip" /> properties relevant to rendering.
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebTreeViewImplementation.Rendering.IWebTreeViewRenderer"><summary>
            Defines the API for rendering a <see cref="T:Remotion.Web.UI.Controls.WebTreeView" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebTreeViewImplementation.Rendering.WebTreeViewRenderer"><summary>
            Implements <see cref="T:Remotion.Web.UI.Controls.WebTreeViewImplementation.Rendering.IWebTreeViewRenderer" /> for standard mode rendering of <see cref="T:Remotion.Web.UI.Controls.WebTreeView" /> controls.
            <seealso cref="T:Remotion.Web.UI.Controls.WebTreeViewImplementation.IWebTreeView" />
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebTreeViewImplementation.Rendering.WebTreeViewRenderingContext"><summary>
            Groups all arguments required for rendering a <see cref="T:Remotion.Web.UI.Controls.WebTreeView" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.ClientScriptBehavior"><summary>
            Implements <see cref="T:Remotion.Web.UI.Controls.IClientScriptBehavior" /> for standard mode.
            <see cref="M:Remotion.Web.UI.Controls.ClientScriptBehavior.IsBrowserCapableOfScripting(System.Web.HttpContextBase,Remotion.Web.UI.Controls.IControl)" /> always returns <see langword="true" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.IClientScriptBehavior"><summary>
            Defines an API for determining whether the browser used for the current request supports client script.
            </summary></member><member name="T:Remotion.Web.UI.Controls.Command"><summary> A <see cref="T:Remotion.Web.UI.Controls.Command" /> defines an action the user can invoke. </summary></member><member name="M:Remotion.Web.UI.Controls.Command.OnClick"><summary> Fires the <see cref="F:Remotion.Web.UI.Controls.Command.Click" /> event. </summary></member><member name="M:Remotion.Web.UI.Controls.Command.RenderBegin(System.Web.UI.HtmlTextWriter,System.String,System.String[],System.String,Remotion.Security.ISecurableObject,System.Collections.Specialized.NameValueCollection,System.Boolean,System.Web.UI.WebControls.Style)"><summary> Renders the opening tag for the command. </summary><param name="writer"> The <see cref="T:System.Web.UI.HtmlTextWriter" /> object to use. Must not be <see langword="null" />. </param><param name="postBackEvent">
              The string executed upon the click on a command of types
              <see cref="F:Remotion.Web.UI.Controls.CommandType.Event" /> or <see cref="F:Remotion.Web.UI.Controls.CommandType.WxeFunction" />.
              This string is usually the call to the <c>__doPostBack</c> script function used by ASP.net
              to force a post back.
            </param><param name="parameters">
              The strings inserted into the href attribute using <c>string.Format</c>.
            </param><param name="onClick"> 
              The string always rendered in the <c>onClick</c> tag of the anchor element. 
            </param><param name="securableObject">
              The <see cref="T:Remotion.Security.ISecurableObject" /> for which security is evaluated. Use <see landword="null" /> if security is stateless or not evaluated.
            </param><param name="additionalUrlParameters">
              The <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing additional url parameters.
              Must not be <see langword="null" />.
            </param><param name="includeNavigationUrlParameters"> 
              <see langword="true" /> to include URL parameters provided by <see cref="T:Remotion.Web.UI.ISmartNavigablePage" />.
            </param><param name="style"> The style applied to the opening tag. </param></member><member name="M:Remotion.Web.UI.Controls.Command.RenderBegin(System.Web.UI.HtmlTextWriter,System.String,System.String[],System.String,Remotion.Security.ISecurableObject)"><summary> Renders the opening tag for the command. </summary><param name="writer"> The <see cref="T:System.Web.UI.HtmlTextWriter" /> object to use. Must not be <see langword="null" />. </param><param name="postBackEvent">
              The string executed upon the click on a command of types
              <see cref="F:Remotion.Web.UI.Controls.CommandType.Event" /> or <see cref="F:Remotion.Web.UI.Controls.CommandType.WxeFunction" />.
              This string is usually the call to the <c>__doPostBack</c> script function used by ASP.net
              to force a post back.
            </param><param name="parameters">
              The strings inserted into the href attribute using <c>string.Format</c>.
            </param><param name="onClick"> 
              The string always rendered in the <c>onClick</c> tag of the anchor element. 
            </param><param name="securableObject">
              The <see cref="T:Remotion.Security.ISecurableObject" /> for which security is evaluated. Use <see landword="null" /> if security is stateless or not evaluated.
            </param></member><member name="M:Remotion.Web.UI.Controls.Command.AddAttributesToRenderForHrefCommand(System.Web.UI.HtmlTextWriter,System.String[],System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)"><summary> Adds the attributes for the Href command to the anchor tag. </summary><param name="writer"> The <see cref="T:System.Web.UI.HtmlTextWriter" /> object to use. Must not be <see langword="null" />. </param><param name="parameters">
              The strings inserted into the href attribute using <c>string.Format</c>.
            </param><param name="onClick"> 
              The string always rendered in the <c>onClick</c> tag of the anchor element. 
            </param><param name="additionalUrlParameters">
              The <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing additional url parameters.
              Must not be <see langword="null" />.
            </param><param name="includeNavigationUrlParameters"> 
              <see langword="true" /> to include URL parameters provided by <see cref="T:Remotion.Web.UI.ISmartNavigablePage" />.
              Defaults to <see langword="true" />.
            </param></member><member name="M:Remotion.Web.UI.Controls.Command.AddAttributesToRenderForEventCommand(System.Web.UI.HtmlTextWriter,System.String,System.String)"><summary> Adds the attributes for the Event command to the anchor tag. </summary><param name="writer"> The <see cref="T:System.Web.UI.HtmlTextWriter" /> object to use. Must not be <see langword="null" />. </param><param name="postBackEvent">
              The string executed upon the click on a command of types
              <see cref="F:Remotion.Web.UI.Controls.CommandType.Event" /> or <see cref="F:Remotion.Web.UI.Controls.CommandType.WxeFunction" />.
              This string is usually the call to the <c>__doPostBack</c> script function used by ASP.net
              to force a post back. Must not be <see langword="null" />.
            </param><param name="onClick"> 
              The string always rendered in the <c>onClick</c> tag of the anchor element. 
            </param></member><member name="M:Remotion.Web.UI.Controls.Command.AddAttributesToRenderForWxeFunctionCommand(System.Web.UI.HtmlTextWriter,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)"><summary> Adds the attributes for the Wxe Function command to the anchor tag. </summary><param name="writer"> The <see cref="T:System.Web.UI.HtmlTextWriter" /> object to use. Must not be <see langword="null" />. </param><param name="postBackEvent">
              The string executed upon the click on a command of types
              <see cref="F:Remotion.Web.UI.Controls.CommandType.Event" /> or <see cref="F:Remotion.Web.UI.Controls.CommandType.WxeFunction" />.
              This string is usually the call to the <c>__doPostBack</c> script function used by ASP.net
              to force a post back. Must not be <see langword="null" />.
            </param><param name="onClick"> 
              The string always rendered in the <c>onClick</c> tag of the anchor element. 
            </param><param name="additionalUrlParameters">
              The <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing additional url parameters.
              Must not be <see langword="null" />.
            </param><param name="includeNavigationUrlParameters"> 
              <see langword="true" /> to include URL parameters provided by <see cref="T:Remotion.Web.UI.ISmartNavigablePage" />.
            </param></member><member name="M:Remotion.Web.UI.Controls.Command.RenderEnd(System.Web.UI.HtmlTextWriter)"><summary> Renders the closing tag for the command. </summary><param name="writer"> The <see cref="T:System.Web.UI.HtmlTextWriter" /> object to use. </param></member><member name="M:Remotion.Web.UI.Controls.Command.ToString"><summary>
              Returns a string representation of this <see cref="T:Remotion.Web.UI.Controls.Command" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.Command.ExecuteWxeFunction(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Collections.NameObjectCollection)"><summary> Executes the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> defined by the <see cref="T:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo" />. </summary><param name="wxePage"> 
              The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> where this command is rendered on. Must not be <see langword="null" />.
            </param><param name="additionalWxeParameters"> 
              The parameters passed to the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> in addition to the executing function's variables.
              Use <see langword="null" /> or an empty collection if all parameters are supplied by the 
              <see cref="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.Parameters" /> string and the function stack.
            </param></member><member name="M:Remotion.Web.UI.Controls.Command.ShouldSerializeType"><summary> Controls the persisting of the <see cref="P:Remotion.Web.UI.Controls.Command.Type" />. </summary></member><member name="M:Remotion.Web.UI.Controls.Command.ResetType"><summary> Sets the <see cref="P:Remotion.Web.UI.Controls.Command.Type" /> to its default value. </summary></member><member name="P:Remotion.Web.UI.Controls.Command.Type"><summary> The <see cref="T:Remotion.Web.UI.Controls.CommandType" /> represented by this instance of <see cref="T:Remotion.Web.UI.Controls.Command" />. </summary></member><member name="P:Remotion.Web.UI.Controls.Command.Show"><summary>
              Determines when the item command is shown to the user in regard of the parent control's read-only setting.
            </summary></member><member name="P:Remotion.Web.UI.Controls.Command.EventCommand"><summary>
              The <see cref="T:Remotion.Web.UI.Controls.Command.EventCommandInfo" /> used when rendering the command as an event.
            </summary></member><member name="P:Remotion.Web.UI.Controls.Command.HrefCommand"><summary>
              The <see cref="T:Remotion.Web.UI.Controls.Command.HrefCommandInfo" /> used when rendering the command as a hyperlink.
            </summary></member><member name="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommand"><summary>
              The <see cref="T:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo" /> used when rendering the command as a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.Command.OwnerControl"><summary> Gets or sets the control to which this object belongs. </summary></member><member name="M:Remotion.Web.UI.Controls.Command.EventCommandInfo.ToString"><summary> Returns a string representation of this <see cref="T:Remotion.Web.UI.Controls.Command.EventCommandInfo" />. </summary></member><member name="T:Remotion.Web.UI.Controls.Command.HrefCommandInfo"><summary> Wraps the properties required for rendering a hyperlink. </summary></member><member name="M:Remotion.Web.UI.Controls.Command.HrefCommandInfo.#ctor"><summary> Simple constructor. </summary></member><member name="M:Remotion.Web.UI.Controls.Command.HrefCommandInfo.ToString"><summary> Returns a string representation of this <see cref="T:Remotion.Web.UI.Controls.Command.HrefCommandInfo" />. </summary></member><member name="P:Remotion.Web.UI.Controls.Command.HrefCommandInfo.Href"><summary> Gets or sets the URL to link to when the rendered command is clicked. </summary></member><member name="P:Remotion.Web.UI.Controls.Command.HrefCommandInfo.Target"><summary> 
              Gets or sets the target window or frame to display the web page specified by <see cref="P:Remotion.Web.UI.Controls.Command.HrefCommandInfo.Href" /> 
              when  the rendered command is clicked.
            </summary></member><member name="T:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo"><summary> Wraps the properties required for calling a WxeFunction. </summary></member><member name="M:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.#ctor"><summary> Simple constructor. </summary></member><member name="M:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.ToString"><summary>
              Returns a string representation of this <see cref="T:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.TypeName"><summary> 
              Gets or sets the complete type name of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> to call when the rendered 
              command is clicked. Either the <see cref="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.TypeName" /> or the <see cref="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.MappingID" /> is required.
            </summary></member><member name="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.MappingID"><summary> 
              Gets or sets the ID of the function as defined in the <see cref="T:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingEntry" />.
              Either the <see cref="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.TypeName" /> or the <see cref="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.MappingID" /> is required.
            </summary></member><member name="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.Parameters"><summary> 
              Gets or sets the comma separated list of parameters passed to the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> when the 
              rendered command is clicked.
            </summary></member><member name="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.Target"><summary> 
              Gets or sets the target window or frame to open the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> when the rendered command is 
              clicked.
            </summary></member><member name="T:Remotion.Web.UI.Controls.CommandType"><summary> The possible command types of a <see cref="T:Remotion.Web.UI.Controls.Command" />. </summary></member><member name="F:Remotion.Web.UI.Controls.CommandType.None"><summary> No command will be generated. </summary></member><member name="F:Remotion.Web.UI.Controls.CommandType.Event"><summary> A server side event will be raised upon a command click. </summary></member><member name="F:Remotion.Web.UI.Controls.CommandType.Href"><summary> A hyperlink will be rendered on the page. </summary></member><member name="F:Remotion.Web.UI.Controls.CommandType.WxeFunction"><summary> A <see cref="F:Remotion.Web.UI.Controls.CommandType.WxeFunction" /> will be called upon a command click. </summary></member><member name="T:Remotion.Web.UI.Controls.CommandShow"><summary> Defines when the command will be active on the page. </summary></member><member name="F:Remotion.Web.UI.Controls.CommandShow.Always"><summary> The command is always active. </summary></member><member name="F:Remotion.Web.UI.Controls.CommandShow.ReadOnly"><summary> The command is only active if the containing element is read-only. </summary></member><member name="F:Remotion.Web.UI.Controls.CommandShow.EditMode"><summary> The command is only active if the containing element is in edit-mode. </summary></member><member name="T:Remotion.Web.UI.Controls.CommandClickEventHandler"><summary>
              Represents the method that handles the <see cref="F:Remotion.Web.UI.Controls.Command.Click" /> event
              raised when clicking on a <see cref="T:Remotion.Web.UI.Controls.Command" /> of type <see cref="F:Remotion.Web.UI.Controls.CommandType.Event" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.CommandClickEventArgs"><summary> Provides data for the <see cref="F:Remotion.Web.UI.Controls.Command.Click" /> event. </summary></member><member name="M:Remotion.Web.UI.Controls.CommandClickEventArgs.#ctor(Remotion.Web.UI.Controls.Command)"><summary> Initializes a new instance. </summary></member><member name="P:Remotion.Web.UI.Controls.CommandClickEventArgs.Command"><summary> The <see cref="P:Remotion.Web.UI.Controls.CommandClickEventArgs.Command" /> that caused the event. </summary></member><member name="T:Remotion.Web.UI.Controls.CompoundValidator"><summary>
              Base class for compound validators.
            </summary></member><member name="T:Remotion.Web.UI.Controls.IBaseValidator"><summary>
              This interface defines essential validator features that are not included in IValidator.
              <seealso cref="T:System.Web.UI.IValidator" />
            </summary></member><member name="M:Remotion.Web.UI.Controls.CompoundValidator.CreateChildValidators"><summary>
              Derived classes implement this method to create the contained validator(s).
            </summary></member><member name="T:Remotion.Web.UI.Controls.ControlItemCollection"><summary>
              Colletion of <see cref="T:Remotion.Web.UI.Controls.IControlItem" />.
            </summary></member><member name="F:Remotion.Web.UI.Controls.ControlItemCollection._isEditing"><summary> true if BeginEdit was called. </summary></member><member name="F:Remotion.Web.UI.Controls.ControlItemCollection._isChanged"><summary> true if _isEditing is true and the collection's values got changed. </summary></member><member name="M:Remotion.Web.UI.Controls.ControlItemCollection.#ctor(Remotion.Web.UI.Controls.IControl,System.Type[])"><summary> Creates a new instance. </summary><param name="ownerControl"> Owner control. </param><param name="supportedTypes">
              Supported types must implement <see cref="T:Remotion.Web.UI.Controls.IControlItem" />. 
              Must not be <see langword="null" /> or contain items that are <see langword="null" />.
            </param></member><member name="M:Remotion.Web.UI.Controls.ControlItemCollection.BeginEdit"><summary> Places the collection into edit mode. </summary></member><member name="M:Remotion.Web.UI.Controls.ControlItemCollection.EndEdit"><summary> Returns the collection to normal mode. </summary></member><member name="M:Remotion.Web.UI.Controls.ControlItemCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)"><summary> Raises the <see cref="E:Remotion.Web.UI.Controls.ControlItemCollection.CollectionChanged" /> event. </summary></member><member name="M:Remotion.Web.UI.Controls.ControlItemCollection.ToArray"></member><member name="M:Remotion.Web.UI.Controls.ControlItemCollection.Find(System.String)"><summary> Finds the <see cref="T:Remotion.Web.UI.Controls.IControlItem" /> with an <see cref="P:Remotion.Web.UI.Controls.IControlItem.ItemID" /> of <paramref name="id" />. </summary><param name="id"> The ID to look for. </param></member><member name="M:Remotion.Web.UI.Controls.ControlItemCollection.IsSupportedType(Remotion.Web.UI.Controls.IControlItem)"><summary> Tests whether the specified control item's type is supported by the collection. </summary></member><member name="E:Remotion.Web.UI.Controls.ControlItemCollection.CollectionChanged"><summary> The event raised after the items contained in the collection has been changed. </summary></member><member name="P:Remotion.Web.UI.Controls.ControlItemCollection.Item(System.Int32)"></member><member name="P:Remotion.Web.UI.Controls.ControlItemCollection.OwnerControl"><summary> Gets or sets the control to which this collection belongs. </summary></member><member name="T:Remotion.Web.UI.Controls.DatePickerPage"><summary> 
              Displayes a <see cref="F:Remotion.Web.UI.Controls.DatePickerPage.Calendar" /> and updates an input control with the newly selected date.
            </summary></member><member name="F:Remotion.Web.UI.Controls.DatePickerPage.TargetIDField"><summary> Preserves the target control's ID during post backs. </summary></member><member name="F:Remotion.Web.UI.Controls.DatePickerPage.DatePickerIDField"><summary> Preserves the frame's ID in the parent page during post backs. </summary></member><member name="F:Remotion.Web.UI.Controls.DatePickerPage.DateValueField"><summary> Contains the date to be selected in the calendar. </summary></member><member name="T:Remotion.Web.UI.Controls.DropDownMenu"></member><member name="T:Remotion.Web.UI.Controls.IControlWithDesignTimeSupport"><summary>
              This interface contains all public members of System.Web.UI.Control. It is used to derive interfaces that will be
              implemented by deriving from System.Web.UI.Control.
            </summary></member><member name="M:Remotion.Web.UI.Controls.MenuBase.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)"><summary> Implements interface <see cref="T:System.Web.UI.IPostBackEventHandler" />. </summary><param name="eventArgument"> &lt;index&gt; </param></member><member name="M:Remotion.Web.UI.Controls.MenuBase.Remotion#Web#UI#Controls#IControlWithDesignTimeSupport#PreRenderForDesignMode"><summary> Calls <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> on every invocation. </summary></member><member name="M:Remotion.Web.UI.Controls.MenuBase.OnEventCommandClick(Remotion.Web.UI.Controls.WebMenuItem)"><summary> Fires the <see cref="E:Remotion.Web.UI.Controls.MenuBase.EventCommandClick" /> event. </summary></member><member name="M:Remotion.Web.UI.Controls.MenuBase.OnWxeFunctionCommandClick(Remotion.Web.UI.Controls.WebMenuItem)"><summary> Fires the <see cref="E:Remotion.Web.UI.Controls.MenuBase.WxeFunctionCommandClick" /> event. </summary></member><member name="E:Remotion.Web.UI.Controls.MenuBase.EventCommandClick"><summary> Occurs when a command of type <see cref="F:Remotion.Web.UI.Controls.CommandType.Event" /> is clicked. </summary></member><member name="E:Remotion.Web.UI.Controls.MenuBase.WxeFunctionCommandClick"><summary> Occurs when a command of type <see cref="F:Remotion.Web.UI.Controls.CommandType.WxeFunction" /> is clicked. </summary></member><member name="F:Remotion.Web.UI.Controls.DropDownMenu.OnHeadTitleClickScript"><summary> Only used by control developers. </summary></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.SetRenderHeadTitleMethodDelegate(System.Action{System.Web.UI.HtmlTextWriter})"><summary> Only used by control developers. </summary></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#DropDownMenuImplementation#IDropDownMenu#get_Style"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IStyledControl#get_ControlStyle"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IStyledControl#get_Attributes"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#get_BindingContainer"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#get_TemplateControl"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#set_TemplateControl(System.Web.UI.TemplateControl)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#get_AppRelativeTemplateSourceDirectory"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#set_AppRelativeTemplateSourceDirectory(System.String)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"></member><member name="P:Remotion.Web.UI.Controls.DropDownMenu.TitleText"></member><member name="T:Remotion.Web.UI.Controls.EmailAddressValidator"><summary> Provides client- and server-side e-mail address validation using a regular expression. </summary></member><member name="M:Remotion.Web.UI.Controls.EmailAddressValidator.IsMatchComplete(System.String)"><summary> Tests the passed <paramref name="emailAddress" /> if it is valid. </summary><param name="emailAddress"> The e-mail address to test. </param></member><member name="M:Remotion.Web.UI.Controls.EmailAddressValidator.IsMatchUserPart(System.String)"><summary> 
              Tests the passed <paramref name="userPart" /> against <see cref="P:Remotion.Web.UI.Controls.EmailAddressValidator.ValidationExpressionUserPart" /> expression.
            </summary><param name="userPart"> The user part (i.e. the part before the @) of the e-mail address. </param></member><member name="M:Remotion.Web.UI.Controls.EmailAddressValidator.IsMatchDomainPart(System.String)"><summary> 
              Tests the passed <paramref name="domainPart" /> against <see cref="P:Remotion.Web.UI.Controls.EmailAddressValidator.ValidationExpressionDomainPart" /> expression.
            </summary><param name="domainPart"> The domain part (i.e. the part after the @) of the e-mail address. </param></member><member name="M:Remotion.Web.UI.Controls.EmailAddressValidator.IsMatch(System.String,System.String)"><summary> Tests the <paramref name="text" /> against the <paramref name="expression" />.</summary><param name="text"> The text to be evaluated. </param><param name="expression"> The regular expression to be used. </param></member><member name="P:Remotion.Web.UI.Controls.EmailAddressValidator.ValidationExpressionUserPart"><summary> Gets the validation expression to be used for evaluation of the user part (pre-@). </summary></member><member name="P:Remotion.Web.UI.Controls.EmailAddressValidator.ValidationExpressionDomainPart"><summary> Gets the validation expression to be used for evaluation of the domain part (post-@). </summary></member><member name="P:Remotion.Web.UI.Controls.EmailAddressValidator.EnableTrimming"><summary> 
              Gets or sets a flag that determines whether to ignore leading and trailing whitespaces during validation. 
            </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridLabel"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="T:Remotion.Web.UI.Controls.ISmartControl"><summary>
              This interfaces declares advanced properties and methods for data-aware web controls.
              <seealso cref="T:Remotion.Web.UI.Controls.FormGridManager" />
            </summary></member><member name="M:Remotion.Web.UI.Controls.ISmartControl.CreateValidators"><summary>
              Creates an appropriate validator for this control.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ISmartControl.RegisterHtmlHeadContents(Remotion.Web.UI.HtmlHeadAppender)"><summary>Regsiteres stylesheet and script files with the <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.</summary></member><member name="P:Remotion.Web.UI.Controls.ISmartControl.IsRequired"><summary>
              Specifies whether the control must be filled out by the user before submitting the form.
            </summary></member><member name="P:Remotion.Web.UI.Controls.ISmartControl.HelpInfo"><summary>
              Gets an instance of the <see cref="P:Remotion.Web.UI.Controls.ISmartControl.HelpInfo" /> type, which contains all information needed for rendering a help-link.
            </summary></member><member name="P:Remotion.Web.UI.Controls.ISmartControl.TargetControl"><summary>
              Gets the input control that can be referenced by HTML tags like &lt;label for=...&gt; using its ClientID.
            </summary></member><member name="P:Remotion.Web.UI.Controls.ISmartControl.UseLabel"><summary>
              If UseLabel is true, it is valid to generate HTML &lt;label&gt; tags referencing <see cref="P:Remotion.Web.UI.Controls.ISmartControl.TargetControl" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.ISmartControl.DisplayName"><summary> Gets the text to be written into the label for this control. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#ResolveUrl(System.String)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#get_BindingContainer"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#get_TemplateControl"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#set_TemplateControl(System.Web.UI.TemplateControl)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#get_AppRelativeTemplateSourceDirectory"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#set_AppRelativeTemplateSourceDirectory(System.String)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridManager"><summary> Transforms one or more tables into form grids. </summary></member><member name="T:Remotion.Web.UI.Globalization.IResourceDispatchTarget"><summary>
              Interface for controls who wish to use automatic resource dispatching
              but implement the dispatching logic themselves.
            </summary></member><member name="M:Remotion.Web.UI.Globalization.IResourceDispatchTarget.Dispatch(System.Collections.IDictionary)"><summary>
              <b>Dispatch</b> is called by the parent control
              and receives the resources as an <b>IDictonary</b>.
            </summary><param name="values">
              An <b>IDictonary</b>: &lt;string key, string value&gt;.
            </param></member><member name="T:Remotion.Web.UI.Controls.ISupportsPostLoadControl"><summary>
              Allows controls to receive a call after the <see cref="E:System.Web.UI.Control.Load" /> event.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ISupportsPostLoadControl.OnPostLoad"><summary>
              This method may be called after the <see cref="E:System.Web.UI.Control.Load" /> event.
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.c_formGridSuffix"><summary> Sufffix for identifying all tables to be used as form grids. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.c_viewStateIDFormGrids"><summary> View State ID for the form grid view states. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.c_viewStateIDLabelsColumn"><summary> View State ID for _labelsColumn. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.c_viewStateIDControlsColumn"><summary> View State ID for _controlsColumn. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.c_viewStateIDShowValidationMarkers"><summary> View State ID for _showValidationMarkers. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.c_viewStateIDShowRequiredMarkers"><summary> View State ID for _showRequiredMarkers. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.c_viewStateIDHelpProviders"><summary> View State ID for _showHelpProviders. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.c_viewStateIDValidatorVisibility"><summary> View State ID for _validatorVisibility. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.c_viewStateIDFormGridSuffix"><summary> View State ID for _formGridSuffix. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._formGrids"><summary>
              Hashtable&lt;string uniqueID, <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid" />&gt;
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._labelsColumn"><summary> Index of the column normally containing the labels. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._controlsColumn"><summary>
              Index of the column normally containing the controls. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._formGridSuffix"><summary>
              Suffix identifying the <c>HtmlTables</c> to be managed by this <c>FormGridManager</c>.
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._validatorVisibility"><summary> The cell where the validation message should be written. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._showValidationMarkers"><summary> Enable/Disable the validation markers. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._showRequiredMarkers"><summary> Enable/Disable the required markers. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._showHelpProviders"><summary> Enable/Disable the help providers. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._completedTransformationStep"><summary> 
              State variable for the two part transformation process. 
              Hashtable&lt;FormGrid, TransformationStep completedStep&gt; 
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._cachedFormGridRowProvider"><summary> Caches the <see cref="T:Remotion.Web.UI.Controls.IFormGridRowProvider" /> for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager" />. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._isFormGridRowProviderUndefined"><summary>
              <see langword="true" /> if the control hierarchy doesn't implement <see cref="T:Remotion.Web.UI.Controls.IFormGridRowProvider" />.
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._cachedResourceManager"><summary> Caches the <see cref="T:Remotion.Globalization.ResourceManagerSet" /> for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager" />. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.#ctor"><summary> Simple constructor. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.PrepareValidation"><summary> Prepares all all <c>FormGrid</c> objects managed by this <c>FormGridManager</c> for validation. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Validate"><summary> Validates all <c>FormGrid</c> objects managed by this <c>FormGridManager</c>. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.GetValidationErrors"><summary>
              Assembles all <see cref="T:Remotion.Web.UI.Controls.ValidationError" /> objects in the managed <c>FormGrids</c>.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Globalization#IResourceDispatchTarget#Dispatch(System.Collections.IDictionary)"><summary> Dispatches the resources passed in <paramref name="values" /> to the control's properties. </summary><param name="values"> An <c>IDictonary</c>: &lt;string key, string value&gt;. </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Dispatch(System.Collections.IDictionary)"><summary> Implementation of <see cref="T:Remotion.Web.UI.Globalization.IResourceDispatchTarget" />. </summary><param name="values">
      A dictonary of keys denoting the properties to be set, and the values to be used.
      The property is described by the full path through the control collection, starting with
      the form grid's ID.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Table_Load(System.Object,System.EventArgs)"><summary>
              Calls <see cref="M:Remotion.Web.UI.Controls.FormGridManager.EnsureTransformationStep(Remotion.Web.UI.Controls.FormGridManager.TransformationStep)" /> with 
              <see cref="F:Remotion.Web.UI.Controls.FormGridManager.TransformationStep.PreLoadViewStateTransformationCompleted" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.OnPostLoad"><summary>
            Optionally called after the <c>Load</c> event.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Table_PreRender(System.Object,System.EventArgs)"><summary>
              Calls <see cref="M:Remotion.Web.UI.Controls.FormGridManager.EnsureTransformationStep(Remotion.Web.UI.Controls.FormGridManager.TransformationStep)" /> with 
              <see cref="F:Remotion.Web.UI.Controls.FormGridManager.TransformationStep.PostValidationTransformationCompleted" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.LoadViewState(System.Object)"><summary> This member overrides <see cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.SaveViewState"><summary> This member overrides <see cref="M:System.Web.UI.Control.SaveViewState" />. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.LoadFormGridViewState(Remotion.Web.UI.Controls.FormGridManager.FormGrid,System.Object)"><summary> Restore the view state to the form grids. </summary><param name="formGrid">
      The form grid to restore.
    </param><param name="savedState">
      The view state object used for restoring.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.SaveFormGridViewState(Remotion.Web.UI.Controls.FormGridManager.FormGrid)"><summary> Saves the view state of the form grids. </summary><param name="formGrid">
      The form grid to save.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Render(System.Web.UI.HtmlTextWriter)"><summary> This member overrides <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.CreateFormGridRows(System.Web.UI.HtmlControls.HtmlTable,System.Int32,System.Int32)"><summary> Analyzes the table layout and creates the appropriate <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> isntances. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ValidateFormGrid(Remotion.Web.UI.Controls.FormGridManager.FormGrid)"><summary> Validates all <see cref="T:System.Web.UI.WebControls.BaseValidator" /> objects in the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid" />. </summary><param name="formGrid">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid" /> to be validated
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ValidateDataRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Validates the <see cref="T:System.Web.UI.WebControls.BaseValidator" /> objects. </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> to be validated.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.RegisterValidationErrors(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary>
              Creates the appropriate validation marker and <see cref="T:Remotion.Web.UI.Controls.ValidationError" /> objects and adds them to the 
              <paramref name="dataRow" />.
            </summary><param name="dataRow"> The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> for which the validation errors will analyzed and registered. </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.LoadNewFormGridRows(Remotion.Web.UI.Controls.FormGridManager.FormGrid)"><summary>
              Queries the parent hierarchy for an <see cref="T:Remotion.Web.UI.Controls.IFormGridRowProvider" /> and inserts 
              the provided new rows into the form grid.
            </summary><param name="formGrid">
      The form grid for which to load the rows. Must not be <see langname="null" />.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ApplyExternalHiddenSettings(Remotion.Web.UI.Controls.FormGridManager.FormGrid)"><summary>
              Queries the parent hierarchy for an <see cref="T:Remotion.Web.UI.Controls.IFormGridRowProvider" /> and hides  
              the rows identified as invisible rows.
            </summary><param name="formGrid">
      The form grid for which to load the rows. Must not be <see langname="null" />.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.GetFormGridRowProvider(System.Web.UI.Control)"><summary>
              Find the closest parent <see cref="T:System.Web.UI.Control" /> impementing
              <see cref="T:Remotion.Web.UI.Controls.IFormGridRowProvider" />.
            </summary><param name="control">
      The <see cref="T:System.Web.UI.Control" /> where to start searching for <see cref="T:Remotion.Web.UI.Controls.IFormGridRowProvider" />.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.GetResourceManager"><summary> Find the <see cref="T:Remotion.Globalization.IResourceManager" /> for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager" />. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ComposeFormGridContents(Remotion.Web.UI.Controls.FormGridManager.FormGrid)"><summary>
              Composes all information required to transform the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 
              into a form grid.
            </summary><param name="formGrid">
        The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid" /> whose contents need to be composeds
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ConfigureFormGrid(Remotion.Web.UI.Controls.FormGridManager.FormGrid)"><summary>
              Uses the information stored in <paramref name="formGrid" /> to configure the 
              <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> as a form grid.
            </summary><param name="formGrid">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid" /> to be formatted.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ConfigureTitleRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Configures the title row. </summary><param name="titleRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> used as title row
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ConfigureSubTitleRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Configures a sub title row. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ConfigureUnknownRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Configures the unknown rows. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ConfigureDataRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Configures a data row. </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> used as data row.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormatTitleRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Formats the title row. </summary><param name="titleRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> used as title row
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormatSubTitleRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Formats a sub title row. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormatUnknownRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Formats the unknown rows. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormatDataRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow,System.Boolean)"><summary> Formats a data row. </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> used as data row.
    </param><param name="isTopDataRow">
      <see langword="true" /> if the <paramref name="dataRow" /> is the first row after the 
      title row.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.AddShowEmptyCellsHack(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary>
              Calls <see cref="M:Remotion.Web.UI.Controls.FormGridManager.AddShowEmptyCellHack(System.Web.UI.HtmlControls.HtmlTableCell)" /> for the cells identified by 
              <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </summary><param name="formGridRow">The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />, must not be <see langword="null" />.</param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.CreateMarkersCell(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Creates the cell to be used for the markers. </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> for which the marker cell should be created.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.LoadMarkersIntoCell(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary>
              Loads the markers or place holders into the <see cref="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.MarkersCell" /> 
              of the <paramref name="dataRow" />.
            </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> for which the marker cell should be created.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ApplyValidatorSettings(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary>
              Applies the <c>FormGridManager</c>'s validator settings to all objects of 
              type <see cref="T:System.Web.UI.WebControls.BaseValidator" /> inside the <paramref name="dataRow" />.
            </summary><param name="dataRow"> The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> containing the validators to be overridden. </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.CreateLabels(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary>
              Creates the labels from the controls inside <paramref name="dataRow" />'s <see cref="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ControlsCell" />
              if they do not already exist.
            </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> for which the lables will be created.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.CreateValidators(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary>
              Creates the validators from the controls inside <paramref name="dataRow" /> if they do not already exist.
            </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> for which the validators will be created.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.CreateRequiredMarker(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary>
              Queries the controls in <paramref name="dataRow" /> for their mandatory setting 
              and creates the required marker if necessary.
            </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> to check for controls requiring input.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.CreateHelpProvider(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary>
              Queries the controls in <paramref name="dataRow" /> if they provide help
              and creates a help provider.
            </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> for which the validators will be created.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.HandleReadOnlyControls(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Queries the control for its read-only setting and transforms it if necessary. </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> to be checked for read-only controls.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.SetOrCreateValidationMessagesCell(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> 
              Sets the cell to be used for the validation messages, creating a new cell if necessary.
            </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> containing the future validation message cell.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.LoadValidationMessagesIntoCell(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Outputs the validation messages into a <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />. </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> containing the validation messages.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.AssignCssClassesToCells(Remotion.Web.UI.Controls.FormGridManager.FormGridRow,System.Boolean)"><summary> Assign CSS classes for cells where none exist. </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> containing the cells to get CSS classes assigned.
    </param><param name="isTopDataRow">
      <see langword="true" /> if the <paramref name="dataRow" /> is the first row after the 
      title row.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.AssignCssClassesToInputControls(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Assign CSS classes to input controls where none exist. </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> containing the input controls to get CSS classes assigned.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.AssignCssClassesToValidators(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Assign CSS classes to validators where none exist. </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> containing the input controls to get CSS classes assigned.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.AssignCssClassToCell(System.Web.UI.HtmlControls.HtmlTableCell,System.String)"><summary>
              Tests for an empty <c>class</c> attribute and assigns the <paramref name="cssClass" /> 
              if empty.
            </summary><param name="cell"> The <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> to be used. </param><param name="cssClass"> The <c>CSS-class</c> to assign. </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.AddShowEmptyCellHack(System.Web.UI.HtmlControls.HtmlTableCell)"><summary>
              Adds a white space to the <paramref name="cell" /> to force show the cell in the browser.
            </summary><param name="cell"> The <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> to be made visible. </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.GetImageUrl(Remotion.Web.UI.Controls.FormGridManager.FormGridImage)"><summary> Returns the image URL for the images defined in the <c>FormGridManager</c>. </summary><param name="image">
      The image whose URL should be returned.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.GetRequiredMarker"><summary> Builds the input required marker. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.GetHelpProvider(Remotion.Web.UI.Controls.HelpInfo)"><summary> Builds the help provider. </summary><param name="helpInfo"> 
      The <see cref="T:Remotion.Web.UI.Controls.HelpInfo" /> object used to generate the hyperlink.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.GetValidationMarker(System.String)"><summary> Builds a new marker for validation errors. </summary><param name="toolTip"> 
      The tool tip to be displayed upon hovering over the marker.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.GetBlankMarker"><summary> Returns a spacer to be used instead of a marker. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.CheckFormGridRowType(System.String,Remotion.Web.UI.Controls.FormGridManager.FormGridRow,Remotion.Web.UI.Controls.FormGridManager.FormGridRowType)"><summary>
              Compares the <paramref name="formGridRow" />'s <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRowType" /> against the 
              type passed in <paramref name="expectedFormGridRowType" />.
            </summary><param name="argumentName">
      The display name of <paramref name="formGridRow" />
    </param><param name="formGridRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> to be checked.
    </param><param name="expectedFormGridRowType">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRowType" /> wanted.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.HasSeperateControlsRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary>
              Tests the labels matches the controls row.
            </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> to check.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.PopulateFormGridList(System.Web.UI.Control)"><summary> Registers all suffixed tables for this <c>FormGridManager</c>. </summary><param name="control">
      Parent element of the HtmlTable objects
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#ResolveUrl(System.String)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#get_BindingContainer"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#get_TemplateControl"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#set_TemplateControl(System.Web.UI.TemplateControl)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#get_AppRelativeTemplateSourceDirectory"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#set_AppRelativeTemplateSourceDirectory(System.String)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridSuffix"><summary> The suffix identifying all tables managed by this <c>FormGridManager</c>. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.LabelsColumn"><summary>
              Specifies which column in the table or tables contains the labels.
              Must be less than the value of <see cref="P:Remotion.Web.UI.Controls.FormGridManager.ControlsColumn" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.ControlsColumn"><summary>
              Specifies which column in the table or tables contains the controls for single-line rows.
              Must be higher than the value of <see cref="P:Remotion.Web.UI.Controls.FormGridManager.LabelsColumn" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.ValidatorVisibility"><summary> Defines how the validation messages are displayed. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.ShowValidationMarkers"><summary> Enables/Disables the validation markers. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.ShowRequiredMarkers"><summary> Enables/Disables the required markers. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.ShowHelpProviders"><summary> Enables/Disables the help providers. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.HasMarkersColumn"><summary> Returns <see langname="true" /> if the markers column is needed. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.HasValidationMessageColumn"><summary>
              Returns <see langname="true" /> if the validation messages are shown in an extra column.
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.ImageExtension"><summary> Extension of the images. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassTable"><summary> CSS-Class applied to the form grid tables' <c>table</c> tag. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassTitleCell"><summary> CSS-Class applied to the cell containing the header. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassSubTitleCell"><summary> CSS-Class applied to the cell containing a sub title. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassLabelsCell"><summary> CSS-Class applied to the cells containing the labels. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassMarkersCell"><summary>
              CSS-Class applied to the cells containing the marker controls
              (required, validation error, help).
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassInputControlsCell"><summary> CSS-Class applied to the cells containing the input controls. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassValidationMessagesCell"><summary> CSS-Class applied to the cells containing the validation messages. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassTopDataRow"><summary> CSS-Class additionally applied to the first row after the header row. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassInputControl"><summary> CSS-Class applied to the input controls. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassValidationMessage"><summary> CSS-Class applied to the individual validation messages. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassValidator"><summary> CSS-Class applied to the validators vreated by the <see cref="T:Remotion.Web.UI.Controls.FormGridManager" />. </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridManager.FormGridImage"><summary> A list of possible images/icons displayed in the Form Grid. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridImage.Spacer"><summary> A blank image to be used as a spacer. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridImage.RequiredField"><summary> Used for field's with a mandatory input. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridImage.Help"><summary> Used to indicate a help link. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridImage.ValidationError"><summary> Used if an entered value does not validate. </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridManager.ResourceIdentifier"><summary> A list of form grid manager wide resources. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.ResourceIdentifier.RequiredFieldAlternateText"><summary>The alternate text for the required icon.</summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.ResourceIdentifier.HelpAlternateText"><summary>The alternate text for the help icon.</summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.ResourceIdentifier.ValidationErrorInfoAlternateText"><summary>The alternate text for the validation error icon.</summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.ResourceIdentifier.RequiredFieldTitle"><summary>The tool tip text for the required icon.</summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.ResourceIdentifier.HelpTitle"><summary>The tool tip text for the help icon.</summary></member><member name="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid"><summary>
              Wrapper class for a single HtmlTable plus the additional information
              added through the <see cref="T:Remotion.Web.UI.Controls.FormGridManager" />.
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGrid._table"><summary> The <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> used as a base for the form grid. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGrid._rows"><summary> The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> collection for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid" />. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGrid._defaultLabelsColumn"><summary> The column normally containing the labels. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGrid._defaultControlsColumn"><summary> The column normally containing the controls. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGrid.#ctor(System.Web.UI.HtmlControls.HtmlTable,Remotion.Web.UI.Controls.FormGridManager.FormGridRow[],System.Int32,System.Int32)"><summary> 
              Initializes a new isntance of the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid" /> class with the 
              <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> used as a form grid, the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> array 
              and the indeces of the columns normally containing the labels and the controls.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGrid.GetValidationErrors"><summary>
              Returns all <see cref="T:Remotion.Web.UI.Controls.ValidationError" /> objects defined in the 
              <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> objects collection.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGrid.HasValidationErrors"><summary>
              Searches through the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> objects collection for a validation error.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGrid.HasValidationMarkers"><summary>
              Searches through the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> objects collection for a validation markers.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGrid.HasRequiredMarkers"><summary>
              Searches through the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> objects collection for a required markers.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGrid.HasHelpProviders"><summary> Searches through the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> objects collection for a help providers. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGrid.BuildIDCollection"><summary> Build the ID collection for this form grid. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGrid.GetRowForID(System.String)"><summary>
              Searches for a <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> containing the specified <paramref name="id" />.
            </summary><param name="id">
        The control ID to find the row for.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGrid.InsertNewFormGridRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow,System.String,Remotion.Web.UI.Controls.FormGridRowInfo.RowPosition)"><summary>
              Inserts a <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> at the position specified by 
              <paramref name="positionInFormGrid" /> and <paramref name="relatedRowID" />.
            </summary><param name="newFormGridRow">
        The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> to insert.
      </param><param name="relatedRowID">
        The ID of the row used to find the insert position.
        </param><param name="positionInFormGrid">
        Specifies where to insert the row in relation to <paramref name="relatedRowID" />
      </param></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGrid.Table"><summary> The <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> used as base for the form grid. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGrid.Rows"><summary> The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRowCollection" /> for this <c>FormGrid</c>. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGrid.DefaultLabelsColumn"><summary> Gets or sets the index of the column used for labels. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGrid.DefaultControlsColumn"><summary> Gets or sets the index of the column used for controls. </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRowCollection"><summary> A collection of <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> objects. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRowCollection._ownerFormGrid"><summary> The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid" /> to which this collection belongs to. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRowCollection.#ctor(Remotion.Web.UI.Controls.FormGridManager.FormGrid,Remotion.Web.UI.Controls.FormGridManager.FormGridRow[])"><summary> Simple constructor. </summary><param name="ownerFormGrid">
        The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid" /> to which this collection belongs to.
      </param><param name="formGridRows">
        The array of <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> object to be managed by this collection.
        May not contain null references.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRowCollection.OnInsert(System.Int32,System.Object)"><summary> Allows only the insertion of objects of type of <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />. </summary><param name="index">
        The zero-based index at which to insert value.
      </param><param name="value">
        The new value of the element at index.
      </param></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRowCollection.Item(System.Int32)"><summary> A read only indexer for the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> objects. </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow"><summary>
              Wrapper class for one or more <see cref="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.HtmlTableRows" /> forming a logical row in the 
              <see cref="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.FormGrid" /> object's base <see cref="T:System.Web.UI.HtmlControls.HtmlTable" />.
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._formGrid"><summary> The <see cref="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.FormGrid" /> instance this <c>FormGridRow</c> is a part of. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._htmlTableRows"><summary> The <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> collection for this <c>FormGridRow</c>. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._type"><summary> The type of this <c>FormGridRow</c>. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._visible"><summary> <see langword="true" /> if the row sould be rendered. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._validationErrors"><summary> The <c>ValidationError</c> objects for this <c>FormGridRow</c>. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._validationMarker"><summary> The validation marker for this <c>FormGridRow</c>. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._requiredMarker"><summary>The required marker for this <c>FormGridRow</c>. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._helpProvider"><summary> The help provider for this <c>FormGridRow</c>. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._labelsRowIndex"><summary> The index of the row containing the labels cell. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._controlsRowIndex"><summary> The index of the row containing the controls cell. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._labelsColumn"><summary> The index of the column normally containing the labels cell. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._controlsColumn"><summary> The index of the column normally containing the controls cell. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._labelsCell"><summary> The cell containing the labels. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._controlsCell"><summary> The cell containing the controls. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._controlsCellDummy"><summary>
              The cell used as a place holder if the controls cell is not at the standard position.
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._markersCell"><summary> The cell containing the markers. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._validationMessagesCell"><summary> The cell containing the validation messages. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._validationMessagesCellDummy"><summary>
              The cell used as a place holder if the validation message cell is not at the standard
              position.
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._controls"><summary> The Web.UI.Controls in this <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />, using the ID as key. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.#ctor(System.Web.UI.HtmlControls.HtmlTableRow[],Remotion.Web.UI.Controls.FormGridManager.FormGridRowType,System.Int32,System.Int32,System.Boolean)"><summary> Simple contructor. </summary><param name="htmlTableRows">
        The array of <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> objects logically forming this <c>FormGridRow</c>.
        Must not be empty or contain <see langword="null" />
      </param><param name="type">
        The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRowType" /> represented by this object.
      </param><param name="labelsColumn">
        The index of the labels column.
      </param><param name="controlsColumn">
        The index of the controls column.
      </param><param name="isGenerated">
        <see langword="true"> if this row has been generated by a <see cref="T:Remotion.Web.UI.Controls.IFormGridRowProvider" />.</see>
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.SetLabelsCell(System.Int32,System.Int32)"><summary> Set the labels cell for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />. </summary><param name="rowIndex">
        The index of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> containing the labels cell.
      </param><param name="cellIndex"> 
        The index of the labels cell in the sepcified <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.SetControlsCell(System.Int32,System.Int32)"><summary> Set the controls cell for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />. </summary><param name="rowIndex">
        The index of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> containing the controls cell.
      </param><param name="cellIndex"> 
        The index of the controls cell in the sepcified <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.SetControlsCellDummy(System.Int32,System.Int32)"><summary> Set the controls cell dummy for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />. </summary><param name="rowIndex">
        The index of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> containing the controls cell dummy cell.
      </param><param name="cellIndex"> 
        The index of the controls cell dummy cell in the sepcified <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.SetMarkersCell(System.Int32,System.Int32)"><summary> Set the markers cell for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />. </summary><param name="rowIndex">
      The index of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> containing the markers cell.
      </param><param name="cellIndex"> 
        The index of the markers cell in the sepcified <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.SetValidationMessagesCell(System.Int32,System.Int32)"><summary> Set the validation messages cell for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />. </summary><param name="rowIndex">
        The index of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> containing the validation messages cell.
      </param><param name="cellIndex"> 
        The index of the validation messages cell in the sepcified <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.SetValidationMessagesCellDummy(System.Int32,System.Int32)"><summary>Set the labels validation messages cell dummy for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.</summary><param name="rowIndex">
        The index of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> containing the validation messages cell dummy.
      </param><param name="cellIndex"> 
        The index of the validation messages cell dummy in the sepcified.
        <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.CheckCellRange(System.Int32,System.Int32)"><summary> Checks if the indices are inside the bounds. </summary><param name="rowIndex">
        The index of row in the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.ReadOnlyHtmlTableRowCollection" />.
      </param><param name="cellIndex">
        The index of the cell in row denoted by <paramref name="rowIndex" />.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.BuildIDCollection"><summary>
              Fills a <see cref="T:System.Collections.Hashtable" /> with the controls contained in this 
              <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />, using their ID as a key.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.GetControlForID(System.String)"><summary> Returns the control with the specified ID or <see langword="null" />. </summary><param name="id">
        The ID to look up.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ContainsControlWithID(System.String)"><summary> 
              Returns <see langword="true" /> if the control with the specified ID is contained 
              in the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </summary><param name="id">
        The ID to look up. </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.CheckVisibility"><summary>
              Checks whether the row should be rendered.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.Hide"><summary>
              Sets the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> and its contained <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> objects
              invisible.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.Show"><summary>
              Sets the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> and its contained <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> 
              visible.
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.FormGrid"><summary>
              The <see cref="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.FormGrid" /> instance of which this <c>FormGridRow</c> is a part of.
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.HtmlTableRows"><summary> The <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> collection for this <c>FormGridRow</c>. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.Type"><summary> The type of this <c>FormGridRow</c>. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.Visible"><summary>
              Gets or sets a value indicating whether the contained <see cref="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.HtmlTableRows" />
              should be rendered on as Ui on the page.
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.IsGenerated"><summary> Gets a value indicating whether this row has been generated from a <see cref="T:Remotion.Web.UI.Controls.IFormGridRowProvider" />. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ValidationErrors"><summary> The <c>ValidationError</c> objects for this <c>FormGridRow</c>. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ValidationMarker"><summary> The validation marker for this <c>FormGridRow</c>. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.RequiredMarker"><summary> The required marker for this <c>FormGridRow</c>. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.HelpProvider"><summary> The help provider for this <c>FormGridRow</c>. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.LabelsRowIndex"><summary> The index of the row containing the labels cell. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ControlsRowIndex"><summary> The index of the row containing the controls cell. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.LabelsColumn"><summary> The index of the column normally containing the labels cell. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ControlsColumn"><summary> The index of the column normally containing the controls cell. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.LabelsRow"><summary> The <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> containing the labels cell. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ControlsRow"><summary> The <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> containing the controls cell. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.LabelsCell"><summary> The cell containing the labels. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ControlsCell"><summary> The cell containing the controls. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ControlsCellDummy"><summary>
              The cell used as a place holder if the controls cell is not at the standard position.
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.MarkersCell"><summary> The cell containing the markers. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ValidationMessagesCell"><summary> The cell containing the validation messages. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ValidationMessagesCellDummy"><summary>
              The cell used as a place holder if the validation message cell is not at the standard
              position.
            </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridManager.ReadOnlyHtmlTableRowCollection"><summary> A read only collection of <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> objects. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ReadOnlyHtmlTableRowCollection.#ctor(System.Web.UI.HtmlControls.HtmlTableRow[])"><summary> Simple constructor. </summary><param name="htmlTableRows">
        The array of <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> object to be managed by this collection.
        May not contain null references.
      </param></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.ReadOnlyHtmlTableRowCollection.Item(System.Int32)"><summary> A read only indexer for the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> onbjects. </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRowType"><summary> The row types possible for a <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRowType.TitleRow"><summary> The row containing the form grid's title. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRowType.SubTitleRow"><summary> The row containing the form grid's title. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRowType.DataRow"><summary> A row containing labels, controls and validators. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRowType.UnknownRow"><summary> A row that can not be identified as one of the other types. </summary></member><member name="T:Remotion.Web.UI.Controls.ValidatorVisibility"><summary> Defiens how the validators are displayed in the FormGrid. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidatorVisibility.HideValidators"><summary> Don't display the validation messages. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidatorVisibility.ShowValidators"><summary> Leave displaying the validation messages to the individual validation controls. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidatorVisibility.ValidationMessageInControlsColumn"><summary>
              Display the validation message in the same cell as as the invalid control's.
              Default implementation display each message inside it own <c>div</c>-tag.
            </summary></member><member name="F:Remotion.Web.UI.Controls.ValidatorVisibility.ValidationMessageAfterControlsColumn"><summary>
              Display the validation message in a new cell inserted after the invalid control's cell.
              Default implementation display each message inside it own <c>div</c>-tag.
            </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridRowInfo"><summary>
              The information for the automatic creation of a new <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />. 
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridRowInfo._control"><summary> The control to the inserted into the row. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridRowInfo._newRowType"><summary>
              The <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo.RowType" /> for the new <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridRowInfo._positionInFormGrid"><summary>
              The <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo.RowPosition" /> for inserting the new 
              <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridRowInfo._releatedRowID"><summary>
              The row used as a point of reference for inserting the new 
              <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridRowInfo.#ctor(System.Web.UI.Control,Remotion.Web.UI.Controls.FormGridRowInfo.RowType,System.String,Remotion.Web.UI.Controls.FormGridRowInfo.RowPosition)"><summary> 
              Initiliazes a new instance of the <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo" /> class with all 
              required information.
            </summary><param name="control"> The control to the inserted into the row. </param><param name="newRowType">
              The <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo.RowType" /> for the new <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </param><param name="relatedRowID">
              The row used as a point of reference for inserting the new 
              <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </param><param name="positionInFormGrid">
              The <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo.RowPosition" /> for inserting the new 
              <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </param></member><member name="P:Remotion.Web.UI.Controls.FormGridRowInfo.Control"><summary> Gets the control to the inserted into the row.  </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridRowInfo.NewRowType"><summary>
              Gets the <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo.RowType" /> for the new <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridRowInfo.ReleatedRowID"><summary> 
              Gets the row used as a point of reference when inserting the new 
              <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridRowInfo.PositionInFormGrid"><summary> 
              Gets the <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo.RowPosition" /> for inserting the new 
              <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridRowInfo.RowPosition"><summary> The possible positions for inserting the new row relative to a given ID. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridRowInfo.RowPosition.BeforeRowWithID"><summary> Place the row before the row containing the ID. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridRowInfo.RowPosition.AfterRowWithID"><summary> Place the row after the row containing the ID. </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridRowInfo.RowType"><summary> The possible layouts for the new <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridRowInfo.RowType.ControlInRowWithLabel"><summary> Label and Control will be placed into the same row. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridRowInfo.RowType.ControlInRowAfterLabel"><summary> The Control will be placed in a seperat row, following the Label's row. </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridRowInfoCollection"><summary> A read only collection of <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> objects. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridRowInfoCollection.#ctor(Remotion.Web.UI.Controls.FormGridRowInfo[])"><summary> 
              Initalizates a new <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfoCollection" /> class
              with an array of <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo" /> objects.
            </summary><param name="values">
              The array of <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo" /> object to be managed by this collection.
              May not contain <see langword="null" />.
            </param></member><member name="M:Remotion.Web.UI.Controls.FormGridRowInfoCollection.#ctor"><summary> Initalizates a new <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfoCollection" /> class. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridRowInfoCollection.OnInsert(System.Int32,System.Object)"><summary> Allows only the insertion of form grid row prototypes. </summary><param name="index"> The zero-based index at which to insert value. </param><param name="value"> The new value of the element at index. </param></member><member name="M:Remotion.Web.UI.Controls.FormGridRowInfoCollection.Add(Remotion.Web.UI.Controls.FormGridRowInfo)"><summary> Adds the form grid row prototype to the end of the list. </summary><param name="value"> The new form grid row prototype. </param></member><member name="T:Remotion.Web.UI.Controls.HelpInfo"><summary>
            The <see cref="T:Remotion.Web.UI.Controls.HelpInfo" /> type is used to group all information required for displaying a help-link in a form-grid.
            </summary></member><member name="M:Remotion.Web.UI.Controls.HelpInfo.#ctor(System.String)"><summary>
            Initializes a new instance of the <see cref="T:Remotion.Web.UI.Controls.HelpInfo" /> type.
            </summary><param name="navigateUrl">The URL assigned to the hyperlinks <c>href</c>-attribute. Must not be <see langword="null" /> or empty.</param></member><member name="M:Remotion.Web.UI.Controls.HelpInfo.#ctor(System.String,System.String,System.String,System.String)"><summary>
            Initializes a new instance of the <see cref="T:Remotion.Web.UI.Controls.HelpInfo" /> type.
            </summary><param name="navigateUrl">The URL assigned to the hyperlinks <c>href</c>-attribute. Must not be <see langword="null" /> or empty.</param><param name="target">The target for the <paramref name="navigateUrl" />.</param><param name="toolTip">The tool-tip to be displayed when hovering over the help-link.</param><param name="onClick">The javascript to be executed for the <c>OnClick</c> event on the client.</param></member><member name="P:Remotion.Web.UI.Controls.HelpInfo.NavigateUrl"><summary>
            Gets the URL to be rendered. Use the <c>~/</c> notation to specify an URL relative to the application-root.
            </summary></member><member name="P:Remotion.Web.UI.Controls.HelpInfo.Target"><summary>
            Gets the target for the <see cref="P:Remotion.Web.UI.Controls.HelpInfo.NavigateUrl" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.HelpInfo.OnClick"><summary>
            Gets the javascript to be executed for the <c>OnClick</c> event on the client.
            </summary></member><member name="P:Remotion.Web.UI.Controls.HelpInfo.ToolTip"><summary>
            Gets the tool-tip to be displayed when hovering over the help-link.
            </summary></member><member name="T:Remotion.Web.UI.Controls.HtmlHeadContents"><summary>
              When added to the webform (inside the head element), the <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> 
              control renderes the controls registered with <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.HtmlHeadContents.Remotion#Web#UI#Controls#IControl#ResolveUrl(System.String)"><summary>
              When added to the webform (inside the head element), the <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> 
              control renderes the controls registered with <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.HtmlHeadContents.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"><summary>
              When added to the webform (inside the head element), the <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> 
              control renderes the controls registered with <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.HtmlHeadContents.Remotion#Web#UI#Controls#IControl#get_BindingContainer"><summary>
              When added to the webform (inside the head element), the <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> 
              control renderes the controls registered with <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.HtmlHeadContents.Remotion#Web#UI#Controls#IControl#get_TemplateControl"><summary>
              When added to the webform (inside the head element), the <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> 
              control renderes the controls registered with <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.HtmlHeadContents.Remotion#Web#UI#Controls#IControl#set_TemplateControl(System.Web.UI.TemplateControl)"><summary>
              When added to the webform (inside the head element), the <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> 
              control renderes the controls registered with <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.HtmlHeadContents.Remotion#Web#UI#Controls#IControl#get_AppRelativeTemplateSourceDirectory"><summary>
              When added to the webform (inside the head element), the <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> 
              control renderes the controls registered with <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.HtmlHeadContents.Remotion#Web#UI#Controls#IControl#set_AppRelativeTemplateSourceDirectory(System.String)"><summary>
              When added to the webform (inside the head element), the <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> 
              control renderes the controls registered with <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.HtmlHeadContents.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"><summary>
              When added to the webform (inside the head element), the <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> 
              control renderes the controls registered with <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.HtmlHeadContents.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"><summary>
              When added to the webform (inside the head element), the <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> 
              control renderes the controls registered with <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.HtmlHeadContents.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"><summary>
              When added to the webform (inside the head element), the <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> 
              control renderes the controls registered with <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.HtmlHeadContents.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"><summary>
              When added to the webform (inside the head element), the <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> 
              control renderes the controls registered with <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.HtmlHeadContents.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"><summary>
              When added to the webform (inside the head element), the <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> 
              control renderes the controls registered with <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.HtmlHeadContents.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"><summary>
              When added to the webform (inside the head element), the <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> 
              control renderes the controls registered with <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.HtmlHeadContents.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"><summary>
              When added to the webform (inside the head element), the <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> 
              control renderes the controls registered with <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.HtmlHeadContents.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"><summary>
              When added to the webform (inside the head element), the <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> 
              control renderes the controls registered with <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.HtmlHeadContents.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"><summary>
              When added to the webform (inside the head element), the <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> 
              control renderes the controls registered with <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.HtmlHeadContents.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"><summary>
              When added to the webform (inside the head element), the <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> 
              control renderes the controls registered with <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.HtmlHeadElement"><summary>
            Represents the common base type for HTML elements that can be placed inside the <c>head</c>-section of an HTML document.
            <seealso cref="T:Remotion.Web.UI.HtmlHeadAppender" />
            <seealso cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" />
            </summary></member><member name="P:Remotion.Web.UI.Controls.IEditableControl.IsDirty"><summary>
              Specifies whether the value of the control has been changed on the Client since the last load/save operation.
            </summary></member><member name="P:Remotion.Web.UI.Controls.IFocusableControl.FocusID"><summary> Gets the ID of the element to receive the focus when the page is loaded. </summary></member><member name="T:Remotion.Web.UI.Controls.IFormGridRowProvider"><summary>
              Interface for allowing the <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> to query its parent page
              for rows to be inserted and rows to be hidden.
            </summary></member><member name="M:Remotion.Web.UI.Controls.IFormGridRowProvider.GetHiddenRows(System.Web.UI.HtmlControls.HtmlTable)"><summary>
              Returns a list of IDs identifying the rows to be hidden in a form grid.
            </summary><param name="table"> The <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> whose rows will be hidden. </param></member><member name="M:Remotion.Web.UI.Controls.IFormGridRowProvider.GetAdditionalRows(System.Web.UI.HtmlControls.HtmlTable)"><summary>
              Returns a list of <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo" /> objects used to constrtuct and then 
              insert new rows into a form grid.
            </summary><param name="table"> The <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> into which the new rows will be inserted. </param></member><member name="T:Remotion.Web.UI.Controls.INavigationControl"><summary>
              This interface declares the methods required by controls used for navigating between individual pages of a
              web application.
            </summary></member><member name="M:Remotion.Web.UI.Controls.INavigationControl.GetNavigationUrlParameters"><summary> 
              Provides the URL parameters containing the navigation information for this control (e.g. the selected tab).
            </summary></member><member name="T:Remotion.Web.UI.Controls.IValidatableControl"><summary>
              Provides the ability to register validators with their target control and call validate on the web controls themselves.
            </summary></member><member name="M:Remotion.Web.UI.Controls.IValidatableControl.RegisterValidator(System.Web.UI.WebControls.BaseValidator)"><summary>
              Registers a validator that references this control.
            </summary></member><member name="M:Remotion.Web.UI.Controls.IValidatableControl.Validate"><summary>
              Calls <see cref="M:System.Web.UI.WebControls.BaseValidator.Validate" /> on all registered validators.
            </summary></member><member name="M:Remotion.Web.UI.Controls.IValidatableControl.PrepareValidation"><summary>
            This method puts the control into a state in which validation can be performed. 
            This may include populating control values from the view state explicitly.
            </summary></member><member name="T:Remotion.Web.UI.Controls.ValidatableControlInitializer"><summary>
              Initializes validators for <see cref="T:Remotion.Web.UI.Controls.IValidatableControl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidatableControlInitializer.InitializeValidatableControls(System.Web.UI.Page)"><summary>
              Registers validators with their <see cref="T:Remotion.Web.UI.Controls.IValidatableControl" /> web controls.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidatableControlInitializer.#ctor(System.Web.UI.Page)"><summary>
              Creates a new initializer for <c>page</c> and all sub-controls.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidatableControlInitializer.EnsureValidatableControlsInitialized"><summary>
              When called the first time, registers validators with their controls. Call this method before validating.
            </summary></member><member name="T:Remotion.Web.UI.Controls.JavaScriptInclude"><summary>
            Represents a <c>script</c> element for javascript includes.
            </summary></member><member name="P:Remotion.Web.UI.Controls.LengthValidator.MinimumLength"><summary> The minimum number of characters allowed. </summary></member><member name="P:Remotion.Web.UI.Controls.LengthValidator.MaximumLength"><summary> The maximum number of characters allowed. </summary></member><member name="F:Remotion.Web.UI.Controls.WebTab._ownerControl"><summary> The control to which this object belongs. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTab.#ctor(System.String,System.String,Remotion.Web.UI.Controls.IconInfo)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTab.#ctor(System.String,System.String,System.String)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTab.#ctor(System.String,System.String)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTab.#ctor"><summary> Initalizes a new instance. For VS.NET Designer use only. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTab.OnOwnerControlChanged"><summary> Is called when the value of <see cref="P:Remotion.Web.UI.Controls.WebTab.OwnerControl" /> has changed. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTab.PreRender"><summary> Is called when the <see cref="P:Remotion.Web.UI.Controls.WebTab.OwnerControl" /> is Pre-Rendered. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTab.SetTabStrip(Remotion.Web.UI.Controls.WebTabStrip)"><summary> Sets this tab's <see cref="T:Remotion.Web.UI.Controls.WebTabStrip" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTab.SetSelected(System.Boolean)"><summary> Sets the tab's selection state. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTab.ItemID"><summary> Gets or sets the ID of this tab. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTab.Text"><summary> Gets or sets the text displayed in this tab. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTab.Icon"><summary> Gets or sets the icon displayed in this tab. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTab.TabStrip"><summary> Gets the <see cref="T:Remotion.Web.UI.Controls.WebTabStrip" /> to which this tab belongs. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTab.IsSelected"><summary> Gets or sets a flag that determines whether this node is the selected node of the tree view. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTab.DisplayedTypeName"><summary> Gets the human readable name of this type. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTab.OwnerControl"><summary> Gets or sets the control to which this object belongs. </summary></member><member name="M:Remotion.Web.UI.Controls.MenuTab.ResetCommand"><summary> Sets the <see cref="P:Remotion.Web.UI.Controls.MenuTab.Command" /> to its default value. </summary></member><member name="M:Remotion.Web.UI.Controls.MenuTab.ShouldSerializePersistedCommand"><summary> Controls the persisting of the <see cref="P:Remotion.Web.UI.Controls.MenuTab.Command" />. </summary></member><member name="P:Remotion.Web.UI.Controls.MenuTab.Command"><summary> Gets or sets the <see cref="T:Remotion.Web.UI.Controls.NavigationCommand" /> rendered for this menu item. </summary></member><member name="M:Remotion.Web.UI.Controls.MainMenuTab.#ctor"><summary> Initalizes a new instance. For VS.NET Designer use only. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabCollection.#ctor(Remotion.Web.UI.Controls.IControl,System.Type[])"><summary> Initializes a new instance. </summary><param name="ownerControl"> Owner control. </param><param name="supportedTypes">
              Supported types must either be <see cref="T:Remotion.Web.UI.Controls.WebTab" /> or derived from <see cref="T:Remotion.Web.UI.Controls.WebTab" />. 
              Must not be <see langword="null" /> or contain items that are <see langword="null" />.
            </param></member><member name="M:Remotion.Web.UI.Controls.WebTabCollection.#ctor(Remotion.Web.UI.Controls.IControl)"><summary> Initializes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabCollection.DeselectTab(Remotion.Web.UI.Controls.WebTab,System.Int32)"><summary> Deselects a <see cref="T:Remotion.Web.UI.Controls.WebTab" /> whose position in the list is still occupied. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabCollection.Find(System.String)"><summary>
              Finds the <see cref="T:Remotion.Web.UI.Controls.WebTab" /> with a <see cref="P:Remotion.Web.UI.Controls.WebTab.ItemID" /> of <paramref name="id" />.
            </summary><param name="id"> The ID to look for. </param></member><member name="M:Remotion.Web.UI.Controls.MainMenuTabCollection.#ctor(Remotion.Web.UI.Controls.IControl,System.Type[])"><summary> Initializes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.MainMenuTabCollection.#ctor(Remotion.Web.UI.Controls.IControl)"><summary> Initializes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.SubMenuTabCollection.#ctor(Remotion.Web.UI.Controls.IControl,System.Type[])"><summary> Initializes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.SubMenuTabCollection.#ctor(Remotion.Web.UI.Controls.IControl)"><summary> Initializes a new instance. </summary></member><member name="T:Remotion.Web.UI.Controls.NavigationCommand"><summary> A <see cref="T:Remotion.Web.UI.Controls.NavigationCommand" /> defines an action the user can invoke when navigating between pages. </summary></member><member name="M:Remotion.Web.UI.Controls.NavigationCommand.AddAttributesToRenderForWxeFunctionCommand(System.Web.UI.HtmlTextWriter,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)"><summary> Adds the attributes for the Wxe Function command to the anchor tag. </summary><param name="writer"> The <see cref="T:System.Web.UI.HtmlTextWriter" /> object to use. Must not be <see langword="null" />. </param><param name="postBackEvent">
              The string executed upon the click on a command of types
              <see cref="F:Remotion.Web.UI.Controls.CommandType.Event" /> or <see cref="F:Remotion.Web.UI.Controls.CommandType.WxeFunction" />.
              This string is usually the call to the <c>__doPostBack</c> script function used by ASP.net
              to force a post back. Must not be <see langword="null" />.
            </param><param name="onClick"> 
              The string always rendered in the <c>onClick</c> tag of the anchor element. 
            </param><param name="additionalUrlParameters">
              The <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing additional url parameters.
              Must not be <see langword="null" />.
            </param><param name="includeNavigationUrlParameters"> 
              <see langword="true" /> to include URL parameters provided by <see cref="T:Remotion.Web.UI.ISmartNavigablePage" />.
            </param></member><member name="M:Remotion.Web.UI.Controls.NavigationCommand.GetWxeFunctionPermanentUrl(System.Collections.Specialized.NameValueCollection)"><summary> 
              Gets the permanent URL for the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> defined by the 
              <see cref="T:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo" />.
            </summary><param name="additionalUrlParameters">
              The <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing additional url parameters. 
              Must not be <see langword="null" />.
            </param></member><member name="M:Remotion.Web.UI.Controls.NavigationCommand.GetWxeFunctionPermanentUrl"><summary> 
              Gets the permanent URL for the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> defined by the 
              <see cref="T:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.NumericValidator"><summary> Summary validates the text for a valid numeric value. </summary></member><member name="P:Remotion.Web.UI.Controls.NumericValidator.DataType"><summary> Gets or sets the data type to be tested. </summary></member><member name="P:Remotion.Web.UI.Controls.NumericValidator.AllowNegative"><summary> Gets or sets a value that determines whether negative values are allowed. </summary></member><member name="P:Remotion.Web.UI.Controls.NumericValidator.NumberStyle"><summary> Gets or sets the allowed <see cref="T:System.Globalization.NumberStyles" /> of the value to be tested. </summary></member><member name="M:Remotion.Web.UI.Controls.SingleControlItemCollection.#ctor(Remotion.Web.UI.Controls.IControlItem,System.Type[])"><summary> Creates a new instance. </summary><param name="controlItem">The <see cref="T:Remotion.Web.UI.Controls.IControlItem" /> to be stored in this instance.</param><param name="supportedTypes"> Supported types must implement <see cref="T:Remotion.Web.UI.Controls.IControlItem" />. </param></member><member name="M:Remotion.Web.UI.Controls.SingleControlItemCollection.IsSupportedType(Remotion.Web.UI.Controls.IControlItem)"><summary>Tests whether the specified control item's type is supported by the collection. </summary></member><member name="M:Remotion.Web.UI.Controls.SingleControlItemCollection.Add(Remotion.Web.UI.Controls.IControlItem)"><summary> For Designer Support. (VS2003, VS2005) </summary></member><member name="P:Remotion.Web.UI.Controls.SingleControlItemCollection.Item(System.Int32)"><summary> For Designer Support. (VS2003, VS2005) </summary></member><member name="P:Remotion.Web.UI.Controls.SingleView.CssClassBase"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.SingleView" />. </summary></member><member name="P:Remotion.Web.UI.Controls.SingleView.CssClassView"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.SingleView" />'s active view. </summary></member><member name="P:Remotion.Web.UI.Controls.SingleView.CssClassTopControls"><summary> Gets the CSS-Class applied to the top section. </summary></member><member name="P:Remotion.Web.UI.Controls.SingleView.CssClassBottomControls"><summary> Gets the CSS-Class applied to the bottom section. </summary></member><member name="P:Remotion.Web.UI.Controls.SingleView.CssClassViewBody"><summary> Gets the CSS-Class applied to a <c>div</c> wrapping the content and the border elements. </summary></member><member name="P:Remotion.Web.UI.Controls.SingleView.CssClassContent"><summary> Gets the CSS-Class applied to a <c>div</c> intended for formatting the content. </summary></member><member name="P:Remotion.Web.UI.Controls.SingleView.CssClassEmpty"><summary> Gets the CSS-Class applied when the section is empty. </summary></member><member name="T:Remotion.Web.UI.Controls.SmartHyperLink"><summary>
              A <see cref="T:System.Web.UI.WebControls.HyperLink" /> that provides integration into the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" /> framework by
              automatically appending the navigation URL parameters to the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartHyperLink.AddAttributesToRender(System.Web.UI.HtmlTextWriter)"><summary> 
              Uses <see cref="M:Remotion.Web.UI.ISmartNavigablePage.AppendNavigationUrlParameters(System.String)" /> to include the navigation URL parameters
              with the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartHyperLink.Remotion#Web#UI#Controls#IControl#ResolveUrl(System.String)"><summary>
              A <see cref="T:System.Web.UI.WebControls.HyperLink" /> that provides integration into the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" /> framework by
              automatically appending the navigation URL parameters to the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartHyperLink.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"><summary>
              A <see cref="T:System.Web.UI.WebControls.HyperLink" /> that provides integration into the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" /> framework by
              automatically appending the navigation URL parameters to the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartHyperLink.Remotion#Web#UI#Controls#IControl#get_BindingContainer"><summary>
              A <see cref="T:System.Web.UI.WebControls.HyperLink" /> that provides integration into the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" /> framework by
              automatically appending the navigation URL parameters to the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartHyperLink.Remotion#Web#UI#Controls#IControl#get_TemplateControl"><summary>
              A <see cref="T:System.Web.UI.WebControls.HyperLink" /> that provides integration into the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" /> framework by
              automatically appending the navigation URL parameters to the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartHyperLink.Remotion#Web#UI#Controls#IControl#set_TemplateControl(System.Web.UI.TemplateControl)"><summary>
              A <see cref="T:System.Web.UI.WebControls.HyperLink" /> that provides integration into the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" /> framework by
              automatically appending the navigation URL parameters to the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartHyperLink.Remotion#Web#UI#Controls#IControl#get_AppRelativeTemplateSourceDirectory"><summary>
              A <see cref="T:System.Web.UI.WebControls.HyperLink" /> that provides integration into the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" /> framework by
              automatically appending the navigation URL parameters to the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartHyperLink.Remotion#Web#UI#Controls#IControl#set_AppRelativeTemplateSourceDirectory(System.String)"><summary>
              A <see cref="T:System.Web.UI.WebControls.HyperLink" /> that provides integration into the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" /> framework by
              automatically appending the navigation URL parameters to the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartHyperLink.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"><summary>
              A <see cref="T:System.Web.UI.WebControls.HyperLink" /> that provides integration into the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" /> framework by
              automatically appending the navigation URL parameters to the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartHyperLink.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"><summary>
              A <see cref="T:System.Web.UI.WebControls.HyperLink" /> that provides integration into the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" /> framework by
              automatically appending the navigation URL parameters to the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartHyperLink.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"><summary>
              A <see cref="T:System.Web.UI.WebControls.HyperLink" /> that provides integration into the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" /> framework by
              automatically appending the navigation URL parameters to the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartHyperLink.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"><summary>
              A <see cref="T:System.Web.UI.WebControls.HyperLink" /> that provides integration into the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" /> framework by
              automatically appending the navigation URL parameters to the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartHyperLink.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"><summary>
              A <see cref="T:System.Web.UI.WebControls.HyperLink" /> that provides integration into the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" /> framework by
              automatically appending the navigation URL parameters to the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartHyperLink.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"><summary>
              A <see cref="T:System.Web.UI.WebControls.HyperLink" /> that provides integration into the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" /> framework by
              automatically appending the navigation URL parameters to the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartHyperLink.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"><summary>
              A <see cref="T:System.Web.UI.WebControls.HyperLink" /> that provides integration into the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" /> framework by
              automatically appending the navigation URL parameters to the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartHyperLink.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"><summary>
              A <see cref="T:System.Web.UI.WebControls.HyperLink" /> that provides integration into the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" /> framework by
              automatically appending the navigation URL parameters to the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartHyperLink.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"><summary>
              A <see cref="T:System.Web.UI.WebControls.HyperLink" /> that provides integration into the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" /> framework by
              automatically appending the navigation URL parameters to the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartHyperLink.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"><summary>
              A <see cref="T:System.Web.UI.WebControls.HyperLink" /> that provides integration into the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" /> framework by
              automatically appending the navigation URL parameters to the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartLabel.FormatLabelText(System.String,System.Boolean,System.String@)"><summary>
              Formats the string to support an access key:
              Looks for an ampersand and optionally highlights the next letter with &lt;u&gt;&lt;/u&gt;.
            </summary></member><member name="P:Remotion.Web.UI.Controls.SmartLabel.ForControl"><summary>
              The ID of the control to display a label for.
            </summary></member><member name="P:Remotion.Web.UI.Controls.SmartLabel.Text"><summary>
              Gets or sets the text displayed if the <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> is not bound to an 
              <see cref="T:Remotion.Web.UI.Controls.ISmartControl" /> or the <see cref="T:Remotion.Web.UI.Controls.ISmartControl" /> does provide a 
              <see cref="P:Remotion.Web.UI.Controls.ISmartControl.DisplayName" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.StyleSheetBlock"><summary>
            Represents a <c>style</c> element. Use types derived from <see cref="T:Remotion.Web.UI.Controls.StyleSheetElement" /> to provide the element's content.
            <seealso cref="T:Remotion.Web.UI.Controls.StyleSheetImportRule" />
            </summary></member><member name="T:Remotion.Web.UI.Controls.StyleSheetElement"><summary>
            Represents the common base type for elements that can be placed inside of the <see cref="T:Remotion.Web.UI.Controls.StyleSheetBlock" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.StyleSheetImportRule"><summary>
            Represents an <c>import url(...)</c> rule for css inlcudes.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SubMenuTab.#ctor"><summary> Initalizes a new instance. For VS.NET Designer use only. </summary></member><member name="T:Remotion.Web.UI.Controls.TabbedMenu"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.OnInit(System.EventArgs)"><summary> Overrides the <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> method. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.CreateChildControls"><summary> Overrides the <see cref="M:System.Web.UI.Control.CreateChildControls" /> method. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.EnsureSubMenuTabStripPopulated"><summary> Ensures that the <see cref="P:Remotion.Web.UI.Controls.TabbedMenu.SubMenuTabStrip" /> is populated with the tabs from the selected 
              <see cref="T:Remotion.Web.UI.Controls.MainMenuTab" />'s <see cref="P:Remotion.Web.UI.Controls.MainMenuTab.SubMenuTabs" />. 
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.RefreshSubMenuTabStrip"><summary> 
              Refreshes the <see cref="P:Remotion.Web.UI.Controls.TabbedMenu.SubMenuTabStrip" /> with the tabs from the selected <see cref="T:Remotion.Web.UI.Controls.MainMenuTab" />'s
              <see cref="P:Remotion.Web.UI.Controls.MainMenuTab.SubMenuTabs" />. 
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.PopulateSubMenuTabStrip"><summary> 
              Populates the <see cref="P:Remotion.Web.UI.Controls.TabbedMenu.SubMenuTabStrip" /> with the tabs from the selected <see cref="T:Remotion.Web.UI.Controls.MainMenuTab" />'s
              <see cref="P:Remotion.Web.UI.Controls.MainMenuTab.SubMenuTabs" />. 
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.OnPreRender(System.EventArgs)"><summary> Overrides the <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> method. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.AddAttributesToRender(System.Web.UI.HtmlTextWriter)"><summary> Overrides the <see cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> method. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.EvaluateWaiConformity"><summary> Checks whether the control conforms to the required WAI level. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.ConvertTabIDsToArray(Remotion.Web.UI.Controls.MainMenuTab,Remotion.Web.UI.Controls.SubMenuTab)"><summary> 
              Creates a string array from the IDs of the provided <paramref name="mainMenuTab" /> and 
              <paramref name="subMenuTab" />.
            </summary><param name="mainMenuTab"> 
              The <see cref="T:Remotion.Web.UI.Controls.MainMenuTab" />. If <see langword="null" />, an empty array will be returned.
            </param><param name="subMenuTab"> The <see cref="T:Remotion.Web.UI.Controls.SubMenuTab" />. </param></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.LoadSelection"><summary> Loads the selected tabs from the window state or the query string. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.GetSelectionFromQueryString"><summary> Gets the IDs of the tabs to be selected from the query string. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.GetSelectionFromWindowState"><summary> Gets the IDs of the tabs to be selected from the <see cref="T:Remotion.Web.UI.IWindowStateManager" />. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.SaveSelection"><summary> Saves the selected tabs into the window state. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#INavigationControl#GetNavigationUrlParameters"><summary> 
              Provides the URL parameters containing the navigation information for this control (e.g. the selected tab).
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.GetUrlParameters(Remotion.Web.UI.Controls.TabbedMenuImplementation.IMenuTab)"><summary> Gets the parameters required for selecting the <paramref name="menuTab" />. </summary><param name="menuTab"> 
              The <see cref="T:Remotion.Web.UI.Controls.MenuTab" /> that should be selected by the when using the returned URL parameters. 
              Must not be <see langword="null" />.
            </param></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.FormatUrl(System.String)"><summary> 
              Adds parameters required for re-selecting the currently selected <see cref="T:Remotion.Web.UI.Controls.MenuTab" /> to the 
              <paramref name="url" />. 
            </summary><param name="url"> The URL. Must not be <see langword="null" /> or empty. </param></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.FormatUrl(System.String,Remotion.Web.UI.Controls.MenuTab)"><summary> 
              Adds the parameters required for selecting the <paramref name="menuTab" /> to the <paramref name="url" />.
            </summary><param name="url"> The URL. Must not be <see langword="null" /> or empty. </param><param name="menuTab"> 
              The <see cref="T:Remotion.Web.UI.Controls.MenuTab" /> that should be selected by the <paramref name="url" />. 
              Must not be <see langword="null" />.
            </param></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.MainMenuTabStrip_Click(System.Object,Remotion.Web.UI.Controls.WebTabClickEventArgs)"><summary> 
              Event handler for the <see cref="E:Remotion.Web.UI.Controls.WebTabStrip.Click" /> of the <see cref="P:Remotion.Web.UI.Controls.TabbedMenu.MainMenuTabStrip" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.SubMenuTabStrip_Click(System.Object,Remotion.Web.UI.Controls.WebTabClickEventArgs)"><summary> 
              Event handler for the <see cref="E:Remotion.Web.UI.Controls.WebTabStrip.Click" /> of the <see cref="P:Remotion.Web.UI.Controls.TabbedMenu.SubMenuTabStrip" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.HandleTabStripClick(Remotion.Web.UI.Controls.MenuTab)"><summary> 
              Handles the click events of the <see cref="P:Remotion.Web.UI.Controls.TabbedMenu.MainMenuTabStrip" /> and the <see cref="P:Remotion.Web.UI.Controls.TabbedMenu.SubMenuTabStrip" />.
            </summary><param name="tab"> The <see cref="T:Remotion.Web.UI.Controls.MenuTab" /> whose command was clicked. </param></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.OnEventCommandClick(Remotion.Web.UI.Controls.MenuTab)"><summary> Fires the <see cref="E:Remotion.Web.UI.Controls.TabbedMenu.EventCommandClick" /> event. </summary><param name="tab"> The <see cref="T:Remotion.Web.UI.Controls.MenuTab" /> whose command was clicked. </param></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.GetResourceManager"><summary> Find the <see cref="T:Remotion.Globalization.IResourceManager" /> for this control. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.GetResourceManager(System.Type)"><summary> Find the <see cref="T:Remotion.Globalization.IResourceManager" /> for this control. </summary><param name="localResourcesType"> 
              A type with the <see cref="T:Remotion.Globalization.MultiLingualResourcesAttribute" /> applied to it.
              Typically an <b>enum</b> or the derived class itself.
            </param></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.LoadResources(Remotion.Globalization.IResourceManager)"><summary> Loads the resources into the control's properties. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IStyledControl#get_ControlStyle"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IStyledControl#get_Attributes"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#ResolveUrl(System.String)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#get_BindingContainer"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#get_TemplateControl"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#set_TemplateControl(System.Web.UI.TemplateControl)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#get_AppRelativeTemplateSourceDirectory"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#set_AppRelativeTemplateSourceDirectory(System.String)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.TagKey"><summary> Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.TagKey" /> property. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.Controls"><summary> Overrides the <see cref="P:System.Web.UI.Control.Controls" /> property. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.SelectionID"><summary> Gets the ID used for reading and persisting the selected tab IDs. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.Tabs"><summary> Gets the collection of <see cref="T:Remotion.Web.UI.Controls.MainMenuTab" /> objects. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.StatusText"><summary> Gets or sets the text displayed in the status area. </summary></member><member name="E:Remotion.Web.UI.Controls.TabbedMenu.EventCommandClick"><summary> Is raised when a tab with a command of type <see cref="F:Remotion.Web.UI.Controls.CommandType.Event" /> is clicked. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.SelectedMainMenuTab"><summary> Gets the selected <see cref="T:Remotion.Web.UI.Controls.MainMenuTab" />. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.SelectedSubMenuTab"><summary> Gets the selected <see cref="T:Remotion.Web.UI.Controls.SubMenuTab" />. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.MainMenuTabStrip"><summary> Gets the <see cref="T:Remotion.Web.UI.Controls.WebTabStrip" /> used for the main menu. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.SubMenuTabStrip"><summary> Gets the <see cref="T:Remotion.Web.UI.Controls.WebTabStrip" /> used for the sub menu. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.StatusStyle"><summary> Gets the style applied to the status area. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.CssClassBase"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTabStrip" /> itself. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.CssClassMainMenu"><summary> Gets the CSS-Class applied to the main menu's tab strip. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.CssClassSubMenu"><summary> Gets the CSS-Class applied to the sub menu's tab strip. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.CssClassMainMenuCell"><summary> Gets the CSS-Class applied to the main menu cell. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.CssClassSubMenuCell"><summary> Gets the CSS-Class applied to the sub menu cell. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.CssClassStatusCell"><summary> Gets the CSS-Class applied to the status cell. </summary></member><member name="T:Remotion.Web.UI.Controls.MenuTabClickEventHandler"><summary>
              Represents the method that handles the <c>Click</c> event raised when clicking on a <see cref="T:Remotion.Web.UI.Controls.MenuTab" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.MenuTabClickEventArgs"><summary>
              Provides data for the <c>Click</c> event.
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebTabClickEventArgs"><summary>
              Provides data for the <c>Click</c> event.
            </summary></member><member name="F:Remotion.Web.UI.Controls.WebTabClickEventArgs._tab"><summary> The <see cref="T:Remotion.Web.UI.Controls.WebTab" /> that was clicked. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabClickEventArgs.#ctor(Remotion.Web.UI.Controls.WebTab)"><summary> Initializes an instance. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabClickEventArgs.Tab"><summary> The <see cref="T:Remotion.Web.UI.Controls.WebTab" /> that was clicked. </summary></member><member name="M:Remotion.Web.UI.Controls.MenuTabClickEventArgs.#ctor(Remotion.Web.UI.Controls.MenuTab)"><summary> Initializes an instance. </summary></member><member name="P:Remotion.Web.UI.Controls.MenuTabClickEventArgs.Command"><summary> The <see cref="P:Remotion.Web.UI.Controls.MenuTabClickEventArgs.Command" /> that caused the event. </summary></member><member name="P:Remotion.Web.UI.Controls.MenuTabClickEventArgs.Tab"><summary> The <see cref="T:Remotion.Web.UI.Controls.MenuTab" /> that was clicked. </summary></member><member name="T:Remotion.Web.UI.Controls.TabbedMultiView"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Clear"><summary>
              Clears all items.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IStyledControl#get_ControlStyle"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IStyledControl#get_Attributes"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#ResolveUrl(System.String)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#get_BindingContainer"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#get_TemplateControl"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#set_TemplateControl(System.Web.UI.TemplateControl)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#get_AppRelativeTemplateSourceDirectory"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#set_AppRelativeTemplateSourceDirectory(System.String)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"></member><member name="E:Remotion.Web.UI.Controls.TabbedMultiView.ActiveViewChanged"><summary>
              Fired everytime the active view is changed after the <c>LoavViewState</c> phase or if it is not a post back.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.MultiViewTab.#ctor(System.String,System.String,Remotion.Web.UI.Controls.IconInfo)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.MultiViewTab.#ctor(System.String,System.String,System.String)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.MultiViewTab.#ctor(System.String,System.String)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.MultiViewTab.#ctor"><summary> Initalizes a new instance. </summary></member><member name="P:Remotion.Web.UI.Controls.TabView.Title"><summary> Gets or sets the title displayed in the tab for this view. </summary></member><member name="P:Remotion.Web.UI.Controls.TabView.Icon"><summary> Gets or sets the icon displayed in the tab for this view. </summary></member><member name="T:Remotion.Web.UI.Controls.TitleTag"><summary>
            Represents the HTML element <c>title</c>.
            </summary></member><member name="T:Remotion.Web.UI.Controls.ValidationError"><summary>
              Encapsulats an validation error: the effected control, the message and the validator used.
            </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationError._validatedControl"><summary> The control with an invalid state. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationError._validationMessage"><summary> The message to be displayed to the user. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationError._validator"><summary> The validator used to validate the <see cref="F:Remotion.Web.UI.Controls.ValidationError._validatedControl" />. </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationError.#ctor(System.Web.UI.Control,System.Web.UI.IValidator,System.Web.UI.ControlCollection)"><summary>
              Initializes a new instance of the <see cref="T:Remotion.Web.UI.Controls.ValidationError" /> class with the
              <see cref="T:System.Web.UI.Control" /> containing invalid data and the <see cref="T:System.Web.UI.IValidator" />
              used to identify the error.
            </summary><param name="validatedControl"> The control with an invalid state. </param><param name="validator"> The validator used to validate the <paramref name="validatedControl" />.  Must not be <see langword="null" />. </param><param name="labels">The labels containing the control's headings.</param></member><member name="M:Remotion.Web.UI.Controls.ValidationError.#ctor(System.Web.UI.Control,System.String,System.Web.UI.ControlCollection)"><summary>
              Initializes a new instance of the <see cref="T:Remotion.Web.UI.Controls.ValidationError" /> class with the
              <see cref="T:System.Web.UI.Control" /> containing invalid data and the message describing the error.
            </summary><param name="validatedControl"> The control with an invalid state. </param><param name="validationMessage"> The message to be displayed to the user. Must not be <see langword="null" /> or empty. </param><param name="labels">The labels containing the control's headings.</param></member><member name="M:Remotion.Web.UI.Controls.ValidationError.ToLabel(System.String)"><summary>
              Formats the <c>ValidationError</c> as a <see cref="T:System.Web.UI.WebControls.Label" />
              and associates the <see cref="P:Remotion.Web.UI.Controls.ValidationError.ValidatedControl" /> with it.
            </summary><param name="cssClass"> The name of the CSS-class used to format the label. </param></member><member name="M:Remotion.Web.UI.Controls.ValidationError.ToHyperLink(System.String)"><summary>
              Formats the <c>ValidationError</c> as a <see cref="T:System.Web.UI.WebControls.HyperLink" />
              and references the <see cref="P:Remotion.Web.UI.Controls.ValidationError.ValidatedControl" /> through an in-page link.
            </summary><param name="cssClass"> The name of the CSS-class used to format the hyperlink. </param></member><member name="M:Remotion.Web.UI.Controls.ValidationError.ToDiv(System.String)"><summary>
              Places the <c>ValidationError</c>'s message into an <see cref="T:System.Web.UI.HtmlControls.HtmlGenericControl" /> with <b>div</b> tags.
            </summary><param name="cssClass"> The name of the CSS-class used to format the <c>div</c>-tag. </param></member><member name="M:Remotion.Web.UI.Controls.ValidationError.ToSpan(System.String)"><summary>
              Places the <c>ValidationError</c>'s message into an <see cref="T:System.Web.UI.HtmlControls.HtmlGenericControl" /> with <b>span</b> tags.
            </summary><param name="cssClass"> The name of the CSS-class used to format the <c>span</c>-tag. </param></member><member name="M:Remotion.Web.UI.Controls.ValidationError.ToGenericControl(System.String,System.String)"><summary>
              Places the <c>ValidationError</c>'s message into a which ever HTML tag is provided
              and returns this construct as a <see cref="T:System.Web.UI.HtmlControls.HtmlGenericControl" />.
            </summary><param name="cssClass"> The name of the CSS-class used to format the HTML tag. </param><param name="tag"> The HTML tag to be used. </param></member><member name="P:Remotion.Web.UI.Controls.ValidationError.ValidatedControl"><summary> Gets the control with an invalid state. </summary></member><member name="P:Remotion.Web.UI.Controls.ValidationError.ValidationMessage"><summary> The message to be displayed to the user. </summary></member><member name="P:Remotion.Web.UI.Controls.ValidationError.Validator"><summary> Gets the validator used to validate the <see cref="P:Remotion.Web.UI.Controls.ValidationError.ValidatedControl" />. </summary></member><member name="T:Remotion.Web.UI.Controls.ValidationStateViewer"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationStateViewer.c_cssClassValidationMessage"><summary> CSS-Class applied to the individual validation messages. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationStateViewer.c_cssClassValidationNotice"><summary> CSS-Class applied to the validation notice. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationStateViewer._formGridManagers"><summary> Collection of <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances in the page. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationStateViewer._noticeText"><summary>
              The Text displayed if <see cref="P:Remotion.Web.UI.Controls.ValidationStateViewer.ValidationErrorStyle" /> is set to 
              <see cref="F:Remotion.Web.UI.Controls.ValidationErrorStyle.Notice" />.
            </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationStateViewer._validationErrorStyle"><summary> The style in which the validation errors should be displayed on the page. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationStateViewer._cachedResourceManager"><summary> Caches the <see cref="T:Remotion.Globalization.ResourceManagerSet" /> for this <see cref="T:Remotion.Web.UI.Controls.ValidationStateViewer" />. </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.#ctor"><summary> Initializes a new instance of the <see cref="T:Remotion.Web.UI.Controls.ValidationStateViewer" /> class. </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.PopulateFormGridManagerList(System.Web.UI.Control)"><summary> Registers all instances of <see cref="T:Remotion.Web.UI.Controls.FormGridManager" />. </summary><param name="parent"> Parent element of the FormGridManager objects. </param></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.RenderValidationNotice(System.Web.UI.HtmlTextWriter)"><summary> Displays a short notice if validation errors where found. </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.RenderValidationMessages(System.Web.UI.HtmlTextWriter)"><summary> Displays the validation messages for each error. </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.GetResourceManager"><summary>
              Find the <see cref="T:Remotion.Globalization.IResourceManager" /> for this <see cref="T:Remotion.Web.UI.Controls.ValidationStateViewer" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#ResolveUrl(System.String)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#get_BindingContainer"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#get_TemplateControl"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#set_TemplateControl(System.Web.UI.TemplateControl)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#get_AppRelativeTemplateSourceDirectory"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#set_AppRelativeTemplateSourceDirectory(System.String)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="P:Remotion.Web.UI.Controls.ValidationStateViewer.NoticeText"><summary>
              The Text displayed if <see cref="P:Remotion.Web.UI.Controls.ValidationStateViewer.ValidationErrorStyle" /> is set to 
              <see cref="F:Remotion.Web.UI.Controls.ValidationErrorStyle.Notice" />
            </summary></member><member name="P:Remotion.Web.UI.Controls.ValidationStateViewer.ValidationErrorStyle"><summary> Gets or sets a value that defines how the validation errors are displayed on the page. </summary></member><member name="P:Remotion.Web.UI.Controls.ValidationStateViewer.ShowLabels"><summary>
              Gets or sets a flag that determines whether to render the label associated with the erroneous control 
              in front of the error message.
            </summary></member><member name="P:Remotion.Web.UI.Controls.ValidationStateViewer.CssClassValidationMessage"><summary> CSS-Class applied to the individual validation messages. </summary></member><member name="P:Remotion.Web.UI.Controls.ValidationStateViewer.CssClassValidationNotice"><summary> CSS-Class applied to the validation notice. </summary></member><member name="T:Remotion.Web.UI.Controls.ValidationStateViewer.ResourceIdentifier"><summary> A list of validation state viewer wide resources. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationStateViewer.ResourceIdentifier.NoticeText"><summary>The summary message displayed if validation errors where found. </summary></member><member name="T:Remotion.Web.UI.Controls.ValidationErrorStyle"><summary> A list of possible ways to displau the validation messages. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationErrorStyle.HideErrors"><summary> Display no messages. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationErrorStyle.Notice"><summary> Display a short notice if validation errors where found. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationErrorStyle.DetailedMessages"><summary> Display the individual validation messages provided by the FormGridManager. </summary></member><member name="T:Remotion.Web.UI.Controls.WebButton"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)"></member><member name="M:Remotion.Web.UI.Controls.WebButton.AddAttributesToRender_net20(System.Web.UI.HtmlTextWriter)"><summary> Method to be executed when compiled for .net 2.0. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.EvaluateWaiConformity"><summary> Checks whether the control conforms to the required WAI level. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.LoadResources(Remotion.Globalization.IResourceManager)"><summary> Loads the resources into the control's properties. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.Remotion#Web#UI#Controls#IStyledControl#get_ControlStyle"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.Remotion#Web#UI#Controls#IStyledControl#get_Attributes"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.Remotion#Web#UI#Controls#IControl#ResolveUrl(System.String)"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.Remotion#Web#UI#Controls#IControl#get_BindingContainer"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.Remotion#Web#UI#Controls#IControl#get_TemplateControl"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.Remotion#Web#UI#Controls#IControl#set_TemplateControl(System.Web.UI.TemplateControl)"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.Remotion#Web#UI#Controls#IControl#get_AppRelativeTemplateSourceDirectory"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.Remotion#Web#UI#Controls#IControl#set_AppRelativeTemplateSourceDirectory(System.String)"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="P:Remotion.Web.UI.Controls.WebButton.Icon"><summary> Gets or sets the icon displayed in this menu item. </summary></member><member name="P:Remotion.Web.UI.Controls.WebButton.UseLegacyButton"><summary> 
              Gets or sets the flag that determines whether to use a legacy (i.e. input) element for the button or the modern form (i.e. button). 
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebButton.CssClassBase"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebButton" /> itself. </summary></member><member name="P:Remotion.Web.UI.Controls.WebButton.CssClassButtonBody"><summary> Gets the CSS-Class applied to a <c>div</c> intended for formatting the content. </summary></member><member name="P:Remotion.Web.UI.Controls.WebButton.CssClassMouseDown"><summary> Gets the CSS-Class applied when the section is empty. </summary></member><member name="T:Remotion.Web.UI.Controls.WebLinkButton"><summary> A <c>LinkButton</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.LinkButton.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebLinkButton.Remotion#Web#UI#Controls#IControl#ResolveUrl(System.String)"><summary> A <c>LinkButton</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.LinkButton.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebLinkButton.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"><summary> A <c>LinkButton</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.LinkButton.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebLinkButton.Remotion#Web#UI#Controls#IControl#get_BindingContainer"><summary> A <c>LinkButton</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.LinkButton.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebLinkButton.Remotion#Web#UI#Controls#IControl#get_TemplateControl"><summary> A <c>LinkButton</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.LinkButton.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebLinkButton.Remotion#Web#UI#Controls#IControl#set_TemplateControl(System.Web.UI.TemplateControl)"><summary> A <c>LinkButton</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.LinkButton.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebLinkButton.Remotion#Web#UI#Controls#IControl#get_AppRelativeTemplateSourceDirectory"><summary> A <c>LinkButton</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.LinkButton.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebLinkButton.Remotion#Web#UI#Controls#IControl#set_AppRelativeTemplateSourceDirectory(System.String)"><summary> A <c>LinkButton</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.LinkButton.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebLinkButton.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"><summary> A <c>LinkButton</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.LinkButton.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebLinkButton.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"><summary> A <c>LinkButton</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.LinkButton.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebLinkButton.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"><summary> A <c>LinkButton</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.LinkButton.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebLinkButton.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"><summary> A <c>LinkButton</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.LinkButton.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebLinkButton.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"><summary> A <c>LinkButton</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.LinkButton.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebLinkButton.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"><summary> A <c>LinkButton</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.LinkButton.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebLinkButton.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"><summary> A <c>LinkButton</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.LinkButton.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebLinkButton.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"><summary> A <c>LinkButton</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.LinkButton.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebLinkButton.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"><summary> A <c>LinkButton</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.LinkButton.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebLinkButton.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"><summary> A <c>LinkButton</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.LinkButton.Text" />. </summary></member><member name="F:Remotion.Web.UI.Controls.WebMenuItem._command"><summary> The command rendered for this menu item. </summary></member><member name="F:Remotion.Web.UI.Controls.WebMenuItem._ownerControl"><summary> The control to which this object belongs. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItem.OnOwnerControlChanged"><summary> Is called when the value of <see cref="P:Remotion.Web.UI.Controls.WebMenuItem.OwnerControl" /> has changed. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItem.PreRender"><summary> Is called when the <see cref="P:Remotion.Web.UI.Controls.WebMenuItem.OwnerControl" /> is Pre-Rendered. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItem.OnClick"><summary> This mehtod is called when a menu item is clicked on the client side. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItem.ToString"><summary> Returns a <see cref="T:System.String" /> that represents this <see cref="T:Remotion.Web.UI.Controls.WebMenuItem" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItem.ResetCommand"><summary> Sets the <see cref="P:Remotion.Web.UI.Controls.WebMenuItem.Command" /> to its default value. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItem.ShouldSerializePersistedCommand"><summary> Controls the persisting of the <see cref="P:Remotion.Web.UI.Controls.WebMenuItem.Command" />. </summary></member><member name="P:Remotion.Web.UI.Controls.WebMenuItem.DisplayedTypeName"><summary> Gets the human readable name of this type. </summary></member><member name="P:Remotion.Web.UI.Controls.WebMenuItem.Icon"><summary> 
              Gets or sets the image representing the menu item in the rendered page. Must not be <see langword="null" />. 
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebMenuItem.DisabledIcon"><summary> 
              Gets or sets the image representing the disabled menu item in the rendered page. Must not be <see langword="null" />. 
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebMenuItem.Command"><summary> Gets or sets the <see cref="P:Remotion.Web.UI.Controls.WebMenuItem.Command" /> rendered for this menu item. </summary></member><member name="P:Remotion.Web.UI.Controls.WebMenuItem.OwnerControl"><summary> Gets or sets the control to which this object belongs. </summary></member><member name="T:Remotion.Web.UI.Controls.WebMenuItemClickEventHandler"><summary>
              Represents the method that handles the <c>Click</c> event raised when clicking on a menu item.
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebMenuItemClickEventArgs"><summary>
              Provides data for the <c>Click</c> event.
            </summary></member><member name="F:Remotion.Web.UI.Controls.WebMenuItemClickEventArgs._item"><summary> The <see cref="T:Remotion.Web.UI.Controls.WebMenuItem" /> that was clicked. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItemClickEventArgs.#ctor(Remotion.Web.UI.Controls.WebMenuItem)"><summary> Initializes an instance. </summary></member><member name="P:Remotion.Web.UI.Controls.WebMenuItemClickEventArgs.Command"><summary> The <see cref="P:Remotion.Web.UI.Controls.WebMenuItemClickEventArgs.Command" /> that caused the event. </summary></member><member name="P:Remotion.Web.UI.Controls.WebMenuItemClickEventArgs.Item"><summary> The <see cref="T:Remotion.Web.UI.Controls.WebMenuItem" /> that was clicked. </summary></member><member name="T:Remotion.Web.UI.Controls.WebMenuItemCollection"><summary> A collection of <see cref="T:Remotion.Web.UI.Controls.WebMenuItem" /> objects. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItemCollection.GroupMenuItems(Remotion.Web.UI.Controls.WebMenuItem[],System.Boolean)"><summary> Sorts the <paramref name="menuItems" /> by their categories." </summary><param name="menuItems"> Must not be <see langword="null" /> or contain items that are <see langword="null" />. </param><param name="generateSeparators"> <see langword="true" /> to generate a separator before starting a new category. </param></member><member name="M:Remotion.Web.UI.Controls.WebMenuItemCollection.#ctor(Remotion.Web.UI.Controls.IControl,System.Type[])"><summary> Initializes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItemCollection.#ctor(Remotion.Web.UI.Controls.IControl)"><summary> Initializes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItemCollection.GroupMenuItems(System.Boolean)"><summary> Sorts the <see cref="T:Remotion.Web.UI.Controls.WebMenuItem" /> objects by their categories." </summary><param name="generateSeparators"> <see langword="true" /> to generate a separator before starting a new category. </param></member><member name="T:Remotion.Web.UI.Controls.WebTabClickEventHandler"><summary>
              Represents the method that handles the <c>Click</c> event raised when clicking on a web tab.
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStyle.BorderColor"></member><member name="P:Remotion.Web.UI.Controls.WebTabStyle.BorderStyle"></member><member name="P:Remotion.Web.UI.Controls.WebTabStyle.BorderWidth"></member><member name="P:Remotion.Web.UI.Controls.WebTabStyle.Width"></member><member name="P:Remotion.Web.UI.Controls.WebTabStyle.Height"></member><member name="T:Remotion.Web.UI.Controls.WebTabStrip"></member><member name="F:Remotion.Web.UI.Controls.WebTabStrip.c_resourceKeyTabs"><summary> The key identifying a tab resource entry. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.HandleSelectionChangeEvent(System.String)"><summary> Handles the click event for a tab. </summary><param name="itemID"> The id of the tab. </param></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.LoadTabsControlState(System.Object,Remotion.Web.UI.Controls.WebTabCollection)"><summary> Loads the settings of the <paramref name="tabs" /> from <paramref name="tabsControlState" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.SaveTabsControlState(Remotion.Web.UI.Controls.WebTabCollection)"><summary> Saves the settings of the  <paramref name="tabs" /> and returns this view state </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControlWithDesignTimeSupport#PreRenderForDesignMode"><summary> Calls <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> on every invocation. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Globalization#IResourceDispatchTarget#Dispatch(System.Collections.IDictionary)"><summary> Dispatches the resources passed in <paramref name="values" /> to the control's properties. </summary><param name="values"> An <c>IDictonary</c>: &lt;string key, string value&gt;. </param></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Dispatch(System.Collections.IDictionary)"><summary> Dispatches the resources passed in <paramref name="values" /> to the control's properties. </summary><param name="values"> An <c>IDictonary</c>: &lt;string key, string value&gt;. </param></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.LoadResources(Remotion.Globalization.IResourceManager)"><summary> Loads the resources into the control's properties. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.SetSelectedTabInternal(Remotion.Web.UI.Controls.WebTab)"><summary> Sets the selected tab. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#WebTabStripImplementation#IWebTabStrip#get_Style"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IStyledControl#get_ControlStyle"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IStyledControl#get_Attributes"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#ResolveUrl(System.String)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#get_BindingContainer"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#get_TemplateControl"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#set_TemplateControl(System.Web.UI.TemplateControl)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#get_AppRelativeTemplateSourceDirectory"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#set_AppRelativeTemplateSourceDirectory(System.String)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.SelectedTab"><summary> Gets the currently selected tab. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.Tabs"><summary> Gets the tabs displayed by this tab strip. </summary></member><member name="E:Remotion.Web.UI.Controls.WebTabStrip.SelectedIndexChanged"><summary> Occurs when a node is clicked. </summary></member><member name="E:Remotion.Web.UI.Controls.WebTabStrip.Click"><summary> Is raised when a tab is clicked. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.CssClassBase"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTabStrip" /> itself. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.CssClassTabsPane"><summary> Gets the CSS-Class applied to the pane of <see cref="T:Remotion.Web.UI.Controls.WebTab" /> items. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.CssClassTabsPaneEmpty"><summary> Gets the CSS-Class applied to a pane of <see cref="T:Remotion.Web.UI.Controls.WebTab" /> items if no items are present. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.CssClassTab"><summary> Gets the CSS-Class applied to a <see cref="T:Remotion.Web.UI.Controls.WebTab" />. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.CssClassTabSelected"><summary> Gets the CSS-Class applied to a <see cref="T:Remotion.Web.UI.Controls.WebTab" /> if it is selected. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.CssClassTabAnchorBody"><summary> Gets the CSS-Class applied to a <c>span</c> intended for formatting the inside of the anchor element. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.CssClassTabLast"><summary> Gets the CSS-Class applied to a <c>span</c> intended for clearing the space after the last tab. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.CssClassSeparator"><summary> Gets the CSS-Class applied to a separator. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.CssClassDisabled"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTab" /> when it is displayed disabled. </summary></member><member name="T:Remotion.Web.UI.Controls.WebTreeNode"><summary> A node for the <see cref="T:Remotion.Web.UI.Controls.WebTreeView" />. </summary></member><member name="F:Remotion.Web.UI.Controls.WebTreeNode._ownerControl"><summary> The control to which this object belongs. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.#ctor(System.String,System.String,System.String,Remotion.Web.UI.Controls.IconInfo)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.#ctor(System.String,System.String,Remotion.Web.UI.Controls.IconInfo)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.#ctor(System.String,System.String,System.String)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.#ctor(System.String,System.String)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.#ctor"><summary> Initalizes a new instance. For VS.NET Designer use only. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.Evaluate"><summary> Evaluates the current node. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.EvaluateChildren"><summary> Evaluates the current node's children. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.EvaluateExpand"><summary> Evaluates and expands the current node. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.OnOwnerControlChanged"><summary> Is called when the value of <see cref="P:Remotion.Web.UI.Controls.WebTreeNode.OwnerControl" /> has changed. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.SetParent(Remotion.Web.UI.Controls.WebTreeView,Remotion.Web.UI.Controls.WebTreeNode)"><summary> Sets this node's <see cref="T:Remotion.Web.UI.Controls.WebTreeView" /> and parent <see cref="T:Remotion.Web.UI.Controls.WebTreeNode" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.SetSelected(System.Boolean)"><summary> Sets the node's selection state. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.ItemID"><summary> Gets or sets the ID of this node. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.Text"><summary> Gets or sets the text displayed in this node. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.ToolTip"><summary> Gets or sets the tool-tip displayed in this node. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.Icon"><summary> Gets or sets the icon displayed in this tree node. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.Children"><summary> 
              Gets the child nodes of for node. The node has to be evaluated before the actual child nodes can be accessed.
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.TreeView"><summary> Gets the <see cref="T:Remotion.Web.UI.Controls.WebTreeView" /> to which this node belongs. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.ParentNode"><summary> Gets the parent <see cref="T:Remotion.Web.UI.Controls.WebTreeNode" /> of this node. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.IsExpanded"><summary> Gets or sets a flag that determines whether this node is expanded. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.IsEvaluated"><summary> Gets or sets a flag that determines whether this node's child collection has been populated. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.IsSelected"><summary> Gets or sets a flag that determines whether this node is the selected node of the tree view. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.DisplayedTypeName"><summary> Gets the human readable name of this type. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.OwnerControl"><summary> Gets or sets the control to which this object belongs. </summary></member><member name="T:Remotion.Web.UI.Controls.WebTreeNodeCollection"><summary> A collection of <see cref="T:Remotion.Web.UI.Controls.WebTreeNode" /> objects. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNodeCollection.#ctor(Remotion.Web.UI.Controls.IControl,System.Type[])"><summary> Initializes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNodeCollection.#ctor(Remotion.Web.UI.Controls.IControl)"><summary> Initializes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNodeCollection.Find(System.String)"><summary>
              Finds the <see cref="T:Remotion.Web.UI.Controls.WebTreeNode" /> with a <see cref="P:Remotion.Web.UI.Controls.WebTreeNode.ItemID" /> of <paramref name="id" />.
            </summary><param name="id"> The ID to look for. </param></member><member name="T:Remotion.Web.UI.Controls.WebTreeView"><summary> A tree view. </summary></member><member name="F:Remotion.Web.UI.Controls.WebTreeView.c_pathSeparator"><summary> The separator used for the node path. </summary></member><member name="F:Remotion.Web.UI.Controls.WebTreeView.c_expansionCommandPrefix"><summary> The prefix for the expansion command. </summary></member><member name="F:Remotion.Web.UI.Controls.WebTreeView.c_clickCommandPrefix"><summary> The prefix for the click command. </summary></member><member name="F:Remotion.Web.UI.Controls.WebTreeView._nodes"><summary> The nodes in this tree view. </summary></member><member name="F:Remotion.Web.UI.Controls.WebTreeView._evaluateTreeNode"><summary>
              The delegate called before a node with <see cref="P:Remotion.Web.UI.Controls.WebTreeNode.IsEvaluated" /> set to <see langword="false" />
              is expanded.
            </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.#ctor(Remotion.Web.UI.Controls.IControl)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.#ctor"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)"><summary> Implementation of the <see cref="T:System.Web.UI.IPostBackEventHandler" /> interface. </summary><param name="eventArgument"> &lt;command prefix&gt;&lt;node path&gt;</param></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.HandleExpansionCommandEvent(System.String)"><summary> Handles the expansion command (i.e. expands/collapses the clicked tree node). </summary><param name="eventArgument"> The path to the clicked tree node. </param></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.HandleClickCommandEvent(System.String)"><summary> Handles the click command. </summary><param name="eventArgument"> The path to the clicked tree node. </param></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.OnClick(Remotion.Web.UI.Controls.WebTreeNode,System.String[])"><summary> Fires the <see cref="E:Remotion.Web.UI.Controls.WebTreeView.Click" /> event. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.OnSelectionChanged(Remotion.Web.UI.Controls.WebTreeNode)"><summary> Fires the <see cref="E:Remotion.Web.UI.Controls.WebTreeView.SelectionChanged" /> event. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.EvaluateTreeNodeInternal(Remotion.Web.UI.Controls.WebTreeNode)"><summary>
              Calles the delegate set using <see cref="M:Remotion.Web.UI.Controls.WebTreeView.SetEvaluateTreeNodeDelegate(Remotion.Web.UI.Controls.EvaluateWebTreeNode)" /> with the passed <paramref name="node" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.LoadNodesControlStateRecursive(System.Web.UI.Triplet[],Remotion.Web.UI.Controls.WebTreeNodeCollection)"><summary> Loads the settings of the <paramref name="nodes" /> from <paramref name="nodesState" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.SaveNodesControlStateRecursive(Remotion.Web.UI.Controls.WebTreeNodeCollection)"><summary> Saves the settings of the  <paramref name="nodes" /> and returns this view state </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Globalization#IResourceDispatchTarget#Dispatch(System.Collections.IDictionary)"><summary> Dispatches the resources passed in <paramref name="values" /> to the control's properties. </summary><param name="values"> An <c>IDictonary</c>: &lt;string key, string value&gt;. </param></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Dispatch(System.Collections.IDictionary)"><summary> Dispatches the resources passed in <paramref name="values" /> to the control's properties. </summary><param name="values"> An <c>IDictonary</c>: &lt;string key, string value&gt;. </param></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.LoadResources(Remotion.Globalization.IResourceManager)"><summary> Loads the resources into the control's properties. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.OnPreRender(System.EventArgs)"><summary> Overrides the parent control's <c>OnPreRender</c> method. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.RenderContents(System.Web.UI.HtmlTextWriter)"><summary> Overrides the parent control's <c>RenderContents</c> method. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.RenderNodes(System.Web.UI.HtmlTextWriter,Remotion.Web.UI.Controls.WebTreeNodeCollection,System.Boolean)"><summary> Renders the <paremref name="nodes" /> onto the <paremref name="writer" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.RenderNode(System.Web.UI.HtmlTextWriter,Remotion.Web.UI.Controls.WebTreeNode,System.Boolean,System.Boolean,System.Boolean)"><summary> Renders the <paramref name="node" /> onto the <paremref name="writer" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.RenderNodeExpander(System.Web.UI.HtmlTextWriter,Remotion.Web.UI.Controls.WebTreeNode,System.String,System.Boolean,System.Boolean)"><summary> Renders the <paramref name="node" />'s expander (i.e. +/-) onto the <paremref name="writer" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.RenderNodeHead(System.Web.UI.HtmlTextWriter,Remotion.Web.UI.Controls.WebTreeNode,System.String)"><summary> Renders the <paramref name="node" />'s head (i.e. icon and text) onto the <paremref name="writer" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.RenderNodeChildren(System.Web.UI.HtmlTextWriter,Remotion.Web.UI.Controls.WebTreeNode,System.Boolean,System.Boolean)"><summary> Renders the <paramref name="node" />'s children onto the <paremref name="writer" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.RenderDesignModeContents(System.Web.UI.HtmlTextWriter)"><summary> Renders a dummy tree for design mode. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.FormatNodePath(Remotion.Web.UI.Controls.WebTreeNode)"><summary> Generates the string representation of the <paramref name="node" />'s path. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.ParseNodePath(System.String,System.String[]@)"><summary>
              Parses the string generated by <see cref="M:Remotion.Web.UI.Controls.WebTreeView.FormatNodePath(Remotion.Web.UI.Controls.WebTreeNode)" /> and returns the node to which it points.
            </summary><param name="path"> The path to be parsed. </param><param name="pathSegments"> Returns the IDs that comprised the path. </param></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.GetNodeIcon(Remotion.Web.UI.Controls.WebTreeNode,System.Boolean,System.Boolean)"><summary> Returns the URL of the node icon for the <paramref name="node" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.ResolveNodeIcons"><summary> Resolves the URLs for the node icons. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.SetSelectedNode(Remotion.Web.UI.Controls.WebTreeNode)"><summary> Sets the selected tree node. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IStyledControl#get_ControlStyle"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IStyledControl#get_Attributes"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#ResolveUrl(System.String)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#get_BindingContainer"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#get_TemplateControl"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#set_TemplateControl(System.Web.UI.TemplateControl)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#get_AppRelativeTemplateSourceDirectory"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#set_AppRelativeTemplateSourceDirectory(System.String)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"><summary> A tree view. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.TagKey"><summary> Overrides the parent control's <c>TagKey</c> property. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.Nodes"><summary> Gets the tree nodes displayed by this tree view. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.EnableTopLevelExpander"><summary> 
              Gets or sets a flag that determines whether to show the top level expander and automatically expand the 
              child nodes if the expander is hidden.
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.EnableLookAheadEvaluation"><summary> Gets or sets a flag that determines whether to evaluate the child nodes when expanding a tree node. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.EnableScrollBars"><summary> 
              Gets or sets a flag that determines whether to show scroll bars. Requires also a width for the tree view.
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.EnableWordWrap"><summary> Gets or sets a flag that determines whether to enable word wrapping. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.ShowLines"><summary> Gets or sets a flag that determines whether to show the connection lines between the nodes. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.EnableTreeNodeControlState"><summary> 
              Gets or sets a flag that determines whether the tree node's state information will be saved in the view state.
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.RequiresSynchronousPostBack"><summary>
            Gets or sets a flag that determines whether the post back from a node click must be executed synchronously when the tree is rendered within 
            an <see cref="T:System.Web.UI.UpdatePanel" />.
            </summary></member><member name="E:Remotion.Web.UI.Controls.WebTreeView.Click"><summary> Occurs when a node is clicked. </summary></member><member name="E:Remotion.Web.UI.Controls.WebTreeView.SelectionChanged"><summary> Occurs when the selected node is changed. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.SelectedNode"><summary> Gets the currently selected tree node. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.CssClassNode"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTreeView" /> node. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.CssClassNodeHead"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTreeView" />'s node head. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.CssClassNodeHeadSelected"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTreeView" />'s node head if it is selected. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.CssClassNodeChildren"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTreeView" />'s node children. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.CssClassNodeChildrenNoLines"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTreeView" />'s last node's children. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.CssClassTopLevelNodeChildren"><summary> 
              Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTreeView" />'s top level node's children if the expander is 
              hidden.
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.CssClassRoot"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTreeView" />'s root element. </summary></member><member name="T:Remotion.Web.UI.Controls.EvaluateWebTreeNode"><summary>
              Represents the method called before a <see cref="T:Remotion.Web.UI.Controls.WebTreeNode" /> with <see cref="P:Remotion.Web.UI.Controls.WebTreeNode.IsEvaluated" />
              set to <see langword="false" /> is expanded.
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebTreeNodeEventHandler"><summary> Represents the method that handles an event raised by a <see cref="T:Remotion.Web.UI.Controls.WebTreeNode" />. </summary></member><member name="T:Remotion.Web.UI.Controls.WebTreeNodeEventArgs"><summary> Provides data for event raised by a <see cref="T:Remotion.Web.UI.Controls.WebTreeNode" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNodeEventArgs.#ctor(Remotion.Web.UI.Controls.WebTreeNode)"><summary> Initializes an instance. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNodeEventArgs.Node"><summary> The <see cref="T:Remotion.Web.UI.Controls.WebTreeNode" /> that was clicked. </summary></member><member name="T:Remotion.Web.UI.Controls.WebTreeNodeClickEventHandler"><summary> Represents the method that handles the <c>Click</c> event raised when clicking on a tree node. </summary></member><member name="T:Remotion.Web.UI.Controls.WebTreeNodeClickEventArgs"><summary> Provides data for the <c>Click</c> event. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNodeClickEventArgs.#ctor(Remotion.Web.UI.Controls.WebTreeNode,System.String[])"><summary> Initializes an instance. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNodeClickEventArgs.Path"><summary> The ID path for the clicked node. </summary></member><member name="T:Remotion.Web.UI.Controls.WebUpdatePanel"><summary>
            Extends the ASP.NET <see cref="T:System.Web.UI.UpdatePanel" /> with support for HTML attributes, allowing specification of a <see cref="P:Remotion.Web.UI.Controls.WebUpdatePanel.CssClass" /> 
            or inline styles.
            </summary></member><member name="T:Remotion.Web.UI.Design.ControlToStringConverter"><summary>
              Derive from this class to create a VS.NET designer pick list for a property that 
              references another control.
            </summary></member><member name="M:Remotion.Web.UI.Design.ControlToStringConverter.IsValidTargetControl(System.ComponentModel.IComponent)"><summary>
            Overload this method to defines whether a control should appear in the designer pick list. 
            </summary></member><member name="M:Remotion.Web.UI.Design.StringArrayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)"><summary> Test: Can convert from the <paramref name="sourceType" /> to a <see cref="T:System.String" /> array? </summary><param name="context"> An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param><param name="sourceType"> 
              The <see cref="T:System.Type" /> of the value to be converted into an <see cref="T:System.String" />.
            </param></member><member name="M:Remotion.Web.UI.Design.StringArrayConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)"><summary> Test: Can convert a <see cref="T:System.String" /> array to the <paramref name="destinationType" />? </summary><param name="context"> An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param><param name="destinationType"> 
              The <see cref="T:System.Type" /> of the value to be converted into a <see cref="T:System.String" /> Array.
            </param></member><member name="M:Remotion.Web.UI.Design.StringArrayConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"><summary> Converts <paramref name="value" /> into a <see cref="T:System.String" /> array. </summary><param name="context"> An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param><param name="culture"> The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param><param name="value">  The source value. </param></member><member name="M:Remotion.Web.UI.Design.StringArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"><summary>
              Convertes a <see cref="T:System.String" /> array into the <paramref name="destinationType" />.
            </summary><param name="context"> An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param><param name="culture"> The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param><param name="value"> The <see cref="T:System.String" /> array to be converted. </param><param name="destinationType"> The destination <see cref="T:System.Type" />. </param></member><member name="T:Remotion.Web.UI.Design.WebControlDesigner"><summary>
              A desinger that requries the complete loading of the control.
            </summary></member><member name="T:Remotion.Web.UI.Design.WebDesginModeHelper"><summary>
            Implementation of the <see cref="T:Remotion.Design.IDesignModeHelper" /> interface for environments implementing the <see cref="T:System.Web.UI.Design.IWebApplication" /> designer service.
            </summary></member><member name="T:Remotion.Web.UI.Globalization.ResourceDispatcher"><summary>
              Provides methods for dispatching the resources inside an IResourceManager container
              to a control.
            </summary></member><member name="F:Remotion.Web.UI.Globalization.ResourceDispatcher.c_thisElementID"><summary> Use this ID to dispatch resources to the control that provides the resource manager. </summary></member><member name="M:Remotion.Web.UI.Globalization.ResourceDispatcher.Dispatch(System.Web.UI.Control,Remotion.Globalization.IResourceManager)"><summary>
              Dispatches resources.
            </summary><param name="control">
              The control for which resources are to be dispatched. Must not be <see langname="null" />.
            </param><param name="resourceManager">
              The resource manager to be used. Must not be <see langname="null" />.
            </param></member><member name="M:Remotion.Web.UI.Globalization.ResourceDispatcher.Dispatch(System.Web.UI.Control,System.Boolean)"><summary>
              Dispatches resources provided by <see cref="M:Remotion.Globalization.IObjectWithResources.GetResourceManager" />
            </summary><param name="control">
              The control for which resources are to be dispatched. Must not be <see langname="null" />.
              The control and/or one or more of its parents must implement <see cref="T:Remotion.Globalization.IObjectWithResources" />.
            </param><param name="throwExceptionIfNoResources"> If true and neither the control nor its parents
              define a resource manager, an InvalidOperationException is thrown. </param></member><member name="M:Remotion.Web.UI.Globalization.ResourceDispatcher.Dispatch(System.Web.UI.Control,System.Collections.IDictionary,System.String)"><summary>
              Dispatches an IDictonary of elementID/IDictonary pairs to the specified control.
            </summary><param name="control">
        The control to be dispatched.
    </param><param name="elements">
      The <see cref="T:System.Collections.IDictionary" /> to be dispatched. Must not be <see langname="null" />. Type is IDictionary&lt;string, IDictionary&lt;string, string&gt;&gt;.
    </param><param name="resourceSource">
      The name of the resource manager (used for logging).
    </param></member><member name="M:Remotion.Web.UI.Globalization.ResourceDispatcher.DispatchGeneric(System.Object,System.Collections.IDictionary)"><summary>
              Dispatches the resources passed in <paramref name="values" /> to the properties of <paramref name="obj" />.
            </summary><param name="obj">
      The object to be dispatched. Must not be <see langname="null" />.
    </param><param name="values">
      A dictonary consisting of name/value pairs corresponding to property's name and value resprectively. Must not be <see langname="null" />.
      Type is IDictionary&lt;string, string&gt;.
    </param></member><member name="M:Remotion.Web.UI.Globalization.ResourceDispatcher.GetResources(Remotion.Globalization.IResourceManager,System.String)"><summary>
              Selects all resources matching the <c>prefix</c> into a HashTable.
            </summary><param name="resourceManager">
              The <see cref="T:Remotion.Globalization.IResourceManager" /> to select from. Must not be <see langname="null" />.
            </param><param name="prefix">
              The filter prefix, can be empty. Must not be <see langname="null" />.
            </param></member><member name="T:Remotion.Web.UI.Globalization.ResourceManagerUtility"><summary>
              Functionality for working with <see cref="T:Remotion.Globalization.IResourceManager" /> in Controls.
            </summary></member><member name="M:Remotion.Web.UI.Globalization.ResourceManagerUtility.GetResourceManager(System.Web.UI.Control)"><summary>
              Get resource managers of all controls impementing <see cref="T:Remotion.Globalization.IObjectWithResources" /> in the 
              current control's hierarchy (parents last).
            </summary><param name="control">
              The <see cref="T:System.Web.UI.Control" /> where to start searching for <see cref="T:Remotion.Globalization.IObjectWithResources" />.
            </param></member><member name="M:Remotion.Web.UI.Globalization.ResourceManagerUtility.GetResourceManager(System.Web.UI.Control,System.Boolean)"><summary>
              Get resource managers of all controls impementing <see cref="T:Remotion.Globalization.IObjectWithResources" /> in the 
              current control's hierarchy (parents last).
            </summary><param name="control">
              The <see cref="T:System.Web.UI.Control" /> where to start searching for <see cref="T:Remotion.Globalization.IObjectWithResources" />.
            </param><param name="alwaysIncludeParents">
              If true, parent controls' resource managers are included even if a resource manager has already 
              been found in a child control. Default is true.
            </param></member><member name="M:Remotion.Web.UI.Globalization.ResourceManagerUtility.GetResourceManagerFromCache(Remotion.Globalization.IObjectWithResources)"><summary> Gets the (cached) <see cref="T:Remotion.Globalization.IResourceManager" /> for the passed <see cref="T:Remotion.Globalization.IObjectWithResources" /> </summary><param name="objectWithResources">
              The <see cref="T:Remotion.Globalization.IObjectWithResources" /> to get the <see cref="T:Remotion.Globalization.IResourceManager" /> from.
            </param></member><member name="T:Remotion.Web.UI.Globalization.WebMultiLingualResourcesAttribute"><summary> Specifies the location of the resources used by a <see cref="T:System.Web.UI.Page" /> or <see cref="T:System.Web.UI.UserControl" />. </summary></member><member name="T:Remotion.Web.UI.HtmlHeadAppender"><summary>
              Provides a mechanism to register HTML header elements (e.g., stylesheet or script links).
            </summary></member><member name="F:Remotion.Web.UI.HtmlHeadAppender._hasAppendExecuted"><summary> <see langword="true" /> if <see cref="M:Remotion.Web.UI.HtmlHeadAppender.SetAppended" /> has already executed. </summary></member><member name="M:Remotion.Web.UI.HtmlHeadAppender.#ctor"></member><member name="M:Remotion.Web.UI.HtmlHeadAppender.SetTitle(System.String)"><summary>
              Sets the <c>title</c> of the page.
            </summary><param name="title"> The stirng to be isnerted as the title. </param></member><member name="M:Remotion.Web.UI.HtmlHeadAppender.RegisterStylesheetLink(System.String,Remotion.Web.IResourceUrl,Remotion.Web.UI.HtmlHeadAppender.Priority)"><summary> 
            Registers a style sheet file. 
            <seealso cref="T:Remotion.Web.IResourceUrlFactory" />
            </summary><param name="key"> 
              The unique key identifying the stylesheet file in the headers collection. Must not be <see langword="null" /> or empty.
            </param><param name="url"> The url of the stylesheet file. Must not be <see langword="null" />. </param><param name="priority"> 
              The priority level of the head element. Elements are rendered in the following order:
              Library, UserControl, Page.
            </param></member><member name="M:Remotion.Web.UI.HtmlHeadAppender.RegisterStylesheetLink(System.String,System.String,Remotion.Web.UI.HtmlHeadAppender.Priority)"><summary> Registers a stylesheet file. </summary><param name="key"> 
              The unique key identifying the stylesheet file in the headers collection. Must not be <see langword="null" /> or empty.
            </param><param name="href"> The url of the stylesheet file. Must not be <see langword="null" /> or empty. </param><param name="priority"> 
              The priority level of the head element. Elements are rendered in the following order:
              Library, UserControl, Page.
            </param></member><member name="M:Remotion.Web.UI.HtmlHeadAppender.RegisterStylesheetLink(System.String,Remotion.Web.IResourceUrl)"><summary> 
            Registers a style sheet file. 
            <seealso cref="T:Remotion.Web.IResourceUrlFactory" />
            </summary><param name="key"> 
              The unique key identifying the stylesheet file in the headers collection. Must not be <see langword="null" /> or empty.
            </param><param name="url"> 
            The url of the stylesheet file. Must not be <see langword="null" />. 
            </param></member><member name="M:Remotion.Web.UI.HtmlHeadAppender.RegisterStylesheetLink(System.String,System.String)"><summary> Registers a stylesheet file. </summary><param name="key"> 
              The unique key identifying the stylesheet file in the headers collection. Must not be <see langword="null" /> or empty.
            </param><param name="href"> 
              The url of the stylesheet file. Must not be <see langword="null" /> or empty. 
            </param></member><member name="M:Remotion.Web.UI.HtmlHeadAppender.RegisterJavaScriptInclude(System.String,Remotion.Web.IResourceUrl)"><summary> 
            Registers a javascript file. 
            <seealso cref="T:Remotion.Web.IResourceUrlFactory" />
            </summary><param name="key">
              The unique key identifying the javascript file in the headers collection. Must not be <see langword="null" /> or empty.
            </param><param name="url"> 
              The url of the javascript file. Must not be <see langword="null" />. 
            </param></member><member name="M:Remotion.Web.UI.HtmlHeadAppender.RegisterJavaScriptInclude(System.String,System.String)"><summary> Registers a javascript file. </summary><param name="key">
              The unique key identifying the javascript file in the headers collection. Must not be <see langword="null" /> or empty.
            </param><param name="src"> 
              The url of the javascript file. Must not be <see langword="null" /> or empty. 
            </param></member><member name="M:Remotion.Web.UI.HtmlHeadAppender.RegisterHeadElement(System.String,Remotion.Web.UI.Controls.HtmlHeadElement,Remotion.Web.UI.HtmlHeadAppender.Priority)"><summary> Registers a <see cref="T:Remotion.Web.UI.Controls.HtmlHeadElement" />. </summary><param name="key"> 
              The unique key identifying the header element in the collection. Must not be <see langword="null" /> or empty.
            </param><param name="headElement"> 
              The <see cref="T:Remotion.Web.UI.Controls.HtmlHeadElement" /> representing the head element. Must not be <see langword="null" />. 
            </param><param name="priority"> 
              The priority level of the head element. Elements are rendered in the following order:
              Library, UserControl, Page.
            </param></member><member name="M:Remotion.Web.UI.HtmlHeadAppender.IsRegistered(System.String)"><summary>
              Test's whether an element with this <paramref name="key" /> has already been registered.
            </summary><param name="key"> The string to test. Must not be <see langword="null" /> or empty. </param></member><member name="P:Remotion.Web.UI.HtmlHeadAppender.Current"><summary>
              Gets the <see cref="T:Remotion.Web.UI.HtmlHeadAppender" /> instance.
            </summary></member><member name="P:Remotion.Web.UI.HtmlHeadAppender.HasAppended"><summary> Gets a flag indicating wheter <see cref="M:Remotion.Web.UI.HtmlHeadAppender.SetAppended" /> has been executed. </summary></member><member name="T:Remotion.Web.UI.PostLoadInvoker"><summary>
              Calls <see cref="M:Remotion.Web.UI.Controls.ISupportsPostLoadControl.OnPostLoad" /> on all controls that support the interface.
            </summary></member><member name="T:Remotion.Web.UI.ShowAbortConfirmation"><summary> Defines the options for showing the abort confirmation dialog upon leaving the page. </summary></member><member name="F:Remotion.Web.UI.ShowAbortConfirmation.Never"><summary> Disables the abort confirmation dialog. </summary></member><member name="F:Remotion.Web.UI.ShowAbortConfirmation.Always"><summary> Always displays an abort confirmation dialog before leaving the page. </summary></member><member name="F:Remotion.Web.UI.ShowAbortConfirmation.OnlyIfDirty"><summary> Only displays an abort confirmation dialog when the page is dirty. </summary></member><member name="T:Remotion.Web.UI.SmartPageEvents"><summary> Specifies the client side events supported for registration by the <see cref="T:Remotion.Web.UI.ISmartPage" />. </summary></member><member name="F:Remotion.Web.UI.SmartPageEvents.OnLoad"><summary> Rasied when the document has finished loading. Signature: <c>void Function (hasSubmitted, isCached, isAsynchronous)</c> </summary></member><member name="F:Remotion.Web.UI.SmartPageEvents.OnPostBack"><summary> Raised when the user posts back to the server. Signature: <c>void Function (eventTargetID, eventArgs)</c> </summary></member><member name="F:Remotion.Web.UI.SmartPageEvents.OnAbort"><summary> Raised when the user leaves the page. Signature: <c>void Function (hasSubmitted, isCached)</c> </summary></member><member name="F:Remotion.Web.UI.SmartPageEvents.OnScroll"><summary> Raised when the user scrolls the page. Signature: <c>void Function ()</c> </summary></member><member name="F:Remotion.Web.UI.SmartPageEvents.OnResize"><summary> Raised when the user resizes the page. Signature: <c>void Function ()</c> </summary></member><member name="F:Remotion.Web.UI.SmartPageEvents.OnBeforeUnload"><summary> 
              Raised before the request to load a new page (or reload the current page) is executed. Not supported in Opera.
              Signature: <c>void Function ()</c>
            </summary></member><member name="F:Remotion.Web.UI.SmartPageEvents.OnUnload"><summary> Raised before the page is removed from the window. Signature: <c>void Function ()</c> </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.RegisterClientSidePageEventHandler(Remotion.Web.UI.SmartPageEvents,System.String,System.String)"><summary> Implements <see cref="M:Remotion.Web.UI.ISmartPage.RegisterClientSidePageEventHandler(Remotion.Web.UI.SmartPageEvents,System.String,System.String)">ISmartPage.RegisterClientSidePageEventHandler</see>. </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.RegisterControlForDirtyStateTracking(Remotion.Web.UI.Controls.IEditableControl)"><summary> Implements <see cref="M:Remotion.Web.UI.ISmartPage.RegisterControlForDirtyStateTracking(Remotion.Web.UI.Controls.IEditableControl)">ISmartPage.RegisterClientSidePageEventHandler</see>. </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.RegisterControlForDirtyStateTracking(System.String)"><summary> Implements <see cref="M:Remotion.Web.UI.ISmartPage.RegisterControlForClientSideDirtyStateTracking(System.String)">ISmartPage.RegisterControlForClientSideDirtyStateTracking</see>. </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.EvaluateDirtyState"><summary> Implements <see cref="M:Remotion.Web.UI.ISmartPage.EvaluateDirtyState">ISmartPage.EvaluateDirtyState</see>. </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.GetResourceManager"><summary> Find the <see cref="T:Remotion.Globalization.IResourceManager" /> for this SmartPageInfo. </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.GetResourceManager(System.Type)"><summary> Find the <see cref="T:Remotion.Globalization.IResourceManager" /> for this control info. </summary><param name="localResourcesType"> 
              A type with the <see cref="T:Remotion.Globalization.MultiLingualResourcesAttribute" /> applied to it.
              Typically an <b>enum</b> or the derived class itself.
            </param></member><member name="M:Remotion.Web.UI.SmartPageInfo.DiscardSmartNavigationData"><summary>
              Implements <see cref="M:Remotion.Web.UI.ISmartNavigablePage.DiscardSmartNavigationData">ISmartNavigablePage.DiscardSmartNavigationData</see>.
            </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.SetFocus(Remotion.Web.UI.Controls.IFocusableControl)"><summary>
              Implements <see cref="M:Remotion.Web.UI.ISmartNavigablePage.SetFocus(Remotion.Web.UI.Controls.IFocusableControl)">ISmartNavigablePage.SetFocus(IFocusableControl)</see>.
            </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.SetFocus(System.String)"><summary>
              Implements <see cref="M:Remotion.Web.UI.ISmartNavigablePage.SetFocus(System.String)">ISmartNavigablePage.SetFocus(String)</see>.
            </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.RegisterNavigationControl(Remotion.Web.UI.Controls.INavigationControl)"><summary>
              Implements <see cref="M:Remotion.Web.UI.ISmartNavigablePage.RegisterNavigationControl(Remotion.Web.UI.Controls.INavigationControl)">ISmartNavigablePage.RegisterNavigationControl</see>.
            </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.AppendNavigationUrlParameters(System.String)"><summary>
              Implements <see cref="M:Remotion.Web.UI.ISmartNavigablePage.AppendNavigationUrlParameters(System.String)">ISmartNavigablePage.AppendNavigationUrlParameters</see>.
            </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.GetNavigationUrlParameters"><summary>
              Implements <see cref="M:Remotion.Web.UI.ISmartNavigablePage.GetNavigationUrlParameters">ISmartNavigablePage.GetNavigationUrlParameters</see>.
            </summary></member><member name="P:Remotion.Web.UI.SmartPageInfo.HtmlForm"><summary> 
              Implements <see cref="P:Remotion.Web.UI.ISmartPage.HtmlForm">ISmartPage.HtmlForm</see>.
            </summary></member><member name="P:Remotion.Web.UI.SmartPageInfo.StatusIsSubmittingMessage"><summary>
              Implements <see cref="P:Remotion.Web.UI.ISmartPage.StatusIsSubmittingMessage">ISmartPage.StatusIsSubmittingMessage</see>.
            </summary></member><member name="P:Remotion.Web.UI.SmartPageInfo.AbortMessage"><summary>
              Implements <see cref="P:Remotion.Web.UI.ISmartPage.AbortMessage">ISmartPage.AbortMessage</see>.
            </summary></member><member name="T:Remotion.Web.UI.SmartPageInfo.ResourceIdentifier"><summary> A list of resources. </summary></member><member name="F:Remotion.Web.UI.SmartPageInfo.ResourceIdentifier.AbortMessage"><summary> Displayed when the user attempts to leave the page. </summary></member><member name="F:Remotion.Web.UI.SmartPageInfo.ResourceIdentifier.StatusIsSubmittingMessage"><summary> Displayed when the user attempts to submit while the page is already submitting. </summary></member><member name="M:Remotion.Web.Utilities.ControlHelper.GetParentTemplateControl(System.Web.UI.Control)"><summary>
              This method returns the nearest containing Template Control (i.e., Page or User Control).
            </summary></member><member name="M:Remotion.Web.Utilities.ControlHelper.IsDesignModeForControl(System.Web.UI.Control)"><summary>
              This method returns <see langword="true" /> if the <paramref name="control" /> is in 
              design mode.
            </summary><param name="control"> 
              The <see cref="T:System.Web.UI.Control" /> to be tested for being in design mode. 
            </param></member><member name="M:Remotion.Web.Utilities.ControlHelper.IsDesignMode(Remotion.Web.UI.Controls.IControl)"><summary>
              This method returns <see langword="true" /> if the <paramref name="control" /> is in 
              design mode.
            </summary><param name="control"> 
              The <see cref="T:Remotion.Web.UI.Controls.IControl" /> to be tested for being in design mode. 
            </param></member><member name="M:Remotion.Web.Utilities.ControlHelper.LoadViewStateRecursive(System.Web.UI.Control,System.Object)"><summary> Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s LoadViewStateRecursive method. </summary><param name="target"> The <see cref="T:System.Web.UI.Control" /> to be restored. </param><param name="viewState"> The view state object used for restoring. </param></member><member name="M:Remotion.Web.Utilities.ControlHelper.SaveViewStateRecursive(System.Web.UI.Control)"><summary> Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s SaveViewStateRecursive method. </summary><param name="target"> The <see cref="T:System.Web.UI.Control" /> to be saved. </param></member><member name="M:Remotion.Web.Utilities.ControlHelper.SaveAllState(System.Web.UI.Page)"><summary>Encapsulates the invocation of <see cref="T:System.Web.UI.Page" />'s SaveAllState method.</summary><param name="page">The <see cref="T:System.Web.UI.Page" /> for which SaveAllState will be invoked. Must not be <see langword="null" />.</param></member><member name="M:Remotion.Web.Utilities.ControlHelper.GetChildControlState``1(``0)"><summary>Returns the control states for all controls that are child-controls of the passed <see cref="T:System.Web.UI.Control" />.</summary></member><member name="M:Remotion.Web.Utilities.ControlHelper.SetChildControlState``1(``0,System.Collections.IDictionary)"><summary>Sets the control states for the child control of the passed <see cref="T:System.Web.UI.Control" />.</summary></member><member name="M:Remotion.Web.Utilities.IInternalControlMemberCaller.LoadViewStateRecursive(System.Web.UI.Control,System.Object)"><summary> Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s LoadViewStateRecursive method. </summary><param name="target"> The <see cref="T:System.Web.UI.Control" /> to be restored. </param><param name="viewState"> The view state object used for restoring. </param></member><member name="M:Remotion.Web.Utilities.IInternalControlMemberCaller.SaveViewStateRecursive(System.Web.UI.Control)"><summary> Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s SaveViewStateRecursive method. </summary><param name="target"> The <see cref="T:System.Web.UI.Control" /> to be saved. </param></member><member name="M:Remotion.Web.Utilities.IInternalControlMemberCaller.SaveAllState(System.Web.UI.Page)"><summary>Encapsulates the invocation of <see cref="T:System.Web.UI.Page" />'s SaveAllState method.</summary><param name="page">The <see cref="T:System.Web.UI.Page" /> for which SaveAllState will be invoked. Must not be <see langword="null" />.</param></member><member name="M:Remotion.Web.Utilities.IInternalControlMemberCaller.SaveChildControlState``1(``0)"><summary>Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s SaveChildControlState method.</summary><param name="control">The <see cref="T:System.Web.UI.Control" /> for which SaveChildControlState will be invoked. Must not be <see langword="null" />.</param></member><member name="M:Remotion.Web.Utilities.IInternalControlMemberCaller.SaveControlStateInternal(System.Web.UI.Control)"><summary>Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s SaveControlStateInternal method.</summary><param name="control">The <see cref="T:System.Web.UI.Control" /> for which SaveControlStateInternal will be invoked. Must not be <see langword="null" />.</param></member><member name="M:Remotion.Web.Utilities.IInternalControlMemberCaller.GetChildControlState``1(``0)"><summary>Returns the control states for all controls that are child-controls of the passed <see cref="T:System.Web.UI.Control" />.</summary></member><member name="M:Remotion.Web.Utilities.IInternalControlMemberCaller.SetChildControlState``1(``0,System.Collections.IDictionary)"><summary>Sets the control states for the child control of the passed <see cref="T:System.Web.UI.Control" />.</summary></member><member name="M:Remotion.Web.Utilities.IInternalControlMemberCaller.ClearChildControlState``1(``0)"><summary>Sets the control states for the child control of the passed <see cref="T:System.Web.UI.Control" />.</summary></member><member name="M:Remotion.Web.Utilities.IInternalControlMemberCaller.GetPageStatePersister(System.Web.UI.Page)"><summary>Encapsulates the get-access the the <see cref="T:System.Web.UI.Page" />'s PageStatePersister property.</summary></member><member name="M:Remotion.Web.Utilities.InternalControlMemberCaller.LoadViewStateRecursive(System.Web.UI.Control,System.Object)"><summary> Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s LoadViewStateRecursive method. </summary><param name="target"> The <see cref="T:System.Web.UI.Control" /> to be restored. </param><param name="viewState"> The view state object used for restoring. </param></member><member name="M:Remotion.Web.Utilities.InternalControlMemberCaller.SaveViewStateRecursive(System.Web.UI.Control)"><summary> Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s SaveViewStateRecursive method. </summary><param name="target"> The <see cref="T:System.Web.UI.Control" /> to be saved. </param></member><member name="M:Remotion.Web.Utilities.InternalControlMemberCaller.SaveAllState(System.Web.UI.Page)"><summary>Encapsulates the invocation of <see cref="T:System.Web.UI.Page" />'s SaveAllState method.</summary><param name="page">The <see cref="T:System.Web.UI.Page" /> for which SaveAllState will be invoked. Must not be <see langword="null" />.</param></member><member name="M:Remotion.Web.Utilities.InternalControlMemberCaller.SaveChildControlState``1(``0)"><summary>Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s SaveChildControlState method.</summary><param name="control">The <see cref="T:System.Web.UI.Control" /> for which SaveChildControlState will be invoked. Must not be <see langword="null" />.</param></member><member name="M:Remotion.Web.Utilities.InternalControlMemberCaller.SaveControlStateInternal(System.Web.UI.Control)"><summary>Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s SaveControlStateInternal method.</summary><param name="control">The <see cref="T:System.Web.UI.Control" /> for which SaveControlStateInternal will be invoked. Must not be <see langword="null" />.</param></member><member name="M:Remotion.Web.Utilities.InternalControlMemberCaller.GetChildControlState``1(``0)"><summary>Returns the control states for all controls that are child-controls of the passed <see cref="T:System.Web.UI.Control" />.</summary></member><member name="M:Remotion.Web.Utilities.InternalControlMemberCaller.SetChildControlState``1(``0,System.Collections.IDictionary)"><summary>Sets the control states for the child control of the passed <see cref="T:System.Web.UI.Control" />.</summary></member><member name="M:Remotion.Web.Utilities.InternalControlMemberCaller.ClearChildControlState``1(``0)"><summary>Sets the control states for the child control of the passed <see cref="T:System.Web.UI.Control" />.</summary></member><member name="M:Remotion.Web.Utilities.InternalControlMemberCaller.GetPageStatePersister(System.Web.UI.Page)"><summary>Encapsulates the get-access the the <see cref="T:System.Web.UI.Page" />'s PageStatePersister property.</summary></member><member name="T:Remotion.Web.Utilities.IScriptUtility"><summary>
            Defines the API for registering various javascript-controlled features on the page.
            </summary></member><member name="M:Remotion.Web.Utilities.IScriptUtility.RegisterJavaScriptInclude(Remotion.Web.UI.Controls.IControl,Remotion.Web.UI.HtmlHeadAppender)"><summary>
            Registers the include files required for the calls to <see cref="M:Remotion.Web.Utilities.IScriptUtility.RegisterElementForBorderSpans(Remotion.Web.UI.Controls.IControl,System.String)" />
            and <see cref="M:Remotion.Web.Utilities.IScriptUtility.RegisterResizeOnElement(Remotion.Web.UI.Controls.IControl,System.String,System.String)" />. Call this method during or before the pre-render phase of the page life cycle.
            </summary><param name="control">The <see cref="T:Remotion.Web.UI.Controls.IControl" /> for which the include file is registered.</param><param name="htmlHeadAppender">The <see cref="T:Remotion.Web.UI.HtmlHeadAppender" /> to use for registering the include file.</param></member><member name="M:Remotion.Web.Utilities.IScriptUtility.RegisterElementForBorderSpans(Remotion.Web.UI.Controls.IControl,System.String)"><summary>
            Registers this control for javascript-generated border elements.
            Call <see cref="M:Remotion.Web.Utilities.IScriptUtility.RegisterJavaScriptInclude(Remotion.Web.UI.Controls.IControl,Remotion.Web.UI.HtmlHeadAppender)" /> before calling this method.
            </summary><param name="control">The <see cref="T:Remotion.Web.UI.Controls.IControl" /> for which the border-elements are registered.</param><param name="jQuerySelectorForBorderSpanTarget">&gt;The element-selector in jquery-syntax.</param></member><member name="M:Remotion.Web.Utilities.IScriptUtility.RegisterResizeOnElement(Remotion.Web.UI.Controls.IControl,System.String,System.String)"><summary>
            Registers the <paramref name="eventHandler" /> for the element identified by the <paramref name="jquerySelector" />. 
            Call <see cref="M:Remotion.Web.Utilities.IScriptUtility.RegisterJavaScriptInclude(Remotion.Web.UI.Controls.IControl,Remotion.Web.UI.HtmlHeadAppender)" /> before calling this method.
            </summary><param name="control">The <see cref="T:Remotion.Web.UI.Controls.IControl" /> for which the <paramref name="eventHandler" /> is registered.</param><param name="jquerySelector">The element-selector in jquery-syntax.</param><param name="eventHandler">The eventhandler, with the following signatur: <c>function (element)</c>.</param></member><member name="T:Remotion.Web.Utilities.PageUtility"><summary>
            Utility class for pages.
            </summary></member><member name="M:Remotion.Web.Utilities.PageUtility.GetPostBackCollection(Remotion.Web.UI.IPage)"><summary>
              Gets the form's postback data in a fashion that works for WxePages too. 
              Otherwise simialar to <b>Page.Request.Form</b>.
            </summary><param name="page"> The page to query for the request collection. Must not be <see langword="null" />. </param></member><member name="M:Remotion.Web.Utilities.PageUtility.GetPostBackCollectionItem(Remotion.Web.UI.IPage,System.String)"><summary>
              Gets a single item from the form's postback data in a fashion that works for WxePages too. 
              Otherwise simialar to <b>Page.Request.Form</b>.
            </summary><param name="page"> The page to query for the request collection. Must not be <see langword="null" />. </param><param name="name"> The name of the item to be returned. Must not be <see langword="null" /> or empty. </param></member><member name="T:Remotion.Web.Utilities.ScriptUtility"><summary> Utility class for client-side scripts. </summary></member><member name="M:Remotion.Web.Utilities.ScriptUtility.RegisterClientScriptBlock(System.Web.UI.Control,System.String,System.String)"><summary>
              Used to register a client javascript script to be rendered  at the beginning of the HTML page.
              The script is automatically surrounded by &lt;script&gt; tags.
            </summary><param name="control"> 
              The <see cref="T:System.Web.UI.Control" /> which the script file will be registered. Must not be <see langword="null" />.
            </param><param name="key"> 
              The key identifying the registered script file. Must not be <see langword="null" /> or empty.
            </param><param name="javascript"> 
              The client script that will be registered. Must not be <see langword="null" /> or empty. 
            </param></member><member name="M:Remotion.Web.Utilities.ScriptUtility.RegisterStartupScriptBlock(System.Web.UI.Control,System.String,System.String)"><summary>
              Used to register a client javascript script to be rendered at the end of the HTML page. 
              The script is automatically surrounded by &lt;script&gt; tags.
            </summary><param name="control"> 
              The <see cref="T:System.Web.UI.Control" /> for which the script file will be registered. Must not be <see langword="null" />.
            </param><param name="key"> 
              The key identifying the registered script block. Must not be <see langword="null" /> or empty.
            </param><param name="javascript"> 
              The client script that will be registered. Must not be <see langword="null" /> or empty. 
            </param></member><member name="M:Remotion.Web.Utilities.ScriptUtility.IsPartOfRenderedOutput(System.Web.UI.Control)"><summary>
            Gets a flag that informs the caller if the <paramref name="control" /> will be part of the rendered output. This method only works during the
            Render cycle.
            </summary></member><member name="M:Remotion.Web.Utilities.ScriptUtility.EscapeClientScript(System.String)"><summary> Escapes special characters (e.g. <c>\n</c>) in the passed string. </summary><param name="input"> The unescaped string. Must not be <see langword="null" />. </param></member><member name="T:Remotion.Web.Utilities.UrlUtility"><summary>
            Provided helper functions for working with URLs.
            </summary></member><member name="M:Remotion.Web.Utilities.UrlUtility.GetAbsoluteUrl(System.Web.UI.Page,System.String,System.Boolean)"><summary>
            Makes a relative URL absolute.
            </summary><param name="page">The requesting page.</param><param name="relativeUrl">The relative URL.</param><param name="includeServer"><see langword="true" /> to include the server part. Defaults to <see langword="false" />.</param></member><member name="M:Remotion.Web.Utilities.UrlUtility.GetAbsoluteUrl(System.Web.UI.Page,System.String)"><summary>
            Makes a relative URL absolute.
            </summary><param name="page">The requesting page.</param><param name="relativeUrl">The relative URL.</param></member><member name="M:Remotion.Web.Utilities.UrlUtility.GetAbsoluteUrlWithoutProtocol(System.Web.UI.Page,System.String)"><summary>
            Returns an absolute URL from a relative URL and removes the protocol part (e.g. "http://")
            </summary><param name="page">The requesting page.</param><param name="relativeUrl">The relative URL.</param></member><member name="M:Remotion.Web.Utilities.UrlUtility.GetAbsoluteUrl(System.Web.HttpContextBase,System.String,System.Boolean)"><summary> Makes a relative URL absolute. </summary><param name="context"> The <see cref="T:System.Web.HttpContextBase" /> to be used. Must not be <see langword="null" />. </param><param name="relativeUrl"> The relative URL. Must not be <see langword="null" /> or empty. Must be rooted or absolute. </param><param name="includeServer"><see langword="true" /> to include the server part. Defaults to <see langword="false" />.</param></member><member name="M:Remotion.Web.Utilities.UrlUtility.GetAbsoluteUrl(System.Web.HttpContext,System.String)"><summary> Makes a relative URL absolute. </summary><param name="context"> The <see cref="T:System.Web.HttpContext" />. </param><param name="relativeUrl"> The relative URL. Must not be <see langword="null" />. Must be rooted or absolute. </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.ResolveUrl(System.String)"><summary> Resolves a URL. </summary><param name="url"> The URL. Must not be <see langword="null" /> or empty.</param></member><member name="M:Remotion.Web.Utilities.UrlUtility.ResolveUrl(System.Web.HttpContextBase,System.String)"><summary> Resolves a URL. </summary><param name="context"> The <see cref="T:System.Web.HttpContextBase" /> to be used. Must not be <see langword="null" />. </param><param name="url"> The URL. Must not be <see langword="null" /> or empty.</param></member><member name="M:Remotion.Web.Utilities.UrlUtility.GetAbsoluteUrlWithProtocolAndHostname(System.Web.HttpContextBase,System.String)"><summary> Makes a relative URL absolute and prepends the name of the server used by the request. </summary><param name="context"> The <see cref="T:System.Web.HttpContextBase" /> to be used for retrieving the protocol and hostname. Must not be <see langword="null" />. </param><param name="virtualPath"> The virtual path. Must not be <see langword="null" />. Must be rooted or absolute. </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.GetAbsoluteUrl(System.Web.HttpContextBase,System.String)"><summary> Makes a relative URL absolute. </summary><param name="context"> The <see cref="T:System.Web.HttpContextBase" /> to be used. Must not be <see langword="null" />. </param><param name="virtualPath"> The virtual path. Must not be <see langword="null" />. Must be rooted or absolute. </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.Combine(System.String,System.String)"><summary>
            Combines 2 web URLs. 
            </summary><param name="path1">Can be a relative or a absolute URL.</param><param name="path2">Must be a relative URL or a filename.</param></member><member name="M:Remotion.Web.Utilities.UrlUtility.FormatUrl(System.String,System.Object[])"><summary>
            Formats a URL string with URL encoding. (The <c>format</c> argument is not encoded.)
            </summary></member><member name="M:Remotion.Web.Utilities.UrlUtility.AddParameter(System.String,System.String,System.String,System.Text.Encoding)"><summary> Adds a <paramref name="name" />/<paramref name="value" /> pair to the <paramref name="url" />. </summary><param name="url"> 
      A string containing a url or a query string. Must not be <see langword="null" />. 
      If it contains a query string, the query string must start with the query string delimiter (<c>?</c>).
      It may be empty or end with a delimiter (<c>?</c>, <c>&amp;</c>).
    </param><param name="name"> 
      The name of the url parameter to be added. Must not be <see langword="null" /> or empty. 
    </param><param name="value"> 
      The value of the url parameter to be added. Must not be <see langword="null" />. 
    </param><param name="encoding"> 
      The <see cref="T:System.Text.Encoding" /> used to encode the <paramref name="value" />. Must not be <see langword="null" />.
      Defaults to the <see cref="P:System.Web.HttpResponse.ContentEncoding">HttpResponse.ContentEncoding</see> of the
      <see cref="P:System.Web.HttpContext.Current">Current</see> HttpContext.
    </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.AddParameter(System.String,System.String,System.String)"><summary> Adds a <paramref name="name" />/<paramref name="value" /> pair to the <paramref name="url" />. </summary><param name="url"> 
      A string containing a url or a query string. Must not be <see langword="null" />. 
      If it contains a query string, the query string must start with the query string delimiter (<c>?</c>).
      It may be empty or end with a delimiter (<c>?</c>, <c>&amp;</c>).
    </param><param name="name"> 
      The name of the url parameter to be added. Must not be <see langword="null" /> or empty. 
    </param><param name="value"> 
      The value of the url parameter to be added. Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.AddParameters(System.String,System.Collections.Specialized.NameValueCollection,System.Text.Encoding)"><summary> 
              Adds the name/value pairs from the  <paramref name="queryStringCollection" /> to the <paramref name="url" />. 
            </summary><param name="url"> 
      A string containing a url or a query string. Must not be <see langword="null" />. 
      If it contains a query string, the query string must start with the query string delimiter (<c>?</c>).
      It may be empty or end with a delimiter (<c>?</c>, <c>&amp;</c>).
    </param><param name="queryStringCollection"> 
      The list of name value pairs for the query string.
    </param><param name="encoding"> 
      The <see cref="T:System.Text.Encoding" /> used to encode the values in the <paramref name="queryStringCollection" />. Must not be <see langword="null" />.
      Defaults to the <see cref="P:System.Web.HttpResponse.ContentEncoding">HttpResponse.ContentEncoding</see> of the
      <see cref="P:System.Web.HttpContext.Current">Current</see> HttpContext.
    </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.AddParameters(System.String,System.Collections.Specialized.NameValueCollection)"><summary> 
              Adds the name/value pairs from the  <paramref name="queryStringCollection" /> to the <paramref name="url" />. 
            </summary><param name="url"> 
      A string containing a url or a query string. Must not be <see langword="null" />. 
      If it contains a query string, the query string must start with the query string delimiter (<c>?</c>).
      It may be empty or end with a delimiter (<c>?</c>, <c>&amp;</c>).
    </param><param name="queryStringCollection"> 
      The list of name value pairs for the query string.
    </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.FormatQueryString(System.Collections.Specialized.NameValueCollection,System.Text.Encoding)"><summary> Builds a query string from the <paramref name="queryStringCollection" />. </summary><param name="queryStringCollection"> 
      The list of name value pairs for the query string.
    </param><param name="encoding"> 
      The <see cref="T:System.Text.Encoding" /> used to encode the values in the <paramref name="queryStringCollection" />. Must not be <see langword="null" />.
      Defaults to the <see cref="P:System.Web.HttpResponse.ContentEncoding">HttpResponse.ContentEncoding</see> of the
      <see cref="P:System.Web.HttpContext.Current">Current</see> HttpContext.
    </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.FormatQueryString(System.Collections.Specialized.NameValueCollection)"><summary> Builds a query string from the <paramref name="queryStringCollection" />. </summary><param name="queryStringCollection"> 
      The list of name value pairs for the query string.
    </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.DeleteParameter(System.String,System.String)"><summary> Removes a <paramref name="name" />/value pair from the <paramref name="url" />. </summary><param name="url"> 
      A string containing a url or a query string. Must not be <see langword="null" />.
      If it contains a query string, the query string must start with the query string delimiter (<c>?</c>).
      It may be empty or end with a delimiter (<c>?</c>, <c>&amp;</c>).
    </param><param name="name"> 
      The name of the url parameter to be removed. Must not be <see langword="null" /> or empty. 
    </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.GetParameter(System.String,System.String,System.Text.Encoding)"><summary> Gets the decoded value of the parameter identified by <paramref name="name" />. </summary><param name="url"> 
      A string containing a url or a query string. Must not be <see langword="null" />.
      If it contains a query string, the query string must start with the query string delimiter (<c>?</c>).
      It may be empty or end with a delimiter (<c>?</c>, <c>&amp;</c>).
    </param><param name="name"> 
      The name of the url parameter whose value is to be returned. Must not be <see langword="null" /> or empty. 
    </param><param name="encoding"> 
      The <see cref="T:System.Text.Encoding" /> used to deencode the <paramref name="url" />. Must not be <see langword="null" />.
      Defaults to the <see cref="P:System.Web.HttpRequest.ContentEncoding">HttpRequest.ContentEncoding</see> of the
      <see cref="P:System.Web.HttpContext.Current">Current</see> HttpContext.
    </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.GetParameter(System.String,System.String)"><summary> Gets the decoded value of the parameter identified by <paramref name="name" />. </summary><param name="url"> 
      A string containing a url or a query string. Must not be <see langword="null" />.
      If it contains a query string, the query string must start with the query string delimiter (<c>?</c>).
      It may be empty or end with a delimiter (<c>?</c>, <c>&amp;</c>).
    </param><param name="name"> 
      The name of the url parameter whose value is to be returned. Must not be <see langword="null" /> or empty. 
    </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.GetParameterPosition(System.String,System.String)"><summary> Gets the index of the <paramref name="parameter" /> in the <paramref name="url" />. </summary></member><member name="T:Remotion.Web.Utilities.WebTypeUtility"><summary> Utility methods for handling types in web projects. </summary></member><member name="M:Remotion.Web.Utilities.WebTypeUtility.GetType(System.String)"><summary>
              Loads a type, optionally using an abbreviated type name as defined in 
              <see cref="M:Remotion.Utilities.TypeUtility.ParseAbbreviatedTypeName(System.String)" />.
            </summary></member><member name="M:Remotion.Web.Utilities.WebTypeUtility.GetType(System.String,System.Boolean)"><summary>
              Loads a type, optionally using an abbreviated type name as defined in 
              <see cref="M:Remotion.Utilities.TypeUtility.ParseAbbreviatedTypeName(System.String)" />.
            </summary></member><member name="M:Remotion.Web.Utilities.WebTypeUtility.GetType(System.String,System.Boolean,System.Boolean)"><summary>
              Loads a type, optionally using an abbreviated type name as defined in 
              <see cref="M:Remotion.Utilities.TypeUtility.ParseAbbreviatedTypeName(System.String)" />.
            </summary></member></members></doc>